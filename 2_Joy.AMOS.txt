 Rem ' Joy - Die Mutter aller Spiele' 
 Rem ' Hauptteil (\xdcberarbeitete Version von ASM-Das Spiel)' 
 Rem ' Programm 1992/93 erstellt von Michael Kafke    ' 
 Rem ' Grafiken 1991/92/93 gezeichnet von Daniel Schwen   ' 
 Rem '' 
 Set Buffer 90 
 Kill Editor 
 Get Rom Fonts 
 Bob Update On 
 Amos Lock 
 ' 'On Error Goto FEHLER' 
 Dim inventar$ ( 24 ) , flag$ ( 70 ) , verb$ ( 16 ) , geg$ ( 255 ) , transport$ ( 255 ) , raum$ ( 26 ) , zurück$ ( 26 ) , betreten$ ( 26 ) , person$ ( 20 ) , person$ ( 20 ) , personen$ ( 10 ) , reden$ ( 20 ) , ereignis$ ( 102 ) , objekt$ ( 20 ) , invent$ ( 24 ) , raumaddierer$ ( 26 ) , c$ ( 9 ) , name$ ( 11 ) , score$ ( 11 ) , handlung$ ( 6 ) 
 Dim frage$ ( 11 ) , antwort$ ( 10 ) , ja$ ( 10 ) , nein$ ( 10 ) , erscheinen$ ( 11 ) , alterscheinen$ ( 11 ) , rtext$ ( 11 ) , fahrx$ ( 9 ) , fahry$ ( 9 ) , gespeichert$ ( 10 ) , scr$ ( 25 ) 
 Dim feld$ ( 4 , 16 ) , stat$ ( 7 ) , graus$ ( 160 ) , y$ ( 10 ) , scr$ ( 10 ) , scr2$ ( 10 ) , str$ ( 10 ) , rl$ ( 54 , 133 ) , kurve$ ( 33 , 69 ) , lrand$ ( 54 ) , breite$ ( 54 ) , objekt$ ( 54 ) , obj$ ( 10 ) , mitte$ ( 10 ) 
 Dim hausx$ ( 10 ) , hausy$ ( 10 ) , sperrex$ ( 10 ) , sperrey$ ( 10 ) , mikrox$ ( 10 ) , mikroy$ ( 10 ) , keksx$ ( 10 ) , keksy$ ( 10 ) , baumx$ ( 10 ) , baumy$ ( 10 ) , omax$ ( 10 ) , omay$ ( 10 ) 
 Gosub initialisieren 
 
 Label parser: 
 geg1 = 0 
 geg2 = 0 
 mc = 0 
 While mc = 0 
    taste$ = Inkey$ 
    If taste$ = Chr$ ( 27 ) 
       Gosub beenden 
    EndIf 
    pers = 0 
    mc = Mouse Click 
    Gosub test_screen 
    geg1 = geg 
    Gosub schreibe_satz 
 Wend 
 If mc = 2 
    Gosub verb_rm 
    Gosub schreibe_satz 
 EndIf 
 If mc = 1 
    Gosub verb_ausführen 
    Gosub verb_wählen 
 EndIf 
 Goto parser 
 
 Label fehler: 
 Call 'screco$' 
 Call 'txt$' [ Chr$ ( 10 ) + "ES IST EIN FEHLER PASSIERT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
 Call 'clickmouse$' 
 Call 'screco$' 
 Call 'verb_raus$' 
 verb = 1 
 Call 'verb_rein$' 
 Resume parser 
 
 Label beenden: 
 Call 'befehle_runter$' 
 Screen 1 
 Get Cblock 3 , 0 , 0 , 320 , 90 
 Goto nochmal 
 
 Label schreibe_satz: 
 If Not Mouse Screen = 3 
    Screen 1 
    Ink 0 , 5 
    If geg$ ( geg1 ) = "RÜCK" 
       If verb = 10 
          Text 2 , 6 , verb$ ( verb ) + geg$ ( geg1 ) + geg$ ( 0 ) 
          Return 
       Else 
          geg1 = 0 
       EndIf 
    EndIf 
    If geg1 = 227 And verb = 10 
       Text 2 , 6 , verb$ ( verb ) + geg$ ( geg1 ) + geg$ ( 0 ) 
       Return 
    EndIf 
    Text 2 , 6 , verb$ ( verb ) + " " + geg$ ( geg1 ) + geg$ ( 0 ) 
 Else 
    Screen 1 
    Text 2 , 6 , verb$ ( verb ) + " " + person$ ( pers ) + geg$ ( 0 ) 
 EndIf 
 Return 
 
 Label schreibe_satzteil: 
 If Not Mouse Screen = 3 
    Screen 1 
    Ink 0 , 5 
    If ( geg$ ( geg2 ) = "RÜCK" ) Or ( geg1 = geg2 ) 
       geg2 = 0 
    EndIf 
    Text 2 , 6 , verb$ ( verb ) + " " + geg$ ( geg1 ) + " AN " + geg$ ( geg2 ) + geg$ ( 0 ) 
 Else 
    Screen 1 
    Text 2 , 6 , verb$ ( verb ) + " " + geg$ ( geg1 ) + " AN " + person$ ( pers ) + geg$ ( 0 ) 
 EndIf 
 Return 
 
 Label verb_rm: 
 If Mouse Screen = 0 
    Call 'txt$' [ Chr$ ( 10 ) + "PUNKTE:" + Str$ ( punkte ) + Chr$ ( 10 ) + "KLICKS:" + Str$ ( zeit ) + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    While Mouse Key = 2 
    Wend 
    If Mouse Key = 3 
       Ink 0 
       Bar 10 , 10 To 310 , 47 
       Ink 1 , 0 
       Box 11 , 11 To 309 , 46 
       Text 65 , 20 , "WIEVIELE KLICKS LANG WILLST DU WARTEN ?" 
       Call 'eingabe$' [ 150 , 28 , 10 , "" , 1 , 2 ] 
       If Val ( Param$ ) > 0 
          Call 'befehle_runter$' 
          For i = 1 To Val ( Param$ ) 
             Gosub handlung 
          Next 
          Call 'befehle_hoch$' 
       EndIf 
    EndIf 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If Mouse Screen = 1 
    If Mouse Zone = 2 And ( Y Screen ( Y Mouse ) / 9 + 9 = 10 ) 
       Call 'verb_raus$' 
       verb2 = verb 
       verb = 10 
       Paste Icon 58 , ( verb - 9 ) * 9 , verb + 15 
       r = 1 
       
       Label gehe_zu: 
       Gosub init_rtext 
       Gosub init_text 
       rm = 0 
       While Mouse Click <> 1 
          ym = ( Y Screen ( Y Mouse ) + 4 ) / 8 
          If ym > 0 And ym < anzahl 
             If rtext$ ( ym ) = raum 
                Gosub init_text 
                rm = ym 
                Goto gehe_zu2 
             EndIf 
          EndIf 
          If ym <> rm And ym > 0 And ym < anzahl 
             Gosub init_text 
             Ink 17 , 1 
             t = Text Length ( raum$ ( rtext$ ( ym ) ) ) 
             Text 160 - t / 2 , ym * 8 + 1 , raum$ ( rtext$ ( ym ) ) 
             rm = ym 
          EndIf 
          If ym <> rm And ym = anzahl 
             Gosub init_text 
             Ink 17 , 1 
             t = Text Length ( "WEITER" ) 
             Text 160 - t / 2 , ym * 8 + 1 , "WEITER" 
             rm = ym 
          EndIf 
          If ym < 1 Or ym > anzahl 
             Gosub init_text 
             rm = 0 
          EndIf 
          Label gehe_zu2: 
       Wend 
       If ym < 0 Or ym > anzahl 
          Call 'screco$' 
          Return 
       EndIf 
       If ym = anzahl 
          If r = 27 
             r = 1 
          EndIf 
          Call 'screco$' 
          Goto gehe_zu 
       EndIf 
       If ym > 0 And ym < anzahl And Not rtext$ ( ym ) = raum 
          Gosub pruefsprung 
          gehe = 1 
          Gosub initraum 
          Return 
       EndIf 
       Call 'screco$' 
    EndIf 
 EndIf 
 If Mouse Screen = 3 
    verb2 = verb 
    verb = 16 
    Screen 1 
    Text 2 , 6 , "REDE MIT " + person$ ( pers ) + geg$ ( 0 ) 
    Gosub "Raum" + Str$ ( raum ) - " " 
    Gosub raum_alle 
    verb = verb2 
 EndIf 
 Return 
 
 Label pruefsprung: 
 r = rtext$ ( ym ) 
 If raum = 1 
    If r > 3 
       flag$ ( 1 ) = 1 
    EndIf 
    If handlung$ ( 3 ) = 5 And handlung$ ( 4 ) = 0 
       handlung$ ( 4 ) = 1 
       Call 'txt$' [ ereignis$ ( 29 ) ] 
       Call 'clickmouse$' 
       person$ ( 2 ) = 0 
       person$ ( 16 ) = 20 
    EndIf 
 EndIf 
 If raum = 3 And ( flag$ ( 9 ) = 1 Or flag$ ( 10 ) = 1 Or flag$ ( 11 ) = 1 Or flag$ ( 12 ) = 1 Or flag$ ( 13 ) = 1 Or flag$ ( 52 ) = 1 ) 
    Call 'txt$' [ ereignis$ ( 8 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If raum = 6 And r = 10 Or r > 11 And flag$ ( 26 ) = 1 
    Call 'txt$' [ Chr$ ( 10 ) + "MACH DAS LIEBER NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If raum = 14 And flag$ ( 36 ) = 0 
    Call 'txt$' [ Chr$ ( 10 ) + "DIE TÜR IST ZU !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If raum = 16 
    If flag$ ( 39 ) = 0 And ( transport$ ( 150 ) = 2 Or transport$ ( 151 ) = 2 Or transport$ ( 152 ) = 2 Or transport$ ( 153 ) = 2 Or transport$ ( 154 ) = 2 Or transport$ ( 155 ) = 2 Or transport$ ( 162 ) = 2 Or transport$ ( 163 ) = 2 Or transport$ ( 164 ) = 2 Or transport$ ( 165 ) = 2 ) 
       go = 1 
       Goto game_over 
    EndIf 
 EndIf 
 If raum = 19 And flag$ ( 47 ) = 0 
    Call 'txt$' [ Chr$ ( 10 ) + "DIE TÜR IST ZU !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 Return 
 
 Label init_rtext: 
 For i = 1 To 10 
    rtext$ ( i ) = 0 
 Next 
 anzahl = 0 
 s = 1 
 Do 
    If betreten$ ( r ) = 1 
       rtext$ ( s ) = r 
       Inc s 
       Inc anzahl 
    EndIf 
    Inc r 
    If r > 26 Or s > 10 
       Exit 
    EndIf 
 Loop 
 Inc anzahl 
 Screen 0 
 Screen Copy 4 , 118 , 1 , 201 , anzahl * 8 + 5 To 0 , 118 , 1 , 11100000 
 Ink 1 
 Box 119 , 2 To 201 , anzahl * 8 + 3 
 Return 
 
 Label init_text: 
 Screen 0 
 Gr Writing 0 
 Ink 1 , 0 
 y = 1 
 s = 1 
 While rtext$ ( s ) > 0 
    t = Text Length ( raum$ ( rtext$ ( s ) ) ) 
    Text 160 - t / 2 , ( y * 8 ) + 1 , raum$ ( rtext$ ( s ) ) 
    Inc y 
    Inc s 
 Wend 
 t = Text Length ( "WEITER" ) 
 Text 160 - t / 2 , y * 8 + 1 , "WEITER" 
 Return 
 
 Label verb_ausführen: 
 If geg1 = 0 
    Return 
 EndIf 
 If raum = 14 And geg1 = 140 And handlung$ ( 3 ) = 6 
    Call 'txt$' [ ereignis$ ( 86 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 1 
    If Mouse Screen = 0 
       Call 'txt$' [ objekt$ ( geg1 - raumaddierer$ ( raum - 1 ) ) ] 
       Call 'clickmouse$' 
    EndIf 
    If Mouse Screen = 1 
       Screen 1 
       mz = Mouse Zone 
       If mz > 4 
          Call 'txt$' [ invent$ ( mz - 4 ) ] 
          Call 'clickmouse$' 
       EndIf 
    EndIf 
 EndIf 
 If verb = 7 Or verb = 13 
    Gosub "Raum" + Str$ ( raum ) - " " 
    Label parser2: 
    mc = 0 
    mz = 0 
    While mc = 0 
       pers = 0 
       mc = Mouse Click 
       Gosub test_screen 
       geg2 = geg 
       Gosub schreibe_satzteil 
    Wend 
    If mc = 2 
       Gosub verb_rm 
       Gosub schreibe_satzteil 
    EndIf 
    If mc = 1 
       Gosub verb_wählen 
    EndIf 
    If geg2 = 0 And pers = 0 
       Goto parser2 
    EndIf 
    If mc = 1 
       Gosub verb_ausführen2 
    EndIf 
    Goto parser 
 EndIf 
 If verb = 10 And ( geg$ ( geg1 ) = "RÜCK" ) 
    Gosub "RAUM" + ( Str$ ( raum ) - " " ) 
    r = zurück$ ( raum ) 
    Gosub initraum 
    Pop 
    Goto parser 
 EndIf 
 If verb = 12 
    If Mouse Screen = 0 
       Gosub "RAUM" + ( Str$ ( raum ) - " " ) 
       g = geg1 
       Gosub aufnehmen 
       Pop 
       Goto parser 
    EndIf 
    If Mouse Screen = 1 And mz > 4 
       Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
 EndIf 
 
 Label verb_ausführen2: 
 Gosub handlung 
 Gosub "Raum" + Str$ ( raum ) - " " 
 Gosub raum_alle 
 Gosub verb_bestätigen 
 Call 'screco$' 
 Return 
 
 Label verb_wählen: 
 Screen 1 
 mz = Mouse Zone 
 If Mouse Screen = 1 And mz > 0 And mz < 5 
    If mz = 1 
       Call 'verb_raus$' 
       verb2 = verb 
       verb = Y Screen ( Y Mouse ) / 9 
       Paste Icon 0 , verb * 9 , verb + 15 
       If verb = 6 
          Gosub handlung 
          Screen 1 
          Text 2 , 6 , "UMSCHAUEN: " + raum$ ( raum ) 
          Call 'txt$' [ umgebung$ ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Screen 1 
          Text 2 , 6 , geg$ ( 0 ) 
          Text 2 , 6 , verb$ ( verb ) + geg$ ( 0 ) 
          Paste Icon 0 , verb * 9 , verb 
          verb = verb2 
          Call 'verb_rein$' 
       EndIf 
       Pop 
       Goto parser 
    EndIf 
    If mz = 2 
       Call 'verb_raus$' 
       verb2 = verb 
       verb = Y Screen ( Y Mouse ) / 9 + 9 
       Paste Icon 58 , ( verb - 9 ) * 9 , verb + 15 
       If verb = 11 
          Gosub handlung 
          geg = 0 
          Gosub "Raum" + ( Str$ ( raum ) - " " ) 
          r = zurück$ ( raum ) 
          Call 'maus_aus$' 
          Gosub initraum 
          Call 'maus_an$' 
          Screen 1 
          Call 'iconbank$' [ 0 ] 
          Paste Icon 58 , ( verb - 9 ) * 9 , verb 
          verb = verb2 
          Call 'verb_rein$' 
       EndIf 
       Pop 
       Goto parser 
    EndIf 
    If mz = 3 
       Call 'verb_raus$' 
       verb2 = verb 
       verb = 14 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "SPIELSTAND SPEICHERN" + geg$ ( 0 ) 
       Paste Icon 58 , 46 , 29 
       Call 'txt$' [ Chr$ ( 10 ) + "HAUN SIE MAL KURZ IHRE SAVEDISK IN DF0:" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Dir$ = "Df0:" 
       If Dfree < 6000 
          Call 'txt$' [ Chr$ ( 10 ) + "DIE DISKETTE IST ZU VOLL !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          verb = verb2 
          Screen 1 
          Paste Icon 58 , 46 , 14 
          Call 'verb_rein$' 
          Pop 
          Goto parser 
       EndIf 
       Reserve As Work 12 , 36 
       n$ = "Df0:" 
       Dreg ( 1 ) = Varptr ( n$ ) 
       Dreg ( 2 ) = - 2 
       lock = Doscall ( - 84 ) 
       Dreg ( 1 ) = lock 
       Dreg ( 2 ) = Start ( 12 ) 
       r = Doscall ( - 114 ) 
       wrpro = Leek ( Start ( 12 ) + 8 ) 
       Dreg ( 1 ) = lock 
       r = Doscall ( - 90 ) 
       Erase 12 
       If wrpro = 80 
          Call 'txt$' [ Chr$ ( 10 ) + "DIESE DISKETTE IST SCHREIBGESCHÜTZT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'screco$' 
          Screen 1 
          Paste Icon 58 , 46 , 14 
          Call 'verb_rein$' 
          Pop 
          Goto parser 
       Else If wrpro = 81 
          Call 'txt$' [ Chr$ ( 10 ) + "DIESE DISKETTE IST NICHT VALIDIERT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'screco$' 
          Screen 1 
          Paste Icon 58 , 46 , 14 
          Call 'verb_rein$' 
          Pop 
          Goto parser 
       EndIf 
       Gosub hol_namen 
       Ink 0 
       Bar 10 , 10 To 310 , 47 
       Ink 1 , 0 
       Box 11 , 11 To 309 , 46 
       Text 32 , 20 , "BITTE GEBEN SIE DEN NAMEN FÜR DEN SPIELSTAND EIN:" 
       altname$ = antwort$ ( ym ) 
       Call 'eingabe$' [ 135 , 28 , 10 , antwort$ ( ym ) , 1 , 1 ] 
       name$ = Param$ 
       Call 'txt$' [ Chr$ ( 10 ) + "ICH SPEICHERE DEN SPIELSTAND FÜR DICH !" + Chr$ ( 10 ) + "(ALLES MUß MAN SELBER MACHEN)" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       If Exist ( "Df0:Joy_File_" + Str$ ( ym ) - " " + "." + altname$ ) 
          Kill "Df0:Joy_File_" + Str$ ( ym ) - " " + "." + altname$ 
       EndIf 
       Set Input 13 , 10 
       Open Out 1 , "Df0:Joy_File_" + Str$ ( ym ) - " " + "." + name$ 
       Print # 1 , liste 
       Print # 1 , zeit 
       Print # 1 , punkte 
       Print # 1 , raum 
       Print # 1 , lab 
       Print # 1 , etage 
       Print # 1 , versuch 
       For i = 1 To 6 
          Print # 1 , handlung$ ( i ) 
       Next 
       For i = 1 To 20 
          Print # 1 , person$ ( i ) 
          Print # 1 , person$ ( i ) 
          Print # 1 , reden$ ( i ) 
       Next 
       For i = 1 To 26 
          Print # 1 , betreten$ ( i ) 
       Next 
       For i = 1 To 24 
          Print # 1 , inventar$ ( i ) 
          Print # 1 , invent$ ( i ) 
       Next 
       For i = 1 To 69 
          Print # 1 , flag$ ( i ) 
       Next 
       For i = 1 To 255 
          Print # 1 , geg$ ( i ) 
          Print # 1 , transport$ ( i ) 
       Next 
       Close 1 
       verb = verb2 
       Call 'screco$' 
       Screen 1 
       Paste Icon 58 , 46 , 14 
       Call 'verb_rein$' 
       Pop 
       Goto parser 
    EndIf 
    If mz = 4 
       Call 'verb_raus$' 
       verb2 = verb 
       verb = 15 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "SPIELSTAND LADEN" + geg$ ( 0 ) 
       Paste Icon 58 , 68 , 30 
       Call 'txt$' [ Chr$ ( 10 ) + "HAUN SIE MAL KURZ IHRE SAVEDISK IN DF0:" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Dir$ = "Df0:" 
       Gosub hol_namen 
       If gespeichert$ ( ym ) = 0 
          Call 'txt$' [ ereignis$ ( 68 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          verb = verb2 
          Screen 1 
          Paste Icon 58 , 68 , 15 
          Call 'verb_rein$' 
          Pop 
          Goto parser 
       EndIf 
       Call 'txt$' [ Chr$ ( 10 ) + "ICH LADE DEN SPIELSTAND FÜR DICH !" + Chr$ ( 10 ) + "(ALLES MUß MAN SELBER MACHEN)" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Set Input 13 , 10 
       Open In 1 , "Df0:Joy_File_" + Str$ ( ym ) - " " + "." + antwort$ ( ym ) 
       Input # 1 , liste 
       Input # 1 , zeit 
       Input # 1 , punkte 
       Input # 1 , r 
       Input # 1 , lab 
       Input # 1 , etage 
       Input # 1 , versuch 
       For i = 1 To 6 
          Input # 1 , handlung$ ( i ) 
       Next 
       For i = 1 To 20 
          Line Input # 1 , person$ ( i ) 
          Input # 1 , person$ ( i ) 
          Input # 1 , reden$ ( i ) 
       Next 
       For i = 1 To 26 
          Input # 1 , betreten$ ( i ) 
       Next 
       For i = 1 To 24 
          Input # 1 , inventar$ ( i ) 
          Line Input # 1 , invent$ ( i ) 
       Next 
       For i = 1 To 69 
          Input # 1 , flag$ ( i ) 
       Next 
       For i = 1 To 255 
          Line Input # 1 , geg$ ( i ) 
          Input # 1 , transport$ ( i ) 
       Next 
       Close 1 
       verb = verb2 
       Screen 1 
       Paste Icon 58 , 68 , 15 
       Call 'verb_rein$' 
       Gosub inventory 
       Gosub initraum 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 Return 
 
 Label hol_namen: 
 For i = 1 To 9 
    antwort$ ( i ) = "FILE" + Str$ ( i ) - " " 
    gespeichert$ ( i ) = 0 
 Next 
 file$ = Dir First ( "Df0:" ) 
 Repeat 
    If Left$ ( file$ , 10 ) = " Joy_File_" 
       i = Asc ( Mid$ ( file$ , 11 , 1 ) ) - 48 
       antwort$ ( i ) = Mid$ ( file$ , 13 , 10 ) - " " 
       gespeichert$ ( i ) = 1 
    EndIf 
    file$ = Dir Next 
 Until file$ = "" 
 Screen Copy 4 , 118 , 1 , 201 , 77 To 0 , 118 , 1 , 11100000 
 Screen 0 
 Ink 1 
 Box 119 , 2 To 199 , 75 
 Gosub zeige_namen 
 rm = 0 
 While Mouse Click <> 1 
    ym = ( Y Screen ( Y Mouse ) + 4 ) / 8 
    If ym <> rm And ym > 0 And ym < 10 
       Gosub zeige_namen 
       If gespeichert$ ( ym ) = 0 
          Ink 17 , 1 
          t = Text Length ( antwort$ ( ym ) ) 
          Text 160 - t / 2 , ym * 8 + 1 , antwort$ ( ym ) 
       EndIf 
       rm = ym 
    EndIf 
    If ym < 1 Or ym > 9 
       Gosub zeige_namen 
       rm = 0 
    EndIf 
 Wend 
 If ym < 0 Or ym > 9 
    Call 'screco$' 
    Screen 1 
    If verb = 14 
       Paste Icon 58 , 46 , 14 
    Else 
       Paste Icon 58 , 68 , 15 
    EndIf 
    verb = verb2 
    Call 'verb_rein$' 
    Pop 
    Goto parser 
 EndIf 
 Return 
 
 Label zeige_namen: 
 Screen 0 
 Gr Writing 0 
 Ink 1 , 0 
 For i = 1 To 9 
    t = Text Length ( antwort$ ( i ) ) 
    Text 160 - t / 2 , ( i * 8 ) + 1 , antwort$ ( i ) 
 Next 
 Return 
 
 Label verb_bestätigen: 
 If verb = 2 
    If oeffne = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "GEHT NICHT AUF !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       oeffne = 0 
    EndIf 
 EndIf 
 If verb = 3 
    If schliesse = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "DAS GEHT NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       schliesse = 0 
    EndIf 
 EndIf 
 If verb = 4 
    If ziehe = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "DAS GEHT NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       ziehe = 0 
    EndIf 
 EndIf 
 If verb = 5 
    If druecke = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "ES PASSIERT NICHTS !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       druecke = 0 
    EndIf 
 EndIf 
 If verb = 7 
    If benutze = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "ES PASSIERT NICHTS !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       benutze = 0 
    EndIf 
 EndIf 
 If verb = 8 
    If schalte = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "DAS GEHT NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       schalte = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       geg$ ( geg1 ) = geg$ ( geg1 ) + "(AN)" 
    EndIf 
 EndIf 
 If verb = 9 
    If schalte = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "DAS GEHT NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       schalte = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       geg$ ( geg1 ) = geg$ ( geg1 ) - "(AN)" 
    EndIf 
 EndIf 
 If verb = 10 
    If gehe = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "DORT KANNST DU NICHT HINGEHEN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       gehe = 0 
    EndIf 
 EndIf 
 If verb = 13 
    If gib = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "ABER VIELLEICHT KANNST DU DIESEN GEGENSTAND" + Chr$ ( 10 ) + "NOCH GEBRAUCHEN ?" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    Else 
       gib = 0 
    EndIf 
 EndIf 
 Return 
 
 Label test_screen: 
 If Mouse Screen = 0 
    Screen 0 
    mz = Mouse Zone 
    geg = raumaddierer$ ( raum - 1 ) + mz 
    If geg = raumaddierer$ ( raum - 1 ) 
       geg = 0 
    EndIf 
 EndIf 
 If Mouse Screen = 1 
    Screen 1 
    mz = Mouse Zone 
    If mz > 4 
       geg = inventar$ ( mz - 4 ) 
    Else 
       geg = 0 
    EndIf 
 EndIf 
 If Mouse Screen = 3 
    Screen 3 
    mz = Mouse Zone 
    geg = 0 
    pers = personen$ ( mz ) 
 EndIf 
 Return 
 
 Label raum1: 
 If verb = 1 
    If geg1 = 6 And handlung$ ( 2 ) = 2 
       gehe = 1 
       r = 22 
       Gosub initraum 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 7 And transport$ ( 11 ) = 1 
       Call 'txt$' [ ereignis$ ( 3 ) ] 
       Call 'clickmouse$' 
       g = 11 
       mz = 11 
       Gosub aufnehmen 
       Bset.<> 0 , flag$ ( 53 ) 
       Bclr 0 , flag$ ( 58 ) 
    EndIf 
    If geg1 = 8 And transport$ ( 8 ) = 1 
       flag$ ( 2 ) = 1 
       transport$ ( 8 ) = 0 
       transport$ ( 9 ) = 1 
       Screen 2 
       Bob Off 8 
       Bob 9 , 57 , 123 , 2 
       Call 'screco$' 
       Screen 0 
       Reset Zone 8 
       Set Zone 9 , 57 , 123 To 85 , 127 
    EndIf 
    If geg1 = 12 
       Bset.<> 2 , flag$ ( 53 ) 
    EndIf 
    If geg1 = 13 
       flag$ ( 54 ) = 1 
       person$ ( 1 ) = 1 
       Gosub personendisplay 
       If person$ ( 1 ) = "???" And flag$ ( 56 ) = 1 
          person$ ( 1 ) = "JUPP" 
       EndIf 
    EndIf 
 EndIf 
 If verb = 2 And geg1 = 14 And flag$ ( 1 ) = 0 And transport$ ( 2 ) = 1 
    oeffne = 1 
    flag$ ( 1 ) = 1 
    Screen 2 
    Bob Off 2 
    Bob 14 , 49 , 0 , 4 
    Call 'screco$' 
    Screen 0 
    Reset Zone 2 
    Set Zone 2 , 61 , 20 To 67 , 30 
    If flag$ ( 56 ) = 0 
       Call 'txt$' [ ereignis$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       flag$ ( 56 ) = 1 
       betreten$ ( 2 ) = 0 
       betreten$ ( 3 ) = 0 
       For i = 2 To 10 
          If person$ ( i ) = 4 
             person$ ( i ) = 1 
          EndIf 
       Next 
       Gosub personendisplay 
       If person$ ( 1 ) = "???" 
          person$ ( 1 ) = "JUPP" 
       EndIf 
    EndIf 
 EndIf 
 If verb = 3 And geg1 = 14 And flag$ ( 1 ) = 1 And transport$ ( 2 ) = 1 
    schliesse = 1 
    flag$ ( 1 ) = 0 
    Screen 2 
    Bob Off 14 
    Bob 2 , 54 , 41 , 3 
    Call 'screco$' 
    Screen 0 
    Set Zone 2 , 50 , 39 To 61 , 51 
 EndIf 
 If verb = 4 
    If geg1 = 2 And transport$ ( 2 ) = 1 
       ziehe = 1 
       If ( flag$ ( 1 ) = 0 Or flag$ ( 1 ) = 2 ) 
          g = geg1 
          Gosub aufnehmen 
       Else 
          Screen 2 
          Bob 14 , 49 , 0 , 8 
          g = 2 
          mz = 2 
          Gosub aufnehmen 
       EndIf 
    EndIf 
 EndIf 
 If ( verb = 5 Or verb = 8 ) And geg1 = 10 
    Call 'txt$' [ Chr$ ( 10 ) + "ABER ES IST DOCH NOCH HELL!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 7 
    If geg1 = 2 And geg2 = 14 And transport$ ( 2 ) = 2 
       benutze = 1 
       g = 2 
       Gosub ablegen 
       transport$ ( 2 ) = 1 
       If ( flag$ ( 1 ) = 0 Or flag$ ( 1 ) = 2 ) 
          Screen 2 
          Bob 2 , 54 , 41 , 3 
          Call 'screco$' 
          Screen 0 
          Set Zone 2 , 50 , 39 To 61 , 51 
       Else 
          Screen 2 
          Bob 14 , 49 , 0 , 4 
          Call 'screco$' 
          Screen 0 
          Set Zone 2 , 61 , 20 To 67 , 30 
       EndIf 
    EndIf 
    If geg1 = 11 And geg2 = 7 
       benutze = 1 
       g = 11 
       Gosub ablegen 
       transport$ ( 11 ) = 1 
       Bset.<> 0 , flag$ ( 58 ) 
       Gosub test_recall 
    EndIf 
    If geg1 = 33 And geg2 = 14 
       benutze = 1 
       flag$ ( 1 ) = 0 
       g = 33 
       Gosub ablegen 
       Call 'txt$' [ ereignis$ ( 7 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Call 'punkte$' [ 100 ] 
    EndIf 
    If geg1 = 134 And geg2 = 7 And handlung$ ( 2 ) = 2 
       benutze = 1 
       Call 'txt$' [ ereignis$ ( 39 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 134 
       Gosub ablegen 
       handlung$ ( 2 ) = 3 
       person$ ( 3 ) = 1 
       Gosub personendisplay 
       Screen 2 
       Bob 6 , 136 , 81 , 6 
       Call 'screco$' 
       Call 'punkte$' [ 102 ] 
    EndIf 
    If geg1 = 203 And geg2 = 12 
       benutze = 1 
       g = 203 
       Gosub ablegen 
       Bset.<> 1 , flag$ ( 58 ) 
       Gosub test_recall 
    EndIf 
    If geg1 = 254 And geg2 = 7 
       If handlung$ ( 2 ) = 0 Or handlung$ ( 2 ) = 3 
          Goto klackstris 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "DENK AN HERBERT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
 EndIf 
 If verb = 8 
    If geg1 = 6 And flag$ ( 3 ) = 0 
       schalte = 1 
       flag$ ( 3 ) = 1 
       If flag$ ( 4 ) = 1 
          Screen 2 
          Bob 6 , 136 , 81 , 6 
          Call 'screco$' 
       EndIf 
    EndIf 
    If geg1 = 7 And flag$ ( 4 ) = 0 
       schalte = 1 
       flag$ ( 4 ) = 1 
       Gosub test_recall 
       If flag$ ( 3 ) = 1 
          Screen 2 
          Bob 6 , 136 , 81 , 6 
          Call 'screco$' 
       EndIf 
    EndIf 
    If geg1 = 12 And flag$ ( 51 ) = 0 
       schalte = 1 
       flag$ ( 51 ) = 1 
    EndIf 
 EndIf 
 If verb = 9 
    If geg1 = 6 And flag$ ( 3 ) = 1 
       If ( handlung$ ( 2 ) = 0 Or handlung$ ( 2 ) = 3 ) 
          schalte = 1 
          flag$ ( 3 ) = 0 
          Screen 2 
          Bob Off 6 
          Call 'screco$' 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "DENK AN HERBERT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 7 And flag$ ( 4 ) = 1 
       If ( handlung$ ( 2 ) = 0 Or handlung$ ( 2 ) = 3 ) 
          schalte = 1 
          flag$ ( 4 ) = 0 
          Screen 2 
          Bob Off 6 
          Call 'screco$' 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "DENK AN HERBERT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 12 And flag$ ( 51 ) = 1 
       schalte = 1 
       flag$ ( 51 ) = 0 
    EndIf 
 EndIf 
 If verb = 10 And geg1 = 14 And flag$ ( 1 ) = 1 
    If handlung$ ( 3 ) = 5 And handlung$ ( 4 ) = 0 
       handlung$ ( 4 ) = 1 
       Call 'txt$' [ ereignis$ ( 29 ) ] 
       Call 'clickmouse$' 
       person$ ( 2 ) = 0 
       person$ ( 16 ) = 20 
       Gosub personendisplay 
    EndIf 
    gehe = 1 
    r = 4 
    Gosub initraum 
 EndIf 
 If verb = 11 And flag$ ( 56 ) = 1 
    Call 'txt$' [ ereignis$ ( 11 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'verb_raus$' 
    verb = verb2 
    Call 'verb_rein$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 12 And geg1 = 2 
    Call 'txt$' [ ereignis$ ( 80 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 13 And geg1 = 162 And pers = 5 And handlung$ ( 1 ) = 2 
    gib = 1 
    Call 'txt$' [ ereignis$ ( 34 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    g = 162 
    Gosub ablegen 
    transport$ ( 162 ) = 1 
    handlung$ ( 1 ) = 3 
    Call 'punkte$' [ 103 ] 
 EndIf 
 If verb = 16 
    If pers = 5 
       If handlung$ ( 1 ) = 2 
          Call 'txt$' [ Chr$ ( 10 ) + "GLGLGLGLGL BLABLA TRRRR GLUCKS TRALALA HIHAHOHU BL-BL-BL" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          verb = verb2 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "LAß MICH IN RUHE, ICH HABE ZU TUN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If pers = 2 Or pers = 3 Or pers = 5 Or pers = 6 Or pers = 7 And reden$ ( pers ) = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "LAß MICH IN RUHE, ICH HABE ZU TUN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
    If pers = 10 
       If reden$ ( 10 ) = 0 
          Call 'unterhaltung_laden$' [ 2 ] 
          Call 'unterhaltung$' 
          reden$ ( 10 ) = 1 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
       If reden$ ( 10 ) = 1 
          Call 'txt$' [ Chr$ ( 10 ) + "LAß MICH IN RUHE, ICH HABE ZU TUN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
       EndIf 
    EndIf 
    If pers = 18 
       Call 'unterhaltung_laden$' [ 14 ] 
       Call 'unterhaltung$' 
       If Btst ( 2 , gefragt ) 
          person$ ( 7 ) = "HANS-WERNER" 
          person$ ( 9 ) = "RAINER" 
          person$ ( 10 ) = "ANJA" 
          Call 'punkte$' [ 113 ] 
       EndIf 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 Return 
 
 Label raum2: 
 If verb = 1 And geg1 = 30 And transport$ ( 33 ) = 1 
    Call 'txt$' [ ereignis$ ( 4 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    g = 33 
    mz = 1 
    Gosub aufnehmen 
 EndIf 
 If verb = 2 And geg1 = 32 And flag$ ( 6 ) = 0 
    oeffne = 1 
    flag$ ( 6 ) = 1 
    Screen 2 
    Bob Off 13 
    Bob 14 , 196 , 8 , 3 
    If transport$ ( 31 ) = 1 
       Bob 13 , 201 , 16 , 4 
       Screen 0 
       Set Zone 13 , 201 , 14 To 211 , 30 
    EndIf 
    Call 'screco$' 
 EndIf 
 If verb = 3 And geg1 = 32 And flag$ ( 6 ) = 1 
    schliesse = 1 
    flag$ ( 6 ) = 0 
    Screen 2 
    Bob Off 14 
    If transport$ ( 31 ) = 1 
       Screen 0 
       Set Zone 13 , 205 , 19 To 220 , 37 
       Screen 2 
       Bob 13 , 205 , 19 , 2 
    EndIf 
    Call 'screco$' 
 EndIf 
 If verb = 7 
    If geg1 = 24 
       If flag$ ( 8 ) = 1 
          If flag$ ( 61 ) = 0 
             Bset.<> 0 , flag$ ( 61 ) 
             Call 'punkte$' [ 103 ] 
             Call 'txt$' [ ereignis$ ( 91 ) ] 
             Call 'clickmouse$' 
             Call 'screco$' 
          EndIf 
          Goto emulator 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "DER COMPUTER IST NICHT EINGESCHALTET" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 35 
       Goto telefon 
    EndIf 
 EndIf 
 If verb = 8 
    If geg1 = 21 
       Call 'txt$' [ Chr$ ( 10 ) + "DER COMPUTER IST LEIDER KAPUTT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 22 And flag$ ( 7 ) = 0 
       schalte = 1 
       flag$ ( 7 ) = 1 
       Screen 2 
       Bob 4 , 101 , 55 , 5 
       Call 'screco$' 
    EndIf 
    If geg1 = 24 And flag$ ( 8 ) = 0 
       schalte = 1 
       flag$ ( 8 ) = 1 
       Screen 2 
       Bob 6 , 126 , 54 , 6 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 9 
    If geg1 = 22 And flag$ ( 7 ) = 1 
       schalte = 1 
       flag$ ( 7 ) = 0 
       Screen 2 
       Bob Off 4 
       Call 'screco$' 
    EndIf 
    If geg1 = 24 And flag$ ( 8 ) = 1 
       schalte = 1 
       flag$ ( 8 ) = 0 
       Screen 2 
       Bob Off 6 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 10 And geg1 = 32 And flag$ ( 6 ) = 1 
    gehe = 1 
    r = 3 
    Gosub initraum 
 EndIf 
 Return 
 
 Label raum3: 
 If verb = 1 
    If geg1 = 41 And transport$ ( 49 ) = 1 And flag$ ( 9 ) = 1 
       Call 'txt$' [ ereignis$ ( 12 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 49 
       mz = 14 
       Gosub aufnehmen 
    EndIf 
    If geg1 = 43 And transport$ ( 48 ) = 1 
       Call 'txt$' [ ereignis$ ( 6 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 48 
       mz = 13 
       Gosub aufnehmen 
    EndIf 
 EndIf 
 If verb = 2 
    If geg1 = 38 And flag$ ( 11 ) = 0 
       oeffne = 1 
       flag$ ( 11 ) = 1 
       flag$ ( 12 ) = 0 
       flag$ ( 13 ) = 0 
       Screen 2 
       Bob Off 4 
       Bob Off 5 
       Bob 3 , 131 , 73 , 4 
       Call 'screco$' 
    EndIf 
    If geg1 = 39 And flag$ ( 12 ) = 0 
       oeffne = 1 
       flag$ ( 11 ) = 0 
       flag$ ( 12 ) = 1 
       flag$ ( 13 ) = 0 
       Screen 2 
       Bob Off 3 
       Bob Off 5 
       Bob 4 , 129 , 84 , 5 
       Call 'screco$' 
    EndIf 
    If geg1 = 40 And flag$ ( 13 ) = 0 
       oeffne = 1 
       flag$ ( 11 ) = 0 
       flag$ ( 12 ) = 0 
       flag$ ( 13 ) = 1 
       Screen 2 
       Bob Off 3 
       Bob Off 4 
       Bob 5 , 129 , 95 , 6 
       Call 'screco$' 
    EndIf 
    If geg1 = 41 And flag$ ( 9 ) = 0 
       oeffne = 1 
       flag$ ( 9 ) = 1 
       Screen 2 
       Bob 6 , 100 , 56 , 3 
       If transport$ ( 36 ) = 1 
          Bob 1 , 126 , 68 , 7 
          Screen 0 
          Set Zone 1 , 127 , 66 To 131 , 72 
       EndIf 
       Call 'screco$' 
    EndIf 
    If geg1 = 42 And flag$ ( 10 ) = 0 
       oeffne = 1 
       flag$ ( 10 ) = 1 
       Screen 2 
       Bob 7 , 127 , 29 , 2 
       If transport$ ( 37 ) = 1 
          Bob 2 , 153 , 36 , 8 
          Screen 0 
          Set Zone 2 , 155 , 36 To 158 , 40 
       EndIf 
       Call 'screco$' 
    EndIf 
    If geg1 = 46 
       oeffne = 1 
       Call 'txt$' [ ereignis$ ( 5 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 3 
    If geg1 = 38 And flag$ ( 11 ) = 1 
       schliesse = 1 
       flag$ ( 11 ) = 0 
       Screen 2 
       Bob Off 3 
       Call 'screco$' 
    EndIf 
    If geg1 = 39 And flag$ ( 12 ) = 1 
       schliesse = 1 
       flag$ ( 12 ) = 0 
       Screen 2 
       Bob Off 4 
       Call 'screco$' 
    EndIf 
    If geg1 = 40 And flag$ ( 13 ) = 1 
       schliesse = 1 
       flag$ ( 13 ) = 0 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
    EndIf 
    If geg1 = 41 And flag$ ( 9 ) = 1 
       schliesse = 1 
       flag$ ( 9 ) = 0 
       Screen 2 
       Bob Off 6 
       Bob Off 1 
       Call 'screco$' 
    EndIf 
    If geg1 = 42 And flag$ ( 10 ) = 1 
       schliesse = 1 
       flag$ ( 10 ) = 0 
       Screen 2 
       Bob Off 7 
       Bob Off 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 8 
    If geg1 = 44 And flag$ ( 18 ) = 0 
       flag$ ( 18 ) = 1 
       Call 'txt$' [ ereignis$ ( 9 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 47 
       mz = 12 
       Gosub aufnehmen 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 45 And flag$ ( 52 ) = 0 
       schalte = 1 
       flag$ ( 52 ) = 1 
       Screen 2 
       Bob 10 , 154 , 63 , 9 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 9 And geg1 = 45 And flag$ ( 52 ) = 1 
    schalte = 1 
    flag$ ( 52 ) = 0 
    Screen 2 
    Bob Off 10 
    Call 'screco$' 
 EndIf 
 If verb = 11 And ( flag$ ( 9 ) = 1 Or flag$ ( 10 ) = 1 Or flag$ ( 11 ) = 1 Or flag$ ( 12 ) = 1 Or flag$ ( 13 ) = 1 Or flag$ ( 52 ) = 1 ) 
    Call 'txt$' [ ereignis$ ( 8 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'verb_raus$' 
    verb = verb2 
    Call 'verb_rein$' 
    Pop 
    Goto parser 
 EndIf 
 Return 
 
 Label raum4: 
 If verb = 2 
    If geg1 = 51 And flag$ ( 14 ) = 0 
       oeffne = 1 
       flag$ ( 14 ) = 1 
       If person$ ( 7 ) = 5 
          flag$ ( 59 ) = 2 
       EndIf 
       Screen 2 
       Bob 2 , 103 , 28 , 2 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 52 And flag$ ( 15 ) = 0 
       oeffne = 1 
       flag$ ( 15 ) = 1 
       Screen 2 
       Bob 3 , 119 , 39 , 3 
       Call 'screco$' 
    EndIf 
    If geg1 = 53 And flag$ ( 16 ) = 0 
       oeffne = 1 
       flag$ ( 16 ) = 1 
       Screen 2 
       Bob 4 , 132 , 47 , 4 
       Call 'screco$' 
    EndIf 
    If geg1 = 54 And flag$ ( 17 ) = 0 
       oeffne = 1 
       flag$ ( 17 ) = 1 
       Screen 2 
       Bob 5 , 122 , 40 , 5 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 3 
    If geg1 = 51 And flag$ ( 14 ) = 1 
       schliesse = 1 
       flag$ ( 14 ) = 0 
       flag$ ( 59 ) = 0 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
    EndIf 
    If geg1 = 52 And flag$ ( 15 ) = 1 
       schliesse = 1 
       flag$ ( 15 ) = 0 
       Screen 2 
       Bob Off 3 
       Call 'screco$' 
    EndIf 
    If geg1 = 53 And flag$ ( 16 ) = 1 
       schliesse = 1 
       flag$ ( 16 ) = 0 
       Screen 2 
       Bob Off 4 
       Call 'screco$' 
    EndIf 
    If geg1 = 54 And flag$ ( 17 ) = 1 
       schliesse = 1 
       flag$ ( 17 ) = 0 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
    EndIf 
 EndIf 
 If flag$ ( 59 ) > 0 
    Dec flag$ ( 59 ) 
    If flag$ ( 59 ) = 0 
       flag$ ( 14 ) = 0 
       Call 'txt$' [ Chr$ ( 10 ) + Chr$ ( 34 ) + "TÜÄÄÄH ZUUUU !!!" + Chr$ ( 34 ) + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 10 
    If geg1 = 51 And flag$ ( 14 ) = 1 
       gehe = 1 
       r = 5 
       Gosub initraum 
    EndIf 
    If geg1 = 52 And flag$ ( 15 ) = 1 
       gehe = 1 
       r = 6 
       Gosub initraum 
    EndIf 
    If geg1 = 54 And flag$ ( 17 ) = 1 
       gehe = 1 
       r = 7 
       Gosub initraum 
    EndIf 
 EndIf 
 If verb = 16 
    If pers = 7 And reden$ ( 7 ) = 1 
       Call 'txt$' [ Chr$ ( 10 ) + "LAß MICH IN RUHE, ICH HABE ZU TUN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
 EndIf 
 Return 
 
 Label raum5: 
 If person$ ( 7 ) = 5 And Not ( verb = 1 Or verb = 16 Or verb = 11 Or verb = 13 ) 
    Call 'txt$' [ Chr$ ( 10 ) + "STÖR DIE BEIDEN NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 8 
    If geg1 = 57 And flag$ ( 22 ) = 0 
       Call 'txt$' [ ereignis$ ( 15 ) ] 
       Call 'clickmouse$' 
       flag$ ( 22 ) = 1 
       geg$ ( 57 ) = geg$ ( 57 ) + "(AN)" 
       If flag$ ( 19 ) = 1 
          Screen 2 
          Bob 1 , 34 , 44 , 2 
       EndIf 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 58 And flag$ ( 19 ) = 0 
       schalte = 1 
       flag$ ( 19 ) = 1 
       If flag$ ( 22 ) = 1 
          Screen 2 
          Bob 1 , 34 , 44 , 2 
          Call 'screco$' 
       EndIf 
    EndIf 
    If geg1 = 63 And flag$ ( 29 ) = 0 
       Call 'txt$' [ ereignis$ ( 14 ) ] 
       Call 'clickmouse$' 
       flag$ ( 20 ) = 1 
       flag$ ( 29 ) = 1 
       geg$ ( 63 ) = geg$ ( 63 ) + "(AN)" 
       If Not geg$ ( 70 ) = "MONITOR(AN)" 
          geg$ ( 70 ) = geg$ ( 70 ) + "(AN)" 
       EndIf 
       Screen 2 
       Bob 2 , 168 , 42 , 3 
       Screen 0 
       Reset Zone 15 
       Set Zone 7 , 166 , 39 To 194 , 65 
       Flash 18 , "(F00,40)(000,40)" 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 64 And flag$ ( 21 ) = 0 
       schalte = 1 
       flag$ ( 21 ) = 1 
       If flag$ ( 23 ) = 1 
          Screen 2 
          Bob 3 , 221 , 34 , 4 
          Call 'screco$' 
       EndIf 
    EndIf 
    If geg1 = 66 And flag$ ( 23 ) = 0 
       Call 'txt$' [ ereignis$ ( 16 ) ] 
       Call 'clickmouse$' 
       flag$ ( 23 ) = 1 
       geg$ ( 66 ) = geg$ ( 66 ) + "(AN)" 
       If flag$ ( 21 ) = 1 
          Screen 2 
          Bob 3 , 221 , 34 , 4 
       EndIf 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 70 And flag$ ( 20 ) = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       geg$ ( 70 ) = geg$ ( 70 ) + "(AN)" 
       flag$ ( 20 ) = 1 
       If flag$ ( 29 ) = 1 
          Screen 2 
          Bob 2 , 168 , 42 , 3 
          Screen 0 
          Reset Zone 15 
          Set Zone 7 , 166 , 39 To 194 , 65 
          Flash 18 , "(F00,40)(000,40)" 
       EndIf 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 9 
    If geg1 = 57 And flag$ ( 22 ) = 1 
       schalte = 1 
       flag$ ( 22 ) = 0 
       geg$ ( 57 ) = geg$ ( 57 ) - "(AN)" 
       If flag$ ( 19 ) = 1 
          Screen 2 
          Bob Off 1 
          Call 'screco$' 
       EndIf 
    EndIf 
    If geg1 = 58 And flag$ ( 19 ) = 1 
       schalte = 1 
       flag$ ( 19 ) = 0 
       Screen 2 
       Bob Off 1 
       Call 'screco$' 
    EndIf 
    If geg1 = 62 And flag$ ( 20 ) = 1 
       schalte = 1 
       flag$ ( 20 ) = 0 
       geg$ ( 70 ) = geg$ ( 70 ) - "(AN)" 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
       Screen 0 
       Reset Zone 7 
       Set Zone 15 , 166 , 39 To 194 , 65 
    EndIf 
    If geg1 = 63 And flag$ ( 29 ) = 1 
       schalte = 1 
       flag$ ( 29 ) = 0 
       geg$ ( 63 ) = geg$ ( 63 ) - "(AN)" 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
       Screen 0 
       Reset Zone 7 
       Set Zone 15 , 166 , 39 To 194 , 65 
    EndIf 
    If geg1 = 64 And flag$ ( 21 ) = 1 
       schalte = 1 
       flag$ ( 21 ) = 0 
       Screen 2 
       Bob Off 3 
       Call 'screco$' 
    EndIf 
    If geg1 = 66 And flag$ ( 23 ) = 1 
       schalte = 1 
       flag$ ( 23 ) = 0 
       geg$ ( 66 ) = geg$ ( 66 ) - "(AN)" 
       Screen 2 
       Bob Off 3 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 16 
    If pers = 7 
       If reden$ ( 7 ) = 1 And handlung$ ( 2 ) = 2 
          reden$ ( 7 ) = 2 
          Call 'txt$' [ ereignis$ ( 38 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
       If ( reden$ ( 7 ) = 0 Or reden$ ( 7 ) = 1 ) 
          Call 'txt$' [ Chr$ ( 10 ) + "LAß MICH IN RUHE, ICH HABE ZU TUN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
       EndIf 
    EndIf 
 EndIf 
 Return 
 
 Label raum6: 
 If verb = 2 And geg1 = 86 And transport$ ( 90 ) = 2 And flag$ ( 24 ) = 1 
    If flag$ ( 26 ) = 1 
       Call 'txt$' [ Chr$ ( 10 ) + "MACH DAS LIEBER NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    oeffne = 1 
    flag$ ( 24 ) = 2 
    Gosub initraum6_2 
 EndIf 
 If verb = 3 And geg1 = 86 And flag$ ( 24 ) = 2 
    schliesse = 1 
    flag$ ( 24 ) = 1 
    Gosub initraum6_2 
 EndIf 
 If verb = 4 
    If geg1 = 84 And flag$ ( 25 ) = 0 
       ziehe = 1 
       flag$ ( 25 ) = 1 
       Gosub initraum6_2 
       If transport$ ( 77 ) = 1 And flag$ ( 26 ) = 0 And flag$ ( 28 ) = 0 
          Screen 2 
          Bob 6 , 186 , 64 , 7 
          Call 'screco$' 
          Screen 0 
          Set Zone 6 , 188 , 64 To 200 , 67 
          flag$ ( 28 ) = 1 
       EndIf 
    EndIf 
    If geg1 = 86 And transport$ ( 90 ) = 1 
       ziehe = 1 
       flag$ ( 24 ) = 1 
       Gosub initraum6_2 
       geg$ ( 86 ) = "TÜR" 
       g = 90 
       mz = 19 
       Gosub aufnehmen 
       Call 'punkte$' [ 317 ] 
    EndIf 
 EndIf 
 If verb = 5 And geg1 = 84 And flag$ ( 25 ) = 1 
    druecke = 1 
    flag$ ( 25 ) = 0 
    Gosub initraum6_2 
 EndIf 
 If verb = 7 
    If geg1 = 37 And geg2 = 79 
       benutze = 1 
       flag$ ( 27 ) = 1 
       Screen 0 
       Reset Zone 8 
       Set Zone 20 , 230 , 61 To 249 , 67 
       g = 37 
       Gosub ablegen 
       Call 'punkte$' [ 13 ] 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
    If geg1 = 77 And geg2 = 74 
       If flag$ ( 24 ) = 2 
          Call 'txt$' [ Chr$ ( 10 ) + "MACH DAS LIEBER NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
       If transport$ ( 77 ) = 1 And flag$ ( 26 ) = 0 
          Screen 2 
          Bob Off 6 
          Call 'screco$' 
       EndIf 
       If transport$ ( 77 ) = 2 And flag$ ( 26 ) = 0 
          g = 77 
          Gosub ablegen 
          transport$ ( 77 ) = 1 
       EndIf 
       benutze = 1 
       flag$ ( 26 ) = 1 
       Screen 0 
       Reset Zone 6 
       Set Zone 6 , 195 , 14 To 209 , 18 
       Screen 2 
       Bob 6 , 194 , 6 , 12 
       Call 'screco$' 
       Call 'rot$' 
    EndIf 
    If geg1 = 110 And geg2 = 91 
       If flag$ ( 26 ) = 0 
          Call 'txt$' [ ereignis$ ( 19 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          g = 110 
          Gosub ablegen 
          Pop 
          Goto parser 
       EndIf 
       Call 'txt$' [ ereignis$ ( 20 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 110 
       Gosub ablegen 
       Screen 2 
       Bob 17 , 73 , 8 , 9 
       Call 'screco$' 
       Screen 0 
       Set Zone 17 , 76 , 14 To 83 , 23 
       transport$ ( 88 ) = 1 
       Call 'punkte$' [ 489 ] 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 10 
    If geg1 = 86 And flag$ ( 24 ) = 2 And flag$ ( 25 ) = 1 
       gehe = 1 
       r = 10 
       Gosub initraum 
    EndIf 
 EndIf 
 If verb = 12 And geg1 = 77 And flag$ ( 26 ) = 1 
    flag$ ( 26 ) = 0 
    Screen 0 
    Get Palette 2 
 EndIf 
 Return 
 
 Label raum7: 
 If verb = 10 
    If geg1 = 92 
       gehe = 1 
       r = 8 
       Gosub initraum 
    EndIf 
    If geg1 = 93 
       gehe = 1 
       r = 11 
       Gosub initraum 
    EndIf 
 EndIf 
 Return 
 
 Label raum8: 
 If verb = 1 
    If geg1 = 104 And flag$ ( 31 ) = 1 And transport$ ( 110 ) = 1 
       Call 'txt$' [ ereignis$ ( 17 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 110 
       mz = 15 
       Gosub aufnehmen 
    EndIf 
    If geg1 = 105 And flag$ ( 32 ) = 1 And transport$ ( 111 ) = 1 
       Call 'txt$' [ ereignis$ ( 18 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 111 
       mz = 16 
       Gosub aufnehmen 
    EndIf 
 EndIf 
 If verb = 2 And geg1 = 108 And flag$ ( 33 ) = 0 
    oeffne = 1 
    flag$ ( 33 ) = 1 
    Screen 2 
    Bob 13 , 121 , 23 , 4 
    Call 'screco$' 
 EndIf 
 If ( verb = 2 Or verb = 4 ) 
    If geg1 = 104 And flag$ ( 31 ) = 0 
       oeffne = 1 
       ziehe = 1 
       flag$ ( 31 ) = 1 
       flag$ ( 32 ) = 0 
       Screen 2 
       Bob Off 10 
       Bob 9 , 21 , 86 , 2 
       Call 'screco$' 
    EndIf 
    If geg1 = 105 And flag$ ( 32 ) = 0 
       oeffne = 1 
       ziehe = 1 
       flag$ ( 31 ) = 0 
       flag$ ( 32 ) = 1 
       Screen 2 
       Bob Off 9 
       Bob 10 , 21 , 97 , 3 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 3 And geg1 = 108 And flag$ ( 33 ) = 1 
    schliesse = 1 
    flag$ ( 33 ) = 0 
    Screen 2 
    Bob Off 13 
    Call 'screco$' 
 EndIf 
 If ( verb = 3 Or verb = 5 ) 
    If geg1 = 104 And flag$ ( 31 ) = 1 
       schliesse = 1 
       druecke = 1 
       flag$ ( 31 ) = 0 
       Screen 2 
       Bob Off 9 
       Call 'screco$' 
    EndIf 
    If geg1 = 105 And flag$ ( 32 ) = 1 
       schliesse = 1 
       druecke = 1 
       flag$ ( 32 ) = 0 
       Screen 2 
       Bob Off 10 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 7 And geg1 = 101 
    Goto telefon 
 EndIf 
 If verb = 8 And ( geg1 = 97 Or geg1 = 98 ) 
    Call 'txt$' [ ereignis$ ( 75 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
 EndIf 
 If verb = 10 And geg1 = 108 And flag$ ( 33 ) = 1 
    gehe = 1 
    r = 9 
    Gosub initraum 
 EndIf 
 Return 
 
 Label raum9: 
 If verb = 2 And geg1 = 112 And flag$ ( 34 ) = 0 
    oeffne = 1 
    flag$ ( 34 ) = 1 
    Screen 2 
    If handlung$ ( 6 ) = 4 
       Bob 2 , 52 , 55 , 3 
       person$ ( 13 ) = 9 
       Gosub personendisplay 
    Else 
       Bob 2 , 52 , 55 , 2 
       person$ ( 13 ) = 0 
    EndIf 
    Call 'screco$' 
    Screen 0 
    Reset Zone 1 
    Set Zone 2 , 52 , 56 To 97 , 117 
 EndIf 
 If verb = 3 And geg1 = 113 And flag$ ( 34 ) = 1 
    schliesse = 1 
    flag$ ( 34 ) = 0 
    Screen 2 
    Bob Off 
    Call 'screco$' 
    Screen 0 
    Reset Zone 2 
    Set Zone 1 , 52 , 56 To 97 , 117 
    person$ ( 13 ) = 0 
    Gosub personendisplay 
 EndIf 
 If verb = 7 And ( geg1 = 112 Or geg1 = 113 ) 
    Call 'txt$' [ Chr$ ( 10 ) + "DU VERSPÜRST KEIN BEDÜRFNIS." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 13 And Btst ( 5 , flag$ ( 57 ) ) And pers = 13 
    If geg1 = 88 
       gib = 1 
       g = 88 
       Gosub ablegen 
       Gosub testinventar 
       Call 'iconbank$' [ 1 ] 
       Screen 0 
       For i = 1 To 24 
          If inventar$ ( i ) = 0 
             inventar$ ( i ) = 203 
             invent$ ( i ) = Chr$ ( 10 ) + "AUF DIESER IN ALLEN REGENBOGENFARBEN" + Chr$ ( 10 ) + "GLÄNZENDEN COMPACT DISK BEFINDEN SICH" + Chr$ ( 10 ) 
             invent$ ( i ) = invent$ ( i ) + "ALLE DATEN, DIE DIR DEIN ALTES GE-" + Chr$ ( 10 ) + "DÄCHTNIS WIEDERBRINGEN WERDEN." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) 
             Exit 
          EndIf 
       Next 
       Gosub inventory 
       transport$ ( 203 ) = 2 
       handlung$ ( 6 ) = 5 
       Call 'punkte$' [ 823 ] 
    Else 
       Call 'txt$' [ Chr$ ( 10 ) + "DAS WILL ICH NICHT HABEN." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 16 And pers = 13 And reden$ ( 13 ) = 1 
    reden$ ( 13 ) = 2 
    Call 'unterhaltung_laden$' [ 13 ] 
    Call 'unterhaltung$' 
    flag$ ( 57 ) = gefragt 
 EndIf 
 Return 
 
 Label raum10: 
 If verb = 10 
    If geg1 = 116 
       gehe = 1 
       r = 13 
       Gosub initraum 
    EndIf 
 EndIf 
 Return 
 
 Label raum11: 
 If verb = 2 And geg1 = 120 And flag$ ( 62 ) = 0 
    flag$ ( 62 ) = 1 
    Call 'txt$' [ ereignis$ ( 92 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub testinventar 
    Call 'iconbank$' [ 1 ] 
    Screen 0 
    For i = 1 To 24 
       If inventar$ ( i ) = 0 
          inventar$ ( i ) = 222 
          invent$ ( i ) = Chr$ ( 10 ) + "ER IST ZIEMLICH SCHWER." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) 
          Exit 
       EndIf 
    Next 
    Gosub inventory 
    transport$ ( 222 ) = 2 
    Screen 2 
    Bob 4 , 190 , 21 , 3 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 10 And geg1 = 119 
    gehe = 1 
    Call 'txt$' [ ereignis$ ( 63 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
 EndIf 
 Return 
 
 Label raum12: 
 If verb = 7 And geg1 = 222 And geg2 = 223 And flag$ ( 64 ) = 0 
    flag$ ( 64 ) = 1 
    Call 'txt$' [ ereignis$ ( 94 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    g = 127 
    mz = 20 
    Gosub aufnehmen 
    Screen 2 
    Bob 5 , 10 , 52 , 5 
    Call 'screco$' 
    Call 'punkte$' [ 564 ] 
    Pop 
    Goto parser 
 EndIf 
 If verb = 12 
    If geg1 = 121 And transport$ ( 121 ) = 1 
       transport$ ( 121 ) = 2 
       g = 132 
       mz = 11 
       Gosub aufnehmen 
       Screen 2 
       Bob Off 1 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 122 And transport$ ( 122 ) = 1 
       transport$ ( 122 ) = 2 
       g = 131 
       mz = 11 
       Gosub aufnehmen 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 123 And transport$ ( 123 ) = 1 
       transport$ ( 123 ) = 2 
       g = 133 
       mz = 11 
       Gosub aufnehmen 
       Screen 2 
       Bob Off 3 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 129 And transport$ ( 129 ) = 1 
       transport$ ( 129 ) = 2 
       g = 134 
       mz = 11 
       Gosub aufnehmen 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 Return 
 
 Label raum13: 
 If verb = 2 And geg1 = 136 And flag$ ( 35 ) = 0 
    oeffne = 1 
    flag$ ( 35 ) = 1 
    Screen 2 
    Bob 2 , 184 , 22 , 2 
    Call 'screco$' 
 EndIf 
 If verb = 3 And geg1 = 137 And flag$ ( 35 ) = 1 
    schliesse = 1 
    flag$ ( 35 ) = 0 
    Screen 2 
    Bob Off 2 
    Call 'screco$' 
 EndIf 
 If verb = 10 
    If geg1 = 136 And flag$ ( 35 ) = 1 
       gehe = 1 
       r = 12 
       Gosub initraum 
    EndIf 
    If geg1 = 137 
       gehe = 1 
       r = 15 
       Gosub initraum 
    EndIf 
 EndIf 
 Return 
 
 Label raum14: 
 If verb = 1 And geg1 = 141 
    Call 'txt$' [ ereignis$ ( 86 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 2 And geg1 = 139 And flag$ ( 36 ) = 0 
    oeffne = 1 
    flag$ ( 36 ) = 1 
    Screen 2 
    Bob 2 , 55 , 35 , 2 
    Call 'screco$' 
 EndIf 
 If verb = 3 And geg1 = 139 And flag$ ( 36 ) = 1 
    schliesse = 1 
    flag$ ( 36 ) = 0 
    Screen 2 
    Bob Off 2 
    Call 'screco$' 
 EndIf 
 If verb = 10 
    If geg1 = 138 
       Call 'txt$' [ ereignis$ ( 63 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 139 And flag$ ( 36 ) = 1 
       gehe = 1 
       r = 15 
       Gosub initraum 
    EndIf 
 EndIf 
 If verb = 11 
    Call 'txt$' [ ereignis$ ( 63 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'verb_raus$' 
    verb = verb2 
    Call 'verb_rein$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 12 And geg1 = 141 And handlung$ ( 3 ) = 5 
    Call 'txt$' [ ereignis$ ( 87 ) ] 
    Call 'clickmouse$' 
    handlung$ ( 3 ) = 6 
    geg$ ( 141 ) = "LOCH IM FUßWEG" 
    g = 142 
    mz = 5 
    Gosub aufnehmen 
    Screen 0 
    Set Zone 4 , 201 , 111 To 236 , 124 
    Screen 2 
    Bob Off 4 : Wait Vbl 
    Bob 4 , 201 , 112 , 4 
    Call 'screco$' 
 EndIf 
 Return 
 
 Label raum15: 
 If verb = 2 
    If geg1 = 147 And flag$ ( 37 ) = 0 
       oeffne = 1 
       flag$ ( 37 ) = 1 
       Screen 2 
       Bob 5 , 100 , 36 , 7 
       Call 'screco$' 
    EndIf 
    If geg1 = 148 And flag$ ( 38 ) = 0 
       oeffne = 1 
       flag$ ( 38 ) = 1 
       Screen 2 
       Bob 6 , 280 , 30 , 8 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 3 
    If geg1 = 147 And flag$ ( 37 ) = 1 
       schliesse = 1 
       flag$ ( 37 ) = 0 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
    EndIf 
    If geg1 = 148 And flag$ ( 38 ) = 1 
       schliesse = 1 
       flag$ ( 38 ) = 0 
       Screen 2 
       Bob Off 6 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 10 
    If geg1 = 146 
       gehe = 1 
       r = 19 
       Gosub initraum 
    EndIf 
    If geg1 = 147 And flag$ ( 37 ) = 1 
       gehe = 1 
       r = 17 
       Gosub initraum 
    EndIf 
    If geg1 = 148 And flag$ ( 38 ) = 1 
       gehe = 1 
       Screen 0 
       Paste Bob 117 , 45 , 2 
       Limit Mouse 245 , 125 To 317 , 167 
       Reset Zone 
       Set Zone 1 , 123 , 56 To 150 , 75 
       Set Zone 2 , 156 , 56 To 183 , 75 
       
       Label raum15_2: 
       While Mouse Key = 0 
       Wend 
       mz = Mouse Zone 
       If mz = 0 
          Goto raum15_2 
       EndIf 
       If Mouse Key = 2 
          Call 'screco$' 
          Call 'init_zones$' 
          Pop 
          Goto parser 
       EndIf 
       Call 'maus_aus$' 
       While Mouse Key = 1 
          If mz = 1 
             Paste Bob 123 , 56 , 5 
          Else 
             Paste Bob 156 , 56 , 6 
          EndIf 
       Wend 
       If mz = 1 
          Paste Bob 123 , 56 , 3 
       Else 
          Paste Bob 156 , 56 , 4 
       EndIf 
       Call 'maus_an$' 
       Wait 10 
       Reset Zone 
       Call 'maus_an$' 
       If mz = 1 
          r = 24 
          Gosub initraum 
          Pop 
          Goto parser 
       EndIf 
       If mz = 2 
          If handlung$ ( 3 ) = 5 
             Call 'txt$' [ ereignis$ ( 84 ) ] 
             Call 'clickmouse$' 
             Call 'screco$' 
             Call 'init_zones$' 
             Pop 
             Goto parser 
          EndIf 
          If handlung$ ( 4 ) = 1 
             If flag$ ( 60 ) = 0 
                Call 'txt$' [ ereignis$ ( 62 ) ] 
                Call 'clickmouse$' 
                Call 'screco$' 
                Call 'txt$' [ ereignis$ ( 88 ) ] 
                Call 'clickmouse$' 
                person$ ( 18 ) = 1 
                Screen 2 
                Cls 0 
                Call 'roller_blind$' 
                Call 'befehle_runter$' 
                For i = 0 To 4 
                   Screen Close i 
                Next 
                Erase 1 
                Erase 2 
                Erase 8 
                Erase 9 
                Erase 10 
                Erase 11 
                Pop 
                Goto fahrszene 
             Else 
                r = 18 
                Gosub initraum 
                Pop 
                Goto parser 
             EndIf 
          Else 
             Call 'txt$' [ ereignis$ ( 48 ) ] 
             Call 'clickmouse$' 
             Call 'screco$' 
             Call 'init_zones$' 
          EndIf 
       EndIf 
    EndIf 
    If geg1 = 149 
       gehe = 1 
       r = 13 
       Gosub initraum 
    EndIf 
 EndIf 
 If verb = 16 And pers = 12 
    If reden$ ( 12 ) = 0 
       reden$ ( 12 ) = 1 
       Call 'unterhaltung_laden$' [ 7 ] 
       Call 'unterhaltung$' 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
    If reden$ ( 12 ) = 1 
       Call 'txt$' [ Chr$ ( 10 ) + "LAß IHN SEINE SELBSTGESPRÄCHE FÜHREN." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
 EndIf 
 Return 
 
 Label raum16: 
 If verb = 11 And flag$ ( 39 ) = 0 And ( transport$ ( 150 ) = 2 Or transport$ ( 151 ) = 2 Or transport$ ( 152 ) = 2 Or transport$ ( 153 ) = 2 Or transport$ ( 154 ) = 2 Or transport$ ( 155 ) = 2 Or transport$ ( 162 ) = 2 Or transport$ ( 163 ) = 2 Or transport$ ( 164 ) = 2 Or transport$ ( 165 ) = 2 ) 
    go = 1 
    Goto game_over 
 EndIf 
 If verb = 12 
    If geg1 = 150 
       If transport$ ( 150 ) = 1 
          g = 150 
          mz = 20 
          Gosub aufnehmen 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 151 
       If transport$ ( 151 ) = 1 
          g = 151 
          mz = 20 
          Gosub aufnehmen 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 152 
       If transport$ ( 152 ) = 1 
          g = 152 
          mz = 20 
          Gosub aufnehmen 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 153 
       If transport$ ( 153 ) = 1 
          g = 153 
          mz = 20 
          Gosub aufnehmen 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 154 
       If transport$ ( 154 ) = 1 
          g = 154 
          mz = 20 
          Gosub aufnehmen 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 155 
       If transport$ ( 155 ) = 1 
          g = 155 
          mz = 20 
          Gosub aufnehmen 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If geg1 = 162 
       If transport$ ( 162 ) = 1 
          g = 162 
          mz = 20 
          Gosub aufnehmen 
          Screen 2 
          Bob Off 13 
          Call 'screco$' 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
 EndIf 
 If verb = 13 
    If geg1 = 31 And ( geg2 = 157 Or pers = 4 ) 
       gib = 1 
       reden$ ( 4 ) = 1 
       Call 'txt$' [ ereignis$ ( 33 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 31 
       Gosub ablegen 
       mz = 20 
       g = 163 
       Gosub aufnehmen 
       mz = 20 
       g = 164 
       Gosub aufnehmen 
       mz = 20 
       g = 165 
       Gosub aufnehmen 
       Call 'punkte$' [ 154 ] 
       Pop 
       Goto parser 
    EndIf 
    If ( geg1 = 89 Or geg1 = 255 ) And flag$ ( 39 ) = 0 And ( geg2 = 157 Or pers = 4 ) 
       gib = 1 
       flag$ ( 39 ) = 1 
       g = 89 
       Gosub ablegen 
       Call 'txt$' [ ereignis$ ( 43 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Call 'punkte$' [ 12 ] 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 16 
    If pers = 4 And reden$ ( 4 ) = 0 
       Call 'txt$' [ Chr$ ( 10 ) + "SPRICH SIE NICHT AN, SIE SIEHT SCHLECHT" + Chr$ ( 10 ) + "GELAUNT AUS!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
    If pers = 4 And reden$ ( 4 ) = 1 
       Call 'unterhaltung_laden$' [ 6 ] 
       Call 'unterhaltung$' 
       reden$ ( 4 ) = 0 
    EndIf 
 EndIf 
 Return 
 
 Label raum17: 
 If verb = 2 
    If geg1 = 169 And flag$ ( 40 ) = 0 
       oeffne = 1 
       flag$ ( 40 ) = 1 
       Screen 0 
       Reset Zone 3 
       Set Zone 4 , 160 , 44 To 187 , 71 
       Screen 2 
       Bob 4 , 160 , 40 , 4 
       Call 'screco$' 
    EndIf 
    If geg1 = 170 And flag$ ( 40 ) = 1 
       Goto tresor 
    EndIf 
 EndIf 
 If verb = 3 
    If geg1 = 170 And flag$ ( 40 ) = 1 
       schliesse = 1 
       flag$ ( 40 ) = 0 
       Screen 0 
       Reset Zone 4 
       Set Zone 3 , 160 , 44 To 187 , 71 
       Screen 2 
       Bob Off 4 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 4 And geg1 = 167 And flag$ ( 41 ) = 0 
    ziehe = 1 
    flag$ ( 41 ) = 1 
    Screen 0 
    Reset Zone 1 
    Set Zone 1 , 114 , 74 To 188 , 116 
    Screen 2 
    Bob 1 , 112 , 72 , 5 
    Call 'screco$' 
 EndIf 
 If verb = 5 And geg1 = 167 And flag$ ( 41 ) = 1 
    druecke = 1 
    flag$ ( 41 ) = 0 
    Screen 0 
    Reset Zone 1 
    Set Zone 1 , 52 , 78 To 118 , 117 
    Screen 2 
    Bob 1 , 53 , 72 , 5 
    Call 'screco$' 
 EndIf 
 If verb = 7 And ( geg1 = 163 Or geg1 = 239 ) And geg2 = 170 
    flag$ ( 40 ) = 2 
    benutze = 1 
    Screen 2 
    Bob 4 , 150 , 40 , 6 
    Call 'screco$' 
    g = 163 
    Gosub ablegen 
    g = 239 
    Gosub ablegen 
    g = 174 
    mz = 9 
    Gosub aufnehmen 
 EndIf 
 If verb = 10 And geg1 = 168 And flag$ ( 41 ) = 1 
    If flag$ ( 55 ) = 0 
       Call 'txt$' [ ereignis$ ( 61 ) ] 
       Call 'clickmouse$' 
       Pop 
       Goto labyrinth 
    Else 
       gehe = 1 
       r = 21 
       Gosub initraum 
    EndIf 
 EndIf 
 Return 
 
 Label raum18: 
 If verb = 2 
    If geg1 = 176 And flag$ ( 43 ) = 0 
       oeffne = 1 
       Call 'txt$' [ ereignis$ ( 44 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       flag$ ( 43 ) = 1 
       Screen 2 
       Bob 2 , 125 , 11 , 2 
       Call 'screco$' 
    EndIf 
    If geg1 = 177 And flag$ ( 44 ) = 0 
       oeffne = 1 
       Call 'txt$' [ ereignis$ ( 44 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       flag$ ( 44 ) = 1 
       Screen 2 
       Bob 3 , 175 , 11 , 2 
       Call 'screco$' 
    EndIf 
    If geg1 = 178 And flag$ ( 45 ) = 0 
       oeffne = 1 
       Call 'txt$' [ ereignis$ ( 44 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       flag$ ( 45 ) = 1 
       Screen 2 
       Bob 4 , 225 , 11 , 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If ( verb = 7 Or verb = 10 ) And ( geg1 = 176 Or geg1 = 177 Or geg1 = 178 ) 
    If flag$ ( 42 + ( geg1 - 175 ) ) = 1 
       person$ ( 17 ) = 0 
       Goto fahrstuhl 
    EndIf 
 EndIf 
 If verb = 11 
    flag$ ( 43 ) = 0 
    flag$ ( 44 ) = 0 
    flag$ ( 45 ) = 0 
    Call 'txt$' [ ereignis$ ( 46 ) ] 
    Call 'clickmouse$' 
 EndIf 
 If verb = 16 And pers = 17 
    If reden$ ( 17 ) = 0 
       reden$ ( 17 ) = 1 
       Call 'unterhaltung_laden$' [ 11 ] 
       Call 'unterhaltung$' 
       verb = verb2 
       Call 'punkte$' [ 84 ] 
       Pop 
       Goto parser 
    EndIf 
    If reden$ ( 17 ) = 1 
       Call 'txt$' [ ereignis$ ( 47 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 Return 
 
 Label raum19: 
 If verb = 2 
    If geg1 = 182 And flag$ ( 46 ) = 0 
       oeffne = 1 
       flag$ ( 46 ) = 1 
       Screen 2 
       Bob 1 , 15 , 67 , 2 
       Call 'screco$' 
    EndIf 
    If geg1 = 186 And flag$ ( 47 ) = 0 
       oeffne = 1 
       flag$ ( 47 ) = 1 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
       Screen 0 
       Reset Zone 5 
       Set Zone 5 , 228 , 11 To 273 , 77 
       Set Zone 6 , 270 , 11 To 302 , 98 
    EndIf 
 EndIf 
 If verb = 3 
    If geg1 = 182 And flag$ ( 46 ) = 1 
       schliesse = 1 
       flag$ ( 46 ) = 0 
       Screen 2 
       Bob Off 1 
       Call 'screco$' 
    EndIf 
    If geg1 = 186 And flag$ ( 47 ) = 1 
       schliesse = 1 
       flag$ ( 47 ) = 0 
       Screen 2 
       Bob 5 , 206 , 6 , 3 
       Call 'screco$' 
       Screen 0 
       Reset Zone 5 
       Reset Zone 6 
       Set Zone 5 , 270 , 11 To 302 , 98 
    EndIf 
 EndIf 
 If verb = 7 And geg1 = 78 And geg2 = 184 And flag$ ( 63 ) = 0 
    flag$ ( 63 ) = 1 
    Call 'txt$' [ ereignis$ ( 93 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub testinventar 
    Call 'iconbank$' [ 1 ] 
    Screen 0 
    For i = 1 To 24 
       If inventar$ ( i ) = 0 
          inventar$ ( i ) = 223 
          invent$ ( i ) = Chr$ ( 10 ) + "ER IST SEHR STARK." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) 
          Exit 
       EndIf 
    Next 
    Gosub inventory 
    transport$ ( 223 ) = 2 
    Pop 
    Goto parser 
 EndIf 
 If verb = 12 And geg1 = 182 
    go = 2 
    Goto game_over 
 EndIf 
 Return 
 
 Label raum20: 
 If verb = 2 
    If geg1 = 196 And etage = 5 
       If flag$ ( 48 ) = 0 
          oeffne = 1 
          flag$ ( 48 ) = 1 
          Screen 2 
          Bob Off 8 
          Bob 9 , 157 , 22 , 12 
          Call 'screco$' 
          person$ ( 16 ) = 20 
          Gosub personendisplay 
          Pop 
          Goto parser 
       EndIf 
       If flag$ ( 48 ) = 2 
          Call 'txt$' [ Chr$ ( 10 ) + "DIE TÜR KANNST DU NICHT ÖFFNEN." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If ( geg1 = 191 Or geg1 = 192 Or geg1 = 193 Or geg1 = 194 Or geg1 = 195 Or geg1 = 196 ) 
       oeffne = 1 
       Call 'txt$' [ Chr$ ( 10 ) + "LAß DIE PATIENTEN IN RUHE !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 3 And geg1 = 196 And etage = 5 And flag$ ( 48 ) = 1 
    schliesse = 1 
    flag$ ( 48 ) = 0 
    Screen 2 
    Bob 8 , 168 , 67 , 14 
    Bob Off 9 
    Call 'screco$' 
    person$ ( 16 ) = 0 
    Gosub personendisplay 
 EndIf 
 If verb = 7 And geg1 = 2 And geg2 = 196 And etage = 5 
    benutze = 1 
    flag$ ( 48 ) = 0 
    Screen 2 
    Bob 8 , 168 , 67 , 14 
    Call 'screco$' 
    g = 2 
    Gosub ablegen 
    Call 'punkte$' [ 249 ] 
 EndIf 
 If verb = 11 
    person$ ( 2 ) = 0 
    person$ ( 14 ) = 0 
    person$ ( 15 ) = 0 
    person$ ( 16 ) = 0 
    Goto fahrstuhl 
 EndIf 
 If verb = 13 And geg1 = 174 And pers = 16 
    gib = 1 
    Call 'txt$' [ ereignis$ ( 55 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    g = 174 
    Gosub ablegen 
    person$ ( 16 ) = 0 
    person$ ( 2 ) = 20 
    Gosub personendisplay 
    handlung$ ( 4 ) = 2 
    Screen 2 
    Bob 9 , 157 , 22 , 13 
    Call 'screco$' 
    Call 'punkte$' [ 78 ] 
 EndIf 
 If verb = 16 
    If pers = 2 
       Call 'txt$' [ ereignis$ ( 55 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
    If pers = 14 
       Call 'txt$' [ objekt$ ( 2 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
    If pers = 15 
       Call 'txt$' [ Chr$ ( 10 ) + "KOMISCH, ER ANTWORTET NICHT." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
    If pers = 16 And reden$ ( 16 ) = 0 
       reden$ ( 16 ) = 1 
       Call 'unterhaltung_laden$' [ 8 ] 
       Call 'unterhaltung$' 
       verb = verb2 
       Pop 
       Goto parser 
    EndIf 
    If pers = 16 And reden$ ( 16 ) = 1 
       Call 'txt$' [ Chr$ ( 10 ) + Chr$ ( 34 ) + "BITTE BEEIL DICH !" + Chr$ ( 34 ) + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
 EndIf 
 Return 
 
 Label raum21: 
 If verb = 8 And geg1 = 198 
    Screen 0 
    Reset Zone 1 
    Set Zone 4 , 112 , 78 To 146 , 102 
    Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 9 And geg1 = 201 
    Screen 0 
    Reset Zone 4 
    Set Zone 1 , 112 , 78 To 146 , 102 
    Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 16 And pers = 13 And reden$ ( 13 ) = 0 
    reden$ ( 13 ) = 1 
    Call 'unterhaltung_laden$' [ 12 ] 
    Call 'unterhaltung$' 
    verb = verb2 
    If Btst ( 4 , gefragt ) 
       handlung$ ( 6 ) = 3 
       Call 'punkte$' [ 784 ] 
       g = 203 
       mz = 7 
       Gosub aufnehmen 
    EndIf 
    Pop 
    Goto parser 
 EndIf 
 Return 
 
 Label raum22: 
 If verb = 12 And ( geg1 = 210 Or geg1 = 211 Or geg1 = 212 ) 
    Call 'punkte$' [ 349 ] 
 EndIf 
 Return 
 
 Label raum23: 
 If verb = 7 
    If geg1 = 218 
       Add flag$ ( 50 ) , 1 , 1 To 4 
       Screen 0 
       If flag$ ( 50 ) = 1 
          Fade 3 , , , , , , , , , , , 0xad5 , , , , 0xad5 , , , , , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 , 0xad5 
       EndIf 
       If flag$ ( 50 ) = 2 Or flag$ ( 50 ) = 4 
          Fade 3 , , , , , , , , , , , 0x780 , , , , 0x452 , , , , , 0xf00 , 0xf77 , 0xc , 0xfbb , 0xccc , 0xff0 , 0x23 , 0x17 , 0xb0 , 0x0 , 0xaaf , 0x44f 
       EndIf 
       If flag$ ( 50 ) = 3 
          Fade 3 , , , , , , , , , , , 0x0 , , , , 0x0 , , , , , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 , 0x0 
       EndIf 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 219 
       Call 'txt$' [ objekt$ ( 7 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 9 
    If geg1 = 220 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Fade 1 , , , , , , , , , , , 0x760 , , , , 0x760 , , , , , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 , 0x760 
       Wait 100 
       Call 'txt$' [ ereignis$ ( 85 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "ÖFFNE BATTERIEFACH" + geg$ ( 0 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "NIMM BATTERIEN" + geg$ ( 0 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "DIE KANNST DU NICHT NEHMEN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "PUL RAUß BATTERIEN" + geg$ ( 0 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "REIß AB FINGERNAGEL" + geg$ ( 0 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "SCHMEIß AUS FENSTER BATTERIEN+LAMEBOY" + geg$ ( 0 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 1 
       Ink 0 , 5 
       Text 2 , 6 , "SCHREI AN GERD" + geg$ ( 0 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "O.K." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Call 'txt$' [ ereignis$ ( 42 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       handlung$ ( 3 ) = 5 
       Call 'punkte$' [ 81 ] 
       r = 1 
       Gosub initraum 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 221 
       Call 'txt$' [ ereignis$ ( 40 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 11 
    Call 'txt$' [ ereignis$ ( 41 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'verb_raus$' 
    verb = verb2 
    Call 'verb_rein$' 
    Pop 
    Goto parser 
 EndIf 
 Return 
 
 Label raum24: 
 If verb = 2 
    If geg1 = 226 And flag$ ( 66 ) = 0 
       flag$ ( 66 ) = 1 
       Call 'txt$' [ ereignis$ ( 96 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 2 
       Bob 1 , 65 , 19 , 1 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 229 And flag$ ( 67 ) = 0 
       flag$ ( 67 ) = 1 
       oeffne = 1 
       Screen 2 
       Bob 2 , 171 , 19 , 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 3 
    If geg1 = 226 And flag$ ( 66 ) = 1 
       flag$ ( 66 ) = 0 
       Call 'txt$' [ ereignis$ ( 97 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 2 
       Bob Off 1 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 229 And flag$ ( 67 ) = 1 
       flag$ ( 67 ) = 0 
       schliesse = 1 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If verb = 5 And geg1 = 230 
    Screen 2 
    Bob Off 3 
    Call 'screco$' 
    Screen 0 
    For i = 7 To 14 
       Reset Zone i 
    Next 
    Pop 
    Goto parser 
 EndIf 
 If verb = 7 And geg1 = 231 
    Screen 0 
    Limit Mouse 339 , 99 To 436 , 114 
    X Mouse = X Hard ( wx ) 
    Y Mouse = Y Hard ( wy ) 
    Gr Writing 10 
    While Mouse Click <> 1 
       wx = X Screen ( X Mouse ) 
       wy = Y Screen ( Y Mouse ) 
       Box wx , wy To wx + 105 , wy + 61 
       Wait Vbl 
       Box wx , wy To wx + 105 , wy + 61 
       Wait Vbl 
    Wend 
    Gr Writing 1 
    Screen 2 
    Bob 3 , wx , wy , 3 
    Call 'screco$' 
    Gosub r24_zones 
    Call 'maus_an$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 10 
    If geg1 = 226 And flag$ ( 66 ) = 1 
       r = 16 
       Gosub initraum 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 227 
       r = 25 
       Gosub initraum 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 229 And flag$ ( 67 ) = 1 
       r = 26 
       Gosub initraum 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 Return 
 
 Label raum25: 
 If verb = 7 And geg1 = 172 And geg2 = 239 
    Call 'txt$' [ ereignis$ ( 98 ) ] 
    Call 'clickmouse$' 
    Screen 2 
    Bob Off 2 
    Call 'screco$' 
    g = 172 
    Gosub ablegen 
    Gosub testinventar 
    Call 'iconbank$' [ 1 ] 
    Screen 0 
    For i = 1 To 24 
       If inventar$ ( i ) = 0 
          inventar$ ( i ) = 239 
          invent$ ( i ) = Chr$ ( 10 ) + "DER STINKT !!!" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) 
          Exit 
       EndIf 
    Next 
    Gosub inventory 
    transport$ ( 239 ) = 2 
    Pop 
    Goto parser 
 EndIf 
 If verb = 10 
    If geg1 = 238 
       Call 'txt$' [ ereignis$ ( 100 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       r = 24 
       Gosub initraum 
       Pop 
       Goto parser 
    Else 
       go = 7 
       Goto game_over 
    EndIf 
 EndIf 
 If verb = 11 
    Call 'txt$' [ Chr$ ( 10 ) + "JA, WIE DENN ???" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'verb_raus$' 
    verb = verb2 
    Call 'verb_rein$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 12 And geg1 = 239 
    Call 'txt$' [ Chr$ ( 10 ) + "DAS TUST DU AUS ABSCHEU NICHT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 16 
    If pers = 19 
       If reden$ ( 19 ) = 0 
          Call 'unterhaltung_laden$' [ 15 ] 
          Call 'unterhaltung$' 
          reden$ ( 19 ) = 1 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
    If pers = 20 
       If reden$ ( 20 ) = 0 
          Call 'unterhaltung_laden$' [ 16 ] 
          Call 'unterhaltung$' 
          reden$ ( 20 ) = 1 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
 EndIf 
 Return 
 
 Label raum26: 
 If verb = 1 And geg1 = 249 
    Screen 2 
    Bob 5 , 101 , 1 , 2 
    If transport$ ( 132 ) = 0 
       Bob 4 , 126 , 16 , 1 
    EndIf 
    Call 'screco$' 
    Screen 0 
    Reset Zone 
    Set Zone 6 , 156 , 17 To 170 , 30 
    Set Zone 7 , 123 , 38 To 141 , 50 
    Set Zone 8 , 118 , 56 To 131 , 71 
    Set Zone 9 , 165 , 68 To 178 , 76 
 EndIf 
 If verb = 7 And geg1 = 132 And geg2 = 249 
    If transport$ ( 89 ) = 2 Or transport$ ( 255 ) = 2 
       Call 'txt$' [ Chr$ ( 10 ) + "DU HAST GENUG GELD." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    Else 
       Call 'txt$' [ ereignis$ ( 102 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 132 
       Gosub ablegen 
       g = 255 
       mz = 11 
       Gosub aufnehmen 
       transport$ ( 132 ) = 0 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 12 
    If geg1 > 249 And geg1 < 253 
       Call 'txt$' [ Chr$ ( 10 ) + "DAS KANNST DU DIR NICHT LEISTEN." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Screen 2 
       Bob Off 4 
       Bob Off 5 
       Call 'screco$' 
       Call 'init_zones$' 
       Pop 
       Goto parser 
    EndIf 
    If geg1 = 253 
       If transport$ ( 254 ) = 2 
          Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Screen 2 
          Bob Off 4 
          Bob Off 5 
          Call 'screco$' 
          Call 'init_zones$' 
          Pop 
          Goto parser 
       Else If transport$ ( 89 ) = 2 Or transport$ ( 255 ) = 2 
          Call 'txt$' [ ereignis$ ( 101 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          g = 89 
          Gosub ablegen 
          g = 255 
          Gosub ablegen 
          transport$ ( 255 ) = 1 
          g = 255 
          mz = 11 
          Gosub aufnehmen 
          g = 254 
          mz = 9 
          Gosub aufnehmen 
          Screen 2 
          Bob Off 4 
          Bob Off 5 
          Call 'screco$' 
          Call 'init_zones$' 
          Pop 
          Goto parser 
       Else 
          Call 'txt$' [ Chr$ ( 10 ) + "DU HAST KEIN GELD." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
          Screen 2 
          Bob Off 4 
          Bob Off 5 
          Call 'screco$' 
          Call 'init_zones$' 
          Pop 
          Goto parser 
       EndIf 
    EndIf 
 EndIf 
 Return 
 
 Label raum_alle: 
 If verb = 1 
    If geg1 = 8 And transport$ ( 8 ) = 2 
       flag$ ( 2 ) = 1 
       inventar$ ( mz - 4 ) = 9 
       invent$ ( mz - 4 ) = Chr$ ( 10 ) + "DIE HAST DU SCHON GELESEN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) 
       Gosub inventory 
       transport$ ( 8 ) = 0 
       transport$ ( 9 ) = 2 
    EndIf 
    If geg1 = 11 
       Bset.<> 1 , flag$ ( 53 ) 
    EndIf 
    If geg1 = 15 
       person$ ( 1 ) = "JUPP JENNSEN" 
       flag$ ( 54 ) = 1 
       person$ ( 1 ) = raum 
       Gosub personendisplay 
       Call 'punkte$' [ 100 ] 
    EndIf 
 EndIf 
 If verb = 2 
    If geg1 = 110 
       oeffne = 1 
       Call 'txt$' [ Chr$ ( 10 ) + "TOLL ! JETZT HAST DU DIE AUFNAHMEN ZERSTÖRT !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 110 
       Gosub ablegen 
    EndIf 
    If geg1 = 127 And flag$ ( 42 ) > 0 
       oeffne = 1 
       flag$ ( 42 ) = 0 
       Gosub testinventar 
       Call 'iconbank$' [ 1 ] 
       Screen 0 
       For i = 1 To 24 
          If inventar$ ( i ) = 0 
             inventar$ ( i ) = 165 
             invent$ ( i ) = Chr$ ( 10 ) + "DIESE BATTERIEN SIND FAST SCHON WIE" + Chr$ ( 10 ) + "STROM AUS DER STECKDOSE" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) 
             Exit 
          EndIf 
       Next 
       Gosub inventory 
       transport$ ( 165 ) = 2 
       geg$ ( 127 ) = "TASCHENLAMPE" 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 7 
    If geg1 = 165 And geg2 = 127 And flag$ ( 42 ) = 0 
       benutze = 1 
       flag$ ( 42 ) = 1 
       g = 165 
       Gosub ablegen 
       transport$ ( 165 ) = 1 
       geg$ ( 127 ) = "TASCHENLAMPE+BATTERIEN" 
    EndIf 
    If geg1 = 222 And geg2 = 223 And Not raum = 12 
       Call 'txt$' [ Chr$ ( 10 ) + "WORAN DENN, DU NASE ?" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       Pop 
       Goto parser 
    EndIf 
 EndIf 
 If verb = 8 
    If geg1 = 127 And flag$ ( 42 ) = 1 
       schalte = 1 
       flag$ ( 42 ) = 2 
    EndIf 
 EndIf 
 If verb = 9 
    If geg1 = 127 And flag$ ( 42 ) = 2 
       schalte = 1 
       flag$ ( 42 ) = 1 
    EndIf 
 EndIf 
 If verb = 13 And geg1 = 131 And pers = 9 
    gib = 1 
    g = 131 
    Gosub ablegen 
    Call 'txt$' [ ereignis$ ( 54 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 If verb = 16 
    If pers = 1 
       Call 'txt$' [ Chr$ ( 10 ) + "FÜHRST DU IMMER SELBSTGESPRÄCHE ?" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
    If pers = 8 
       If reden$ ( 8 ) = 0 
          Call 'unterhaltung_laden$' [ 1 ] 
          Call 'unterhaltung$' 
          reden$ ( 8 ) = 1 
          Call 'punkte$' [ 53 ] 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
       If reden$ ( 8 ) = 1 
          Call 'txt$' [ Chr$ ( 10 ) + "ICH HABE ES EILIG !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
       EndIf 
    EndIf 
    If pers = 9 
       If reden$ ( 9 ) = 0 
          Call 'unterhaltung_laden$' [ 3 ] 
          Call 'unterhaltung$' 
          If Btst ( 0 , gefragt ) 
             reden$ ( 9 ) = 1 
             If transport$ ( 36 ) = 1 
                Call 'txt$' [ ereignis$ ( 22 ) ] 
                Call 'clickmouse$' 
                Call 'screco$' 
                transport$ ( 36 ) = 0 
             Else 
                Call 'txt$' [ ereignis$ ( 21 ) ] 
                Call 'clickmouse$' 
                Call 'screco$' 
             EndIf 
          EndIf 
          verb = verb2 
          Pop 
          Goto parser 
       EndIf 
       If reden$ ( 9 ) = 1 
          Call 'txt$' [ Chr$ ( 10 ) + "ICH STREIKE !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
          Call 'clickmouse$' 
          Call 'screco$' 
       EndIf 
    EndIf 
 EndIf 
 If flag$ ( 53 ) = 111 And flag$ ( 30 ) = 0 
    flag$ ( 30 ) = 1 
    Call 'txt$' [ ereignis$ ( 2 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'punkte$' [ 500 ] 
 EndIf 
 Return 
 
 Label test_recall: 
 If handlung$ ( 6 ) = 5 And flag$ ( 58 ) = 11 
    Call 'txt$' [ ereignis$ ( 59 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'txt$' [ ereignis$ ( 60 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'txt$' [ ereignis$ ( 58 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Screen 0 
    Fade 3 
    Wait 100 
    Call 'punkte$' [ 1001 ] 
    go = 4 
    Goto game_over 
 EndIf 
 Return 
 
 Label handlung: 
 If zeit = 20 And flag$ ( 56 ) = 1 
    person$ ( 8 ) = 3 
    Gosub personendisplay 
 EndIf 
 If zeit = 23 
    person$ ( 7 ) = 4 
    person$ ( 9 ) = 4 
    reden$ ( 7 ) = 1 
    If raum = 4 
       Gosub personendisplay 
       Screen 2 
       Bob 1 , 111 , 42 , 8 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 25 
    flag$ ( 14 ) = 1 
    If raum = 4 
       Screen 2 
       Bob 2 , 103 , 28 , 2 
       Bob 1 , 111 , 42 , 8 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 25 And flag$ ( 56 ) = 1 
    person$ ( 8 ) = 2 
    Gosub personendisplay 
 EndIf 
 If zeit = 26 
    person$ ( 7 ) = 5 
    person$ ( 9 ) = 5 
    If raum = 4 
       Gosub personendisplay 
       Screen 2 
       Bob Off 1 
       Call 'screco$' 
    EndIf 
    If raum = 5 
       Gosub personendisplay 
       Call 'test_joy2$' 
       Load pfad$ + "Grafiken/Raum5_1.Pic" 
       Unpack 8 To 2

       Call 'roller_blind$' 
       Call 'punkte$' [ 145 ] 
    EndIf 
 EndIf 
 If zeit = 27 
    flag$ ( 14 ) = 0 
    If raum = 4 
       Screen 2 
       Bob Off 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 28 And flag$ ( 56 ) = 1 
    person$ ( 8 ) = 1 
    If raum = 1 
       Gosub personendisplay 
       Screen 2 
       Bob 19 , 0 , 34 , 10 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 31 
    person$ ( 8 ) = 4 
    If raum = 1 
       Gosub personendisplay 
       Screen 2 
       Bob Off 19 
       Call 'screco$' 
    EndIf 
    If raum = 4 
       Gosub personendisplay 
       Screen 2 
       Bob 1 , 145 , 55 , 7 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 33 
    flag$ ( 17 ) = 1 
    If raum = 4 
       Screen 2 
       Bob 5 , 122 , 40 , 5 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 34 
    person$ ( 8 ) = 7 
    If raum = 4 
       Gosub personendisplay 
       Screen 2 
       Bob Off 1 
       Call 'screco$' 
    EndIf 
    If raum = 7 
       Gosub personendisplay 
       Screen 2 
       Bob 5 , 203 , 0 , 3 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 35 
    flag$ ( 17 ) = 0 
    If raum = 4 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 37 
    person$ ( 8 ) = 8 
    Gosub personendisplay 
    reden$ ( 8 ) = 1 
    If raum = 7 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
    EndIf 
    If raum = 8 
       If transport$ ( 111 ) = 2 
          g = 111 
          Gosub ablegen 
          Call 'txt$' [ ereignis$ ( 23 ) ] 
       Else 
          Call 'txt$' [ ereignis$ ( 24 ) ] 
       EndIf 
       Call 'clickmouse$' 
       Call 'screco$' 
       person$ ( 8 ) = 7 
       person$ ( 8 ) = "BARBARA BRINK" 
       Gosub personendisplay 
    EndIf 
    If transport$ ( 111 ) = 1 
       transport$ ( 111 ) = 0 
    EndIf 
 EndIf 
 If zeit = 40 
    person$ ( 8 ) = 7 
    If raum = 7 
       Gosub personendisplay 
       Screen 2 
       Bob 5 , 205 , 96 , 4 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 43 
    person$ ( 8 ) = 11 
    If raum = 7 
       Gosub personendisplay 
       Screen 2 
       Bob Off 5 
       Call 'screco$' 
    EndIf 
    If raum = 11 
       Gosub personendisplay 
       Screen 2 
       Bob 3 , 138 , 83 , 2 
       Call 'screco$' 
    EndIf 
 EndIf 
 If zeit = 46 
    person$ ( 8 ) = 14 
    If raum = 11 
       Gosub personendisplay 
       Screen 2 
       Bob Off 3 
       Call 'screco$' 
    EndIf 
    If raum = 14 
       Gosub personendisplay 
       Call 'test_joy2$' 
       Load pfad$ + "Grafiken/Raum14_1.Pic" 
       Unpack 8 To 2

       If flag$ ( 36 ) = 1 
          Screen 2 
          Bob 2 , 55 , 35 , 2 
       EndIf 
       Call 'roller_blind$' 
       Call 'clickmouse$' 
       Call 'test_joy2$' 
       Load pfad$ + "Grafiken/Raum14_2.Pic" 
       Unpack 8 To 2

       If flag$ ( 36 ) = 1 
          Screen 2 
          Bob 2 , 55 , 35 , 2 
       EndIf 
       Call 'roller_blind$' 
       Call 'clickmouse$' 
       person$ ( 8 ) = 0 
       Gosub personendisplay 
       Call 'test_joy2$' 
       Load pfad$ + "Grafiken/Raum14.Pic" 
       Unpack 8 To 2

       If flag$ ( 36 ) = 1 
          Screen 2 
          Bob 2 , 55 , 35 , 2 
       EndIf 
       Call 'roller_blind$' 
       Call 'punkte$' [ 514 ] 
    EndIf 
 EndIf 
 If zeit = 47 
    person$ ( 8 ) = 0 
 EndIf 
 If zeit > 100 And handlung$ ( 1 ) = 0 And raum > 3 And raum < 16 And flag$ ( 56 ) = 1 
    Call 'txt$' [ ereignis$ ( 26 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    handlung$ ( 1 ) = 1 
 EndIf 
 If zeit > 130 And handlung$ ( 2 ) = 0 And raum > 3 And raum < 16 And flag$ ( 56 ) = 1 
    Call 'txt$' [ ereignis$ ( 49 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    handlung$ ( 2 ) = 1 
    reden$ ( 7 ) = 1 
    person$ ( 3 ) = 0 
    flag$ ( 3 ) = 1 
    flag$ ( 4 ) = 1 
    Gosub personendisplay 
 EndIf 
 If handlung$ ( 3 ) = 2 
    handlung$ ( 3 ) = 3 
    Call 'txt$' [ ereignis$ ( 51 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
 EndIf 
 If zeit > 140 And flag$ ( 65 ) = 0 
    flag$ ( 65 ) = 1 
    Call 'txt$' [ ereignis$ ( 95 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
 EndIf 
 If zeit > 180 And handlung$ ( 3 ) = 1 And raum > 3 
    handlung$ ( 3 ) = 2 
    Call 'txt$' [ Chr$ ( 10 ) + "INZWISCHEN..." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'maus_aus$' 
    Screen 2 
    Cls 0 
    Call 'roller_blind$' 
    Screen 3 
    Cls 0 
    Call 'test_joy2$' 
    Screen 2 
    Load pfad$ + "Grafiken/Raum23.Pic" , 8 
    Unpack 8 To 2

    Erase 8 
    Screen 0 
    Get Palette 2 
    Call 'roller_blind$' 
    Call 'txt$' [ ereignis$ ( 25 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Wait 100 
    Fade 3 , , , , , , , , , , , , , , , , , , , , 0xf00 , 0xf77 , 0xc , 0xfbb , 0xcc , 0xff0 , 0x23 , 0x17 , 0xb0 , 0x0 , 0xaaf , 0x44f 
    Wait 100 
    flag$ ( 49 ) = 1 
    r = raum 
    Gosub initraum 
    Return 
 EndIf 
 If zeit > 190 And handlung$ ( 6 ) = 0 And raum > 3 And raum < 16 And flag$ ( 56 ) = 1 
    Call 'txt$' [ ereignis$ ( 52 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    handlung$ ( 6 ) = 1 
    person$ ( 13 ) = 21 
 EndIf 
 If person$ ( 8 ) = raum And transport$ ( 111 ) = 2 
    Call 'txt$' [ ereignis$ ( 23 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    person$ ( 8 ) = "BARBARA BRINK" 
    g = 111 
    Gosub ablegen 
    reden$ ( 8 ) = 1 
    Call 'punkte$' [ 99 ] 
 EndIf 
 If raum = 1 
    If handlung$ ( 1 ) = 1 
       Call 'txt$' [ ereignis$ ( 28 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       handlung$ ( 1 ) = 2 
       person$ ( 5 ) = "CHRISTIANE" 
    EndIf 
    If handlung$ ( 2 ) = 1 
       Call 'txt$' [ ereignis$ ( 37 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       handlung$ ( 2 ) = 2 
       person$ ( 3 ) = "HERBERT" 
       geg$ ( 6 ) = "MONITOR(AN)" 
       flag$ ( 3 ) = 1 
       geg$ ( 7 ) = "AMIGA 2000(AN)" 
       flag$ ( 4 ) = 1 
    EndIf 
    If handlung$ ( 3 ) = 3 
       Call 'txt$' [ ereignis$ ( 27 ) ] 
       Call 'clickmouse$' 
       handlung$ ( 3 ) = 4 
       person$ ( 6 ) = "GERD" 
       gehe = 1 
       r = 23 
       Gosub initraum 
       ' '      Pop ' 
       ' '      Goto PARSER ' 
       Return 
    EndIf 
    If transport$ ( 165 ) = 2 
       handlung$ ( 3 ) = 1 
       Call 'txt$' [ ereignis$ ( 35 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
       g = 165 
       Gosub ablegen 
       g = 164 
       Gosub ablegen 
    EndIf 
    If handlung$ ( 5 ) = 1 
       handlung$ ( 5 ) = 2 
       Call 'txt$' [ ereignis$ ( 50 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
    If handlung$ ( 6 ) = 1 
       handlung$ ( 6 ) = 2 
       Call 'txt$' [ ereignis$ ( 56 ) ] 
       Call 'clickmouse$' 
       Call 'screco$' 
    EndIf 
    If handlung$ ( 6 ) = 3 And transport$ ( 203 ) = 2 
       person$ ( 13 ) = 0 
       g = 203 
       Gosub ablegen 
       transport$ ( 203 ) = 1 
       handlung$ ( 6 ) = 4 
    EndIf 
 EndIf 
 If raum = 4 And flag$ ( 30 ) = 0 
    flag$ ( 30 ) = 1 
    Call 'txt$' [ ereignis$ ( 13 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    flag$ ( 53 ) = 111 
 EndIf 
 If raum = 18 And flag$ ( 60 ) = 1 
    flag$ ( 60 ) = 2 
    Call 'txt$' [ ereignis$ ( 90 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
 EndIf 
 Inc zeit 
 Return 
 
 Label aufnehmen: 
 If transport$ ( g ) = 1 
    Gosub testinventar 
    Call 'iconbank$' [ 1 ] 
    Screen 0 
    Reset Zone mz 
    Screen 2 
    Bob Off mz 
    Call 'screco$' 
    For i = 1 To 24 
       If inventar$ ( i ) = 0 
          inventar$ ( i ) = g 
          invent$ ( i ) = objekt$ ( g - raumaddierer$ ( raum - 1 ) ) 
          Exit 
       EndIf 
    Next 
    Gosub inventory 
    transport$ ( g ) = 2 
    Return 
 EndIf 
 If transport$ ( g ) = 2 
    Call 'txt$' [ Chr$ ( 10 ) + "HAST DU SCHON !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Return 
 EndIf 
 If transport$ ( g ) > 2 
    Call 'txt$' [ ereignis$ ( transport$ ( g ) ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Return 
 EndIf 
 Return 
 
 Label ablegen: 
 For i = 1 To 24 
    If inventar$ ( i ) = g 
       inventar$ ( i ) = 0 
       transport$ ( g ) = 0 
       invent$ ( i ) = "" 
       Exit 
    EndIf 
 Next 
 Gosub inventory 
 Return 
 
 Label testinventar: 
 liste = 0 
 For i = 1 To 24 
    If inventar$ ( i ) > 0 
       Inc liste 
    EndIf 
 Next 
 If liste = 24 
    Call 'txt$' [ Chr$ ( 10 ) + "MEHR KANNST DU NICHT TRAGEN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Pop 
    Goto parser 
 EndIf 
 Return 
 
 Label personendisplay: 
 Call 'iconbank$' [ 2 ] 
 Screen 3 
 person = 1 
 i = 0 
 For j = 1 To 10 
    personen$ ( j ) = 0 
 Next 
 Repeat 
    If person$ ( person ) = raum 
       Paste Icon i * 31 , 0 , person 
       personen$ ( i + 1 ) = person 
       Inc i 
    EndIf 
    Inc person 
 Until i = 10 Or person = 21 
 Cls 0 , i * 31 , 0 To ( i * 31 ) + ( 320 - i ) , 39 
 Return 
 
 Label initraum: 
 raum2 = raum 
 raum = r 
 Call 'maus_aus$' 
 Screen 2 
 Bob Off 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Call 'test_joy2$' 
 Screen 2 
 Load pfad$ + "Grafiken/Raum" + ( Str$ ( raum ) - " " ) + ".Bobs.Abk" 
 If raum = 11 And flag$ ( 68 ) = 1 And zeit > 47 
    Load pfad$ + "Grafiken/Raum11_1.Pic" , 8 
 Else 
    If raum = 5 And person$ ( 7 ) = 5 
       Load pfad$ + "Grafiken/Raum5_1.Pic" , 8 
    Else 
       If raum = 14 
          If zeit = 46 
             Load pfad$ + "Grafiken/Raum14_1.Pic" , 8 
          Else 
             If zeit = 47 
                Load pfad$ + "Grafiken/Raum14_2.Pic" , 8 
             Else 
                Load pfad$ + "Grafiken/Raum14.Pic" , 8 
             EndIf 
          EndIf 
       Else 
          Load pfad$ + "Grafiken/Raum" + ( Str$ ( raum ) - " " ) + ".Pic" , 8 
       EndIf 
    EndIf 
 EndIf 
 Unpack 8 To 2

 Erase 8 
 Load pfad$ + "Daten/Raum" + ( Str$ ( raum ) - " " ) + ".Zones" , 8 
 Set Input 42 , - 1 
 Open In 1 , pfad$ + "Texte/Raum" + ( Str$ ( raum ) - " " ) + ".Umgebung.Txt" 
 Line Input # 1 , umgebung$ 
 umgebung$ = umgebung$ + "*" + Chr$ ( 10 ) 
 Close 1 
 Open In 1 , pfad$ + "Texte/Raum" + ( Str$ ( raum ) - " " ) + ".Objekte.Txt" 
 For i = 1 To raumaddierer$ ( raum ) - raumaddierer$ ( raum - 1 ) 
    Line Input # 1 , objekt$ ( i ) 
    objekt$ ( i ) = objekt$ ( i ) + "*" + Chr$ ( 10 ) 
 Next 
 Close 1 
 If flag$ ( 54 ) = 1 
    person$ ( 1 ) = raum 
 EndIf 
 Screen 0 
 Flash Off 
 Get Palette 2 
 Call 'init_zones$' 
 Gosub "INITRAUM" + ( Str$ ( raum ) - " " ) 
 Screen 3 
 Cls 0 
 Gosub personendisplay 
 Screen 0 
 Call 'cursor$' 
 If raum2 = 19 
    Bank Swap 1 , 11 
    Change Mouse 4 
    Bank Swap 1 , 11 
 EndIf 
 If r = 19 
    Bank Swap 1 , 11 
    Change Mouse 5 
    Bank Swap 1 , 11 
 EndIf 
 Call 'roller_blind$' 
 Call 'maus_an$' 
 Gosub handlung 
 If Not ( raum = 22 Or raum = 23 ) 
    betreten$ ( raum ) = 1 
 EndIf 
 Return 
 
 Label initraum1: 
 If raum2 > 3 
    flag$ ( 1 ) = 1 
 EndIf 
 If transport$ ( 2 ) = 1 
    If flag$ ( 1 ) = 0 Or flag$ ( 1 ) = 2 
       Screen 2 
       Bob 2 , 54 , 41 , 3 
       Screen 0 
       Set Zone 2 , 50 , 39 To 61 , 51 
    Else 
       Screen 2 
       Bob 14 , 49 , 0 , 4 
       Screen 0 
       Set Zone 2 , 61 , 20 To 67 , 30 
    EndIf 
 Else 
    If flag$ ( 1 ) = 1 
       Screen 2 
       Bob 14 , 49 , 0 , 8 
    EndIf 
 EndIf 
 If transport$ ( 5 ) = 1 
    Screen 2 
    Bob 5 , 305 , 34 , 5 
    Screen 0 
    Set Zone 5 , 306 , 33 To 316 , 47 
 EndIf 
 If flag$ ( 5 ) = 0 
    Screen 2 
    Bob 16 , 282 , 0 , 7 
    Screen 0 
    Set Zone 18 , 281 , 0 To 319 , 54 
 Else 
    Screen 0 
    Set Zone 16 , 281 , 0 To 319 , 54 
 EndIf 
 If flag$ ( 3 ) = 1 And flag$ ( 4 ) = 1 And ( handlung$ ( 2 ) = 0 Or handlung$ ( 2 ) = 3 ) 
    Screen 2 
    Bob 6 , 136 , 81 , 6 
 EndIf 
 If handlung$ ( 2 ) > 0 And handlung$ ( 2 ) < 3 
    Screen 2 
    Bob 6 , 136 , 81 , 9 
 EndIf 
 If flag$ ( 2 ) = 0 
    If transport$ ( 8 ) = 1 
       Screen 2 
       Bob 8 , 57 , 123 , 2 
       Screen 0 
       Set Zone 8 , 57 , 123 To 85 , 128 
    EndIf 
 Else 
    If transport$ ( 9 ) = 1 
       Screen 2 
       Bob 9 , 57 , 123 , 2 
       Screen 0 
       Set Zone 9 , 57 , 123 To 85 , 128 
    EndIf 
 EndIf 
 If person$ ( 8 ) = 1 
    Screen 2 
    Bob 19 , 0 , 34 , 10 
 EndIf 
 Return 
 
 Label initraum2: 
 If raum2 = 3 
    flag$ ( 6 ) = 1 
 EndIf 
 Flash 22 , "(88f,20)(009,20)" 
 If transport$ ( 31 ) = 1 And flag$ ( 6 ) = 0 
    Screen 2 
    Bob 13 , 205 , 19 , 2 
    Screen 0 
    Set Zone 13 , 205 , 19 To 220 , 37 
 EndIf 
 If flag$ ( 6 ) = 1 
    Screen 2 
    Bob 14 , 196 , 8 , 3 
    If transport$ ( 31 ) = 1 
       Screen 2 
       Bob 13 , 201 , 16 , 4 
       Screen 0 
       Set Zone 13 , 201 , 14 To 211 , 30 
    EndIf 
 EndIf 
 If flag$ ( 7 ) = 1 
    Screen 2 
    Bob 4 , 101 , 55 , 5 
 EndIf 
 If flag$ ( 8 ) = 1 
    Screen 2 
    Bob 6 , 126 , 54 , 6 
 EndIf 
 Return 
 
 Label initraum3: 
 If flag$ ( 9 ) = 1 
    Screen 2 
    Bob 6 , 100 , 56 , 3 
    If transport$ ( 36 ) = 1 
       Bob 1 , 126 , 68 , 7 
       Screen 0 
       Set Zone 1 , 127 , 66 To 131 , 72 
    EndIf 
 EndIf 
 If flag$ ( 10 ) = 1 
    Screen 2 
    Bob 7 , 127 , 29 , 2 
    If transport$ ( 37 ) = 1 
       Bob 2 , 153 , 36 , 8 
       Screen 0 
       Set Zone 2 , 155 , 36 To 158 , 40 
    EndIf 
 EndIf 
 If flag$ ( 11 ) = 1 
    Screen 2 
    Bob 3 , 131 , 73 , 4 
 EndIf 
 If flag$ ( 12 ) = 1 
    Screen 2 
    Bob 4 , 129 , 84 , 5 
 EndIf 
 If flag$ ( 13 ) = 1 
    Screen 2 
    Bob 5 , 129 , 95 , 6 
 EndIf 
 If flag$ ( 52 ) = 1 
    Screen 2 
    Bob 10 , 154 , 63 , 9 
 EndIf 
 Return 
 
 Label initraum4: 
 If person$ ( 7 ) = 5 
    flag$ ( 14 ) = 0 
    flag$ ( 59 ) = 0 
 EndIf 
 If raum2 = 5 
    flag$ ( 14 ) = 1 
    flag$ ( 59 ) = 2 
 EndIf 
 If raum2 = 6 Or raum2 = 10 Or raum2 > 11 
    flag$ ( 15 ) = 1 
 EndIf 
 If ( raum2 > 6 And raum2 < 9 ) Or raum = 11 
    flag$ ( 17 ) = 1 
 EndIf 
 If flag$ ( 14 ) = 1 
    Screen 2 
    Bob 2 , 103 , 28 , 2 
 EndIf 
 If flag$ ( 15 ) = 1 
    Screen 2 
    If flag$ ( 26 ) = 1 
       Bob 3 , 119 , 39 , 6 
    Else 
       Bob 3 , 119 , 39 , 3 
    EndIf 
 EndIf 
 If flag$ ( 16 ) = 1 
    Screen 2 
    Bob 4 , 132 , 47 , 4 
 EndIf 
 If flag$ ( 17 ) = 1 
    Screen 2 
    Bob 5 , 122 , 40 , 5 
 EndIf 
 If person$ ( 7 ) = 4 
    Screen 2 
    Bob 1 , 111 , 42 , 8 
 EndIf 
 If person$ ( 8 ) = 4 
    Screen 2 
    Bob 1 , 145 , 55 , 7 
 EndIf 
 Return 
 
 Label initraum5: 
 If flag$ ( 19 ) = 1 And flag$ ( 22 ) = 1 
    Screen 2 
    Bob 1 , 34 , 44 , 2 
 EndIf 
 If flag$ ( 20 ) = 1 And flag$ ( 29 ) = 1 
    Screen 2 
    Bob 2 , 168 , 42 , 3 
    Screen 0 
    Set Zone 7 , 166 , 39 To 194 , 65 
    Flash 18 , "(F00,40)(000,40)" 
 Else 
    Screen 0 
    Set Zone 15 , 166 , 39 To 194 , 65 
 EndIf 
 If flag$ ( 21 ) = 1 And flag$ ( 23 ) = 1 
    Screen 2 
    Bob 3 , 221 , 34 , 4 
 EndIf 
 Return 
 
 Label initraum6: 
 If raum2 = 10 Or raum2 > 11 
    flag$ ( 24 ) = 2 
    flag$ ( 25 ) = 1 
    If transport$ ( 77 ) = 1 
       flag$ ( 28 ) = 1 
    EndIf 
 EndIf 
 If flag$ ( 27 ) = 0 
    Screen 0 
    Set Zone 8 , 230 , 61 To 249 , 67 
 Else 
    Screen 0 
    Set Zone 20 , 230 , 61 To 249 , 67 
 EndIf 
 If transport$ ( 76 ) = 1 
    Screen 0 
    Set Zone 5 , 110 , 57 To 114 , 65 
    Screen 2 
    Bob 5 , 110 , 57 , 6 
 EndIf 
 If transport$ ( 77 ) = 1 
    If flag$ ( 28 ) = 0 
       Screen 0 
       Set Zone 6 , 147 , 64 To 157 , 67 
       Screen 2 
       Bob 6 , 145 , 64 , 7 
    Else 
       Screen 0 
       Set Zone 6 , 188 , 64 To 200 , 67 
       Screen 2 
       Bob 6 , 186 , 64 , 7 
    EndIf 
 EndIf 
 If transport$ ( 78 ) = 1 
    Screen 0 
    Set Zone 7 , 202 , 64 To 208 , 67 
    Screen 2 
    Bob 7 , 200 , 65 , 5 
 EndIf 
 If transport$ ( 88 ) = 1 
    Screen 0 
    Set Zone 17 , 76 , 14 To 83 , 23 
    Screen 2 
    Bob 17 , 73 , 8 , 9 
 EndIf 
 If transport$ ( 89 ) = 1 
    Screen 0 
    Set Zone 18 , 40 , 19 To 47 , 28 
    Screen 2 
    Bob 18 , 37 , 13 , 8 
 EndIf 
 If flag$ ( 26 ) = 1 
    Screen 0 
    Set Zone 6 , 195 , 14 To 209 , 18 
    Call 'rot$' 
    Screen 2 
    Bob 6 , 194 , 6 , 12 
 EndIf 
 
 Label initraum6_2: 
 If flag$ ( 25 ) = 0 
    If flag$ ( 24 ) = 0 
       Screen 0 
       Set Zone 13 , 119 , 63 To 181 , 70 
       Screen 2 
       Bob 15 , 122 , 6 , 2 
       Bob 13 , 89 , 0 , 11 
    EndIf 
    If flag$ ( 24 ) = 1 
       Screen 0 
       Set Zone 13 , 119 , 63 To 181 , 70 
       Screen 2 
       Bob 15 , 122 , 6 , 3 
       Bob 13 , 89 , 0 , 11 
    EndIf 
    If flag$ ( 24 ) = 2 
       Screen 0 
       Set Zone 13 , 119 , 63 To 181 , 70 
       Screen 2 
       Bob 15 , 122 , 6 , 4 
       Bob 13 , 89 , 0 , 11 
    EndIf 
 Else 
    If flag$ ( 24 ) = 0 
       Screen 0 
       Set Zone 13 , 117 , 4 To 121 , 70 
       Screen 2 
       Bob 15 , 122 , 6 , 2 
       Bob 13 , 89 , 0 , 10 
    EndIf 
    If flag$ ( 24 ) = 1 
       Screen 0 
       Set Zone 13 , 117 , 4 To 121 , 70 
       Screen 2 
       Bob 15 , 122 , 6 , 3 
       Bob 13 , 89 , 0 , 10 
    EndIf 
    If flag$ ( 24 ) = 2 
       Screen 0 
       Set Zone 13 , 117 , 4 To 121 , 70 
       Screen 2 
       Bob 15 , 122 , 6 , 4 
       Bob 13 , 89 , 0 , 10 
    EndIf 
 EndIf 
 Return 
 
 Label initraum7: 
 If flag$ ( 5 ) = 1 
    Screen 2 
    Bob 1 , 249 , 38 , 2 
 EndIf 
 If person$ ( 8 ) = 7 And zeit > 33 And zeit < 37 
    Screen 2 
    Bob 5 , 203 , 0 , 3 
 EndIf 
 If person$ ( 8 ) = 7 And zeit > 39 And zeit < 43 
    Screen 2 
    Bob 5 , 205 , 96 , 4 
 EndIf 
 Return 
 
 Label initraum8: 
 If raum2 = 9 
    flag$ ( 33 ) = 1 
 EndIf 
 If flag$ ( 31 ) = 1 
    Screen 2 
    Bob 9 , 21 , 86 , 2 
 EndIf 
 If flag$ ( 32 ) = 1 
    Screen 2 
    Bob 10 , 21 , 97 , 3 
 EndIf 
 If flag$ ( 33 ) = 1 
    Screen 2 
    Bob 13 , 121 , 23 , 4 
 EndIf 
 Return 
 
 Label initraum9: 
 If flag$ ( 34 ) = 0 
    Screen 0 
    Set Zone 1 , 52 , 56 To 97 , 117 
 Else 
    Screen 0 
    Set Zone 2 , 52 , 56 To 97 , 117 
    Screen 2 
    If handlung$ ( 6 ) = 4 
       Bob 2 , 52 , 55 , 3 
       person$ ( 13 ) = 9 
    Else 
       Bob 2 , 52 , 55 , 2 
    EndIf 
 EndIf 
 Return 
 
 Label initraum10: 
 Return 
 
 Label initraum11: 
 If person$ ( 8 ) = 11 
    Screen 2 
    Bob 3 , 138 , 83 , 2 
 EndIf 
 If flag$ ( 62 ) = 1 
    Screen 2 
    Bob 4 , 190 , 21 , 3 
 EndIf 
 Return 
 
 Label initraum12: 
 If flag$ ( 64 ) = 1 
    Screen 2 
    Bob 5 , 10 , 52 , 5 
 EndIf 
 If transport$ ( 121 ) = 1 
    Screen 2 
    Bob 1 , 24 , 3 , 2 
 EndIf 
 If transport$ ( 122 ) = 1 
    Screen 2 
    Bob 2 , 72 , 2 , 3 
 EndIf 
 If transport$ ( 123 ) = 1 
    Screen 2 
    Bob 3 , 152 , 6 , 4 
 EndIf 
 Return 
 
 Label initraum13: 
 If raum2 = 12 
    flag$ ( 35 ) = 1 
 EndIf 
 If flag$ ( 35 ) = 1 
    Screen 2 
    Bob 2 , 184 , 22 , 2 
 EndIf 
 Return 
 
 Label initraum14: 
 flag$ ( 36 ) = 1 
 Screen 2 
 Bob 2 , 55 , 35 , 2 
 If handlung$ ( 3 ) = 5 
    Screen 0 
    Set Zone 4 , 201 , 111 To 236 , 124 
    Screen 2 
    Bob 4 , 200 , 111 , 3 
 EndIf 
 If handlung$ ( 3 ) = 6 
    Screen 0 
    Set Zone 4 , 201 , 111 To 236 , 124 
    Screen 2 
    Bob 4 , 201 , 112 , 4 
 EndIf 
 Return 
 
 Label initraum15: 
 If raum2 = 16 
    flag$ ( 38 ) = 1 
 EndIf 
 If raum2 = 17 Or raum2 = 21 
    flag$ ( 37 ) = 1 
 EndIf 
 If raum2 = 18 Or raum2 = 20 
    flag$ ( 38 ) = 1 
 EndIf 
 If transport$ ( 145 ) = 1 
    Screen 0 
    Set Zone 3 , 15 , 109 To 35 , 125 
    Screen 2 
    Bob 3 , 17 , 105 , 9 
 EndIf 
 If flag$ ( 37 ) = 1 
    Screen 2 
    Bob 5 , 100 , 36 , 7 
 EndIf 
 If flag$ ( 38 ) = 1 
    Screen 2 
    Bob 4 , 280 , 30 , 8 
 EndIf 
 Return 
 
 Label initraum16: 
 If transport$ ( 162 ) = 1 
    Screen 2 
    Bob 13 , 272 , 93 , 2 
 EndIf 
 Return 
 
 Label initraum17: 
 If flag$ ( 40 ) = 0 
    Screen 0 
    Set Zone 3 , 160 , 44 To 187 , 71 
 EndIf 
 If flag$ ( 40 ) = 1 
    Screen 0 
    Set Zone 4 , 160 , 44 To 187 , 71 
    Screen 2 
    Bob 4 , 160 , 40 , 4 
 EndIf 
 If flag$ ( 40 ) = 2 
    Screen 0 
    Set Zone 4 , 160 , 44 To 187 , 71 
    Screen 2 
    Bob 4 , 150 , 40 , 6 
 EndIf 
 If flag$ ( 41 ) = 0 
    Screen 0 
    Set Zone 1 , 52 , 78 To 188 , 117 
    Screen 2 
    Bob 1 , 53 , 72 , 5 
 Else 
    Screen 0 
    Set Zone 1 , 114 , 74 To 188 , 116 
    Screen 2 
    Bob 1 , 112 , 72 , 5 
 EndIf 
 If transport$ ( 172 ) = 1 
    Screen 0 
    Set Zone 6 , 249 , 82 To 264 , 105 
    Screen 2 
    Bob 6 , 248 , 82 , 3 
 EndIf 
 Return 
 
 Label initraum18: 
 etage = 1 
 flag$ ( 43 ) = 0 
 flag$ ( 44 ) = 0 
 flag$ ( 45 ) = 0 
 flag$ ( Rnd ( 2 ) + 43 ) = 1 
 If flag$ ( 43 ) = 1 
    Screen 2 
    Bob 2 , 125 , 11 , 2 
 EndIf 
 If flag$ ( 44 ) = 1 
    Screen 2 
    Bob 3 , 175 , 11 , 2 
 EndIf 
 If flag$ ( 45 ) = 1 
    Screen 2 
    Bob 4 , 225 , 11 , 2 
 EndIf 
 Return 
 
 Label initraum19: 
 If flag$ ( 46 ) = 1 
    Screen 2 
    Bob 1 , 15 , 67 , 2 
 EndIf 
 Return 
 
 Label initraum20: 
 person$ ( 2 ) = 0 
 person$ ( 14 ) = 0 
 person$ ( 15 ) = 0 
 person$ ( 16 ) = 0 
 If etage = 3 
    Screen 0 
    Set Zone 1 , 114 , 42 To 133 , 55 
    Screen 2 
    Bob 1 , 113 , 42 , 9 
    person$ ( 15 ) = 20 
 EndIf 
 If etage = 4 
    Screen 0 
    Set Zone 3 , 108 , 50 To 117 , 64 
    Screen 2 
    Bob 3 , 110 , 49 , 11 
 EndIf 
 If etage = 7 
    Screen 0 
    Set Zone 2 , 104 , 38 To 120 , 69 
    Screen 2 
    Bob 2 , 100 , 38 , 10 
    person$ ( 14 ) = 20 
 EndIf 
 If Not etage = 5 
    Screen 2 
    Bob 8 , 168 , 67 , 14 
 EndIf 
 If etage = 5 
    If flag$ ( 48 ) = 1 
       If handlung$ ( 4 ) = 2 
          person$ ( 2 ) = 20 
          Screen 2 
          Bob 9 , 157 , 22 , 13 
       Else 
          person$ ( 16 ) = 20 
          Screen 2 
          Bob 9 , 157 , 22 , 12 
       EndIf 
    EndIf 
    If flag$ ( 48 ) = 0 
       Screen 2 
       Bob 8 , 168 , 67 , 14 
    EndIf 
 EndIf 
 Screen 2 
 Bob 4 , 118 , 41 , etage + 1 
 Return 
 
 Label initraum21: 
 If handlung$ ( 6 ) = 2 
    Screen 2 
    Bob 1 , 157 , 69 , 2 
 EndIf 
 Return 
 
 Label initraum22: 
 If transport$ ( 210 ) = 1 
    Screen 2 
    Bob 7 , 163 , 98 , 2 
    Screen 0 
    Set Zone 7 , 162 , 98 To 174 , 110 
 EndIf 
 If transport$ ( 211 ) = 1 
    Screen 2 
    Bob 8 , 215 , 46 , 2 
    Screen 0 
    Set Zone 8 , 215 , 46 To 226 , 58 
 EndIf 
 If transport$ ( 212 ) = 1 
    Screen 2 
    Bob 9 , 241 , 46 , 2 
    Screen 0 
    Set Zone 9 , 241 , 46 To 252 , 58 
 EndIf 
 Return 
 
 Label initraum23: 
 Screen 0 
 Palette , , , , , , , , , , , , , , , , , , , 0xf00 , 0xf77 , 0xc , 0xfbb , 0xccc , 0xff0 , 0x23 , 0x17 , 0xb0 , 0x0 , 0xaaf , 0x44f 
 Return 
 
 Label initraum24: 
 If raum2 = 26 
    flag$ ( 67 ) = 1 
 EndIf 
 flag$ ( 66 ) = 0 
 wx = 220 
 wy = 19 
 If flag$ ( 67 ) = 1 
    Screen 2 
    Bob 2 , 171 , 19 , 2 
 EndIf 
 Screen 2 
 Bob 3 , 220 , 19 , 3 
 Gosub r24_zones 
 Return 
 
 Label r24_zones: 
 Screen 0 
 Set Zone 7 , wx + 0 , wy + 0 To wx + 7 , wy + 6 
 Set Zone 8 , wx + 8 , wy + 0 To wx + 104 , wy + 6 
 Set Zone 9 , wx + 7 , wy + 43 To wx + 25 , wy + 56 
 Set Zone 10 , wx + 30 , wy + 42 To wx + 49 , wy + 57 
 Set Zone 11 , wx + 58 , wy + 40 To wx + 82 , wy + 56 
 Set Zone 12 , wx + 85 , wy + 35 To wx + 100 , wy + 55 
 Set Zone 14 , wx + 0 , wy + 0 To wx + 105 , wy + 61 
 Return 
 
 Label initraum25: 
 If Not transport$ ( 239 ) = 2 
    Screen 2 
    Bob 2 , 70 , 46 , 1 
    Screen 0 
    Set Zone 2 , 70 , 46 To 77 , 53 
 EndIf 
 Return 
 
 Label initraum26: 
 Return 
 
 Label initialisieren: 
 Randomize Timer 
 Request Wb

 Fade 3 
 Wait 60 
 If Exist ( "Ram:Level" ) 
    Open In 1 , "Ram:Level" 
    Input # 1 , half 
    Input # 1 , pfad 
    Close 1 
    Kill "Ram:Level" 
 EndIf 
 If pfad = 1 
    pfad$ = "Ram:" 
 Else 
    pfad$ = "JoyII:" 
 EndIf 
 Screen Open 1 , 320 , 90 , 64 , Lowres 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 3 , 320 , 34 , 32 , Lowres 
 Screen Display 3 , 128 , 47 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Reserve Zone 10 
 For i = 0 To 9 
    Set Zone i + 1 , 31 * i , 0 To 31 * i + 30 , 38 
 Next 
 Screen Open 4 , 320 , 128 , 64 , Lowres 
 Screen Display 4 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 If half = 1 
    Screen Display 3 , 128 , 47 , 160 , 
 EndIf 
 
 Label init_spiel: 
 For i = 1 To 24 
    inventar$ ( i ) = 0 
 Next 
 inventar$ ( 1 ) = 15 
 geg$ ( 0 ) = Space$ ( 48 ) 
 iconbank = 0 
 zeit = 0 
 verb = 1 
 gehe = 0 
 oeffne = 0 
 druecke = 0 
 schliesse = 0 
 ziehe = 0 
 punkte = 0 
 raum = 1 
 lab = Rnd ( 3 ) + 1 
 etage = 2 
 versuch = 0 
 z = 6 
 s = 0 
 bm = 1 
 cc16 = 0x8f 
 cc17 = 0xc 
 Restore verben 
 For i = 1 To 16 
    Read verb$ ( i ) 
 Next 
 Restore objekte 
 For i = 1 To 255 
    Read geg$ ( i ) , transport$ ( i ) 
 Next 
 Restore räume 
 For i = 1 To 26 
    Read raum$ ( i ) , zurück$ ( i ) 
    betreten$ ( i ) = 0 
 Next 
 betreten$ ( 1 ) = 1 
 Restore personen 
 For i = 1 To 20 
    Read person$ ( i ) , person$ ( i ) 
    reden$ ( i ) = 0 
 Next 
 Restore raumaddierer 
 For i = 1 To 26 
    Read raumaddierer$ ( i ) 
 Next 
 Restore fahrstuhl_daten 
 For i = 1 To 9 
    Read fahrx$ ( i ) , fahry$ ( i ) 
 Next 
 For i = 1 To 6 
    handlung$ ( i ) = 0 
 Next 
 For i = 1 To 69 
    flag$ ( i ) = 0 
 Next 
 flag$ ( 1 ) = 2 
 flag$ ( 5 ) = 1 
 flag$ ( 47 ) = 1 
 flag$ ( 48 ) = 2 
 flag$ ( 50 ) = 1 
 flag$ ( 58 ) = 1 
 betreten$ ( 1 ) = 1 
 Screen Open 0 , 320 , 128 , 64 , Lowres 
 Screen Display 0 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Colour 1 , 0xfff 
 Call 'font$' [ "JOY" , 6 ] 
 If half = 1 
    Screen Display 0 , 128 , 80 , 160 , 
 EndIf 
 Screen 4 
 Call 'maus_an$' 
 If geladen = 0 
    If Not Exist ( pfad$ ) 
       Screen 0 
       Gr Writing 0 
       Ink 1 , 0 
       Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
       While Not Exist ( pfad$ ) 
       Wend 
       Cls 0 
    EndIf 
    Load pfad$ + "Grafiken/Icons3.Abk" 
    Make Icon Mask 
    Call 'iconbank$' [ 2 ] 
    Load pfad$ + "Grafiken/Gesichter.Abk" 
    No Icon Mask 
    Call 'iconbank$' [ 1 ] 
    Load pfad$ + "Grafiken/Icons.Abk" 
    No Icon Mask 
    Load pfad$ + "Grafiken/Mauspfeil.Abk" 
    Change Mouse 4 
    Bank Swap 1 , 11 
    Load pfad$ + "Grafiken/Raum1.Bobs.Abk" 
    Gosub init_befehle 
    Gosub ladetexte 
    geladen = 1 
 EndIf 
 Screen 3 
 Call 'iconbank$' [ 2 ] 
 Get Icon Palette 
 Priority Reverse On 
 Load pfad$ + "Grafiken/Raum1.Pic" , 8 
 Unpack 8 To 2

 Erase 8 
 Screen 2 
 For i = 0 To 31 
    Colour i , 0x0 
 Next 
 Load pfad$ + "Daten/Raum1.Zones" , 8 
 Bob 2 , 54 , 41 , 3 
 Bob 5 , 305 , 34 , 5 
 Bob 8 , 57 , 123 , 2 
 Set Input 42 , - 1 
 Open In 1 , pfad$ + "Texte/Raum1.Umgebung.Txt" 
 Line Input # 1 , umgebung$ 
 umgebung$ = umgebung$ + "*" + Chr$ ( 10 ) 
 Close 1 
 Open In 1 , pfad$ + "Texte/Raum1.Objekte.Txt" 
 For i = 1 To 18 
    Line Input # 1 , objekt$ ( i ) 
    objekt$ ( i ) = objekt$ ( i ) + "*" + Chr$ ( 10 ) 
 Next 
 Close 1 
 invent$ ( 1 ) = objekt$ ( 15 ) 
 Screen 0 
 Get Palette 2 
 Call 'screco$' 
 Screen To Front 0 
 Screen 2 
 Get Sprite Palette 
 Screen 4 
 Cls 32 
 Screen 0 
 Reserve Zone 20 
 Call 'init_zones$' 
 Set Zone 2 , 50 , 39 To 61 , 51 
 Set Zone 5 , 303 , 32 To 313 , 47 
 Set Zone 8 , 57 , 123 To 85 , 126 
 Set Zone 16 , 281 , 0 To 319 , 54 
 Call 'cursor$' 
 X Mouse = 128 
 Y Mouse = 45 
 Show On 
 Fade 10 To 2 
 Wait 200 
 Call 'txt$' [ ereignis$ ( 1 ) ] 
 Call 'clickmouse$' 
 Call 'txt$' [ ereignis$ ( 64 ) ] 
 Call 'clickmouse$' 
 Call 'screco$' 
 code = Rnd ( 2 ) + 1 
 Mid$ ( ereignis$ ( 65 ) , 48 , 1 ) = ( Str$ ( code ) - " " ) 
 a$ = "" 
 Clear Key 
 Call 'txt$' [ ereignis$ ( 65 ) ] 
 While a$ = "" 
    a$ = Inkey$ 
 Wend 
 If Upper$ ( a$ ) = Mid$ ( "JOY" , code , 1 ) 
    Call 'txt$' [ ereignis$ ( 66 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'verb_rein$' 
    Return 
 Else 
    go = 3 
    Goto game_over 
 EndIf 
 
 Label init_neu: 
 iconbank = 0 
 Screen Open 1 , 320 , 90 , 64 , Lowres 
 Screen Display 1 , 128 , 309 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 2 , 320 , 128 , 64 , Lowres 
 Screen Display 2 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 3 , 320 , 34 , 32 , Lowres 
 Screen Display 3 , 128 , 47 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Reserve Zone 10 
 For i = 0 To 9 
    Set Zone i + 1 , 31 * i , 0 To 31 * i + 30 , 38 
 Next 
 Screen Open 4 , 320 , 128 , 64 , Lowres 
 Screen Display 4 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 0 , 320 , 128 , 64 , Lowres 
 Screen Display 0 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Colour 1 , 0xfff 
 Colour 30 , 0xfff 
 Call 'maus_aus$' 
 Call 'font$' [ "JOY" , 6 ] 
 If Not Exist ( pfad$ ) 
    Screen 0 
    Gr Writing 0 
    Ink 1 , 0 
    Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
    While Not Exist ( pfad$ ) 
    Wend 
    Cls 0 
 EndIf 
 Load pfad$ + "Grafiken/Icons3.Abk" 
 Make Icon Mask 
 Call 'iconbank$' [ 2 ] 
 Load pfad$ + "Grafiken/Gesichter.Abk" 
 No Icon Mask 
 Call 'iconbank$' [ 1 ] 
 Load pfad$ + "Grafiken/Icons.Abk" , 2 
 No Icon Mask 
 Load pfad$ + "Grafiken/Mauspfeil.Abk" 
 Change Mouse 4 
 Bank Swap 1 , 11 
 Show On 
 If go = 6 
    spr = 1 
 EndIf 
 Gosub init_befehle 
 Screen 3 
 Call 'iconbank$' [ 2 ] 
 Get Icon Palette 
 Priority Reverse On 
 Screen 4 
 Cls 32 
 Screen 0 
 Reserve Zone 20 
 Return 
 
 Label game_over: 
 If go < 5 Or go > 6 
    Call 'befehle_runter$' 
 EndIf 
 If go = 6 
    Screen 0 
    Fade 1 
    Wait 20 
    Rainbow Del 
    Screen Close 0 
    Screen Close 2 
    Erase 2 
    Gosub init_neu 
 EndIf 
 If go = 1 Or go = 2 Or go = 3 Or go = 5 
    name$ = "GOG" 
 EndIf 
 If go = 1 
    txt = 31 
 EndIf 
 If go = 2 
    txt = 36 
 EndIf 
 If go = 3 
    txt = 67 
 EndIf 
 If go = 4 
    txt = 57 
    name$ = "END" 
 EndIf 
 If go = 5 
    txt = 83 
 EndIf 
 If go = 6 
    txt = 89 
    name$ = "GOK" 
 EndIf 
 If go = 7 
    txt = 99 
    name$ = "GOK" 
 EndIf 
 Call 'maus_aus$' 
 Screen 3 
 Cls 0 
 Screen 2 
 Bob Off 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Screen 0 
 Flash Off 
 Bank Swap 1 , 11 
 Change Mouse 4 
 Bank Swap 1 , 11 
 Call 'test_joy2$' 
 Load pfad$ + "Grafiken/" + name$ + ".Bobs.Abk" 
 Load pfad$ + "Grafiken/" + name$ + ".Pic" , 8 
 Unpack 8 To 2

 Erase 8 
 Screen 0 
 Get Palette 2 
 Call 'cursor$' 
 Reset Zone 
 Call 'roller_blind$' 
 Call 'maus_an$' 
 If go = 4 
    Call 'txt$' [ ereignis$ ( txt ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
 EndIf 
 For i = 0 To 9 
    c$ ( i ) = Colour ( i ) 
 Next 
 c1 = 0xfff 
 c2 = 0 
 Do 
    Fade 3 , , , , , , , , , , , c1 , c1 , c1 , c1 , c1 , c1 , c1 , , c1 , c1 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , , c1 
    For i = 1 To 14000 
       If Mouse Click = 1 
          Exit 2 
       EndIf 
    Next 
    Fade 3 , , , , , , , , , , , c$ ( 0 ) , c$ ( 1 ) , c$ ( 2 ) , c$ ( 3 ) , c$ ( 4 ) , c$ ( 5 ) , c$ ( 6 ) , , c$ ( 8 ) , c$ ( 9 ) , c$ ( 0 ) , c$ ( 1 ) , c$ ( 2 ) , c$ ( 3 ) , c$ ( 4 ) , c$ ( 5 ) , c$ ( 6 ) , c$ ( 7 ) , c$ ( 8 ) , c$ ( 9 ) , , c$ ( 7 ) 
    For i = 1 To 14000 
       If Mouse Click = 1 
          Exit 2 
       EndIf 
    Next 
 Loop 
 Fade 3 , , , , , , , , , , , c1 , c1 , c1 , c1 , c1 , c1 , c1 , , c1 , c1 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , c2 , , c1 
 Wait 60 
 If Not go = 4 
    Call 'txt$' [ ereignis$ ( txt ) ] 
    Call 'clickmouse$' 
 EndIf 
 
 Label highscores: 
 go2 = go : go = 0 
 If punkte = 0 
    Goto go2 
 EndIf 
 Mid$ ( ereignis$ ( 69 ) , 36 , 5 ) = "     " 
 Mid$ ( ereignis$ ( 69 ) , 36 , 5 ) = Str$ ( punkte ) 
 Call 'txt$' [ ereignis$ ( 69 ) ] 
 Call 'clickmouse$' 
 Call 'screco$' 
 Call 'test_joy$' 
 Open In 1 , "JOY:Joy.Scores" 
 Set Input 10 , - 1 
 For i = 1 To 10 
    Line Input # 1 , n1$ 
    Line Input # 1 , n2$ 
    name$ ( i ) = n1$ + Chr$ ( 10 ) + n2$ 
    Input # 1 , score$ 
    score$ ( i ) = Val ( score$ ) 
 Next 
 Close 1 
 If punkte < score$ ( 10 ) 
    Call 'txt$' [ ereignis$ ( 70 ) ] 
    Goto go2 
 EndIf 
 Ink 0 
 Bar 73 , 13 To 251 , 32 
 If ( name$ = "GOG" ) Or ( name$ = "GOK" ) 
    Ink 30 , 0 
 Else 
    Ink 1 , 0 
 EndIf 
 Box 74 , 14 To 250 , 31 
 Text 76 , 20 , "BITTE GEBEN SIE IHREN NAMEN EIN:" 
 Call 'eingabe$' [ 100 , 28 , 20 , "" , 0 , 1 ] 
 name$ ( 11 ) = Param$ 
 score$ ( 11 ) = punkte 
 Ink 0 
 Bar 73 , 40 To 251 , 59 
 If ( name$ = "GOG" ) Or ( name$ = "GOK" ) 
    Ink 30 , 0 
 Else 
    Ink 1 , 0 
 EndIf 
 Box 74 , 41 To 250 , 58 
 Text 110 , 48 , "UND NUN IHREN WOHNORT:" 
 Call 'eingabe$' [ 110 , 55 , 17 , "" , 0 , 1 ] 
 name$ ( 11 ) = name$ ( 11 ) + Chr$ ( 10 ) + "AUS " + Param$ 
 Gosub score_sortieren 
 Call 'test_joy$' 
 For i = 0 To 3 
    If Exist ( "Df" + ( Str$ ( i ) - " " ) + ":" ) 
       n$ = Disc Info$ ( "Df" + ( Str$ ( i ) - " " ) + ":" ) 
       n$ = Left$ ( n$ , Instr$ ( n$ , ":" ) ) 
       If Upper$ ( n$ ) = "JOY:" 
          Exit 
       EndIf 
    EndIf 
 Next 
 Reserve As Work 12 , 36 
 n$ = "Df" + ( Str$ ( i ) - " " ) + ":" 
 Dreg ( 1 ) = Varptr ( n$ ) 
 Dreg ( 2 ) = - 2 
 lock = Doscall ( - 84 ) 
 Dreg ( 1 ) = lock 
 Dreg ( 2 ) = Start ( 12 ) 
 r = Doscall ( - 114 ) 
 wrpro = Leek ( Start ( 12 ) + 8 ) 
 Dreg ( 1 ) = lock 
 r = Doscall ( - 90 ) 
 Erase 12 
 If wrpro = 80 Or wrpro = 81 
    Goto highscores2 
 EndIf 
 Open Out 1 , "JOY:Joy.Scores" 
 For i = 1 To 10 
    Print # 1 , name$ ( i ) 
    Print # 1 , score$ ( i ) 
 Next 
 Close 1 

 Label highscores2: 
 If go2 = 4 
    Screen 2 
    Cls 0 
    Call 'roller_blind$' 
    Erase All 
    If Not Exist ( pfad$ ) 
       Screen 0 
       Gr Writing 0 
       Ink 1 , 0 
       Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
       While Not Exist ( pfad$ ) 
       Wend 
       Cls 0 
    EndIf 
    Screen Close 4 
    Screen Close 3 
    Screen Close 2 
    Screen Close 1 
    Load "JoyII:Grafiken/Endscroller.Abk" , 2 
    Screen Close 0 
    Hide On 
    Screen Open 0 , 320 , 247 , 2 , Lowres 
    Screen Display 0 , 128 , 73 , 320 , 196 
    Flash Off 
    Curs Off 
    Cls 0 
    Palette 0x11 , 0xeee 
    Double Buffer 
    Autoback 0 
    Get Rom Fonts 
    Call 'font$' [ "Joy" , 6 ] 
    Restore scrtext 
    Read kennummer 
    While kennummer > 0 
       On kennummer Gosub zentriert_doppelt , unterstrichen , zentriert , rollen , panawischen , welby , rest_icons 
       Read kennummer 
    Wend 
    Call 'scr$' [ 98 ] 
    Call 'font$' [ "Topaz" , 9 ] 
    Text 142 , 200 , "JOY" 
    Call 'scr$' [ 98 ] 
    Do 
    Loop 
    
    Label zentriert_doppelt: 
    txt$ = "" 
    txt2$ = "" 
    While txt$ <> "§" 
       Ink 0 
       Bar 0 , 200 To 320 , 265 
       Ink 1 , 0 
       t = Text Length ( txt$ ) 
       Text 155 - t , 200 , txt$ 
       Text 165 , 200 , txt2$ 
       Call 'scr$' [ 9 ] 
       Read txt$ , txt2$ 
    Wend 
    Return 
    
    Label unterstrichen: 
    Ink 1 , 0 
    Read txt$ 
    t = Text Length ( txt$ ) 
    Text 160 - t / 2 , 200 , txt$ 
    Call 'scr$' [ 7 ] 
    Draw 160 - t / 2 , 197 To 160 + t / 2 , 197 
    Call 'scr$' [ 9 ] 
    Return 
    
    Label zentriert: 
    Read anz 
    If anz = 0 
       Return 
    EndIf 
    For i = 1 To anz 
       Ink 0 
       Bar 0 , 200 To 320 , 265 
       Ink 1 , 0 
       Read txt$ 
       t = Text Length ( txt$ ) 
       Text 160 - t / 2 , 200 , txt$ 
       Call 'scr$' [ 9 ] 
    Next 
    Goto zentriert 
    
    Label rollen: 
    Read s 
    Call 'scr$' [ s ] 
    Return 
    
    Label panawischen: 
    Paste Icon 138 , 196 , 1 
    Return 
    
    Label welby: 
    Paste Icon 125 , 196 , 2 
    Return 
    
    Label rest_icons: 
    Paste Icon 60 , 200 , 3 
    Paste Icon 200 , 196 , 4 
    Return 
 EndIf 
 
 Label go2: 
 Screen 1 
 Get Cblock 3 , 0 , 0 , 320 , 90 
 
 Label nochmal: 
 Call 'txt$' [ Chr$ ( 10 ) + "WOLLEN SIE NOCHMAL VON VORNE ANFANGEN ?" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
 Call 'ja_nein$' 
 If Param = 1 
    Call 'befehle_runter$' 
    Screen 3 
    Cls 0 
    Screen 2 
    Bob Off 
    Wait Vbl 
    Cls 0 
    Call 'roller_blind$' 
    Hide On 
    If Not Exist ( pfad$ ) 
       Screen 0 
       Gr Writing 0 
       Ink 1 , 0 
       Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
       While Not Exist ( pfad$ ) 
       Wend 
       Cls 0 
    EndIf 
    Load pfad$ + "Grafiken/Raum1.Bobs.Abk" 
    name$ = "" 
    For i = 1 To 24 
       inventar$ ( i ) = 0 
    Next 
    inventar$ ( 1 ) = 15 
    Gosub inventory 
    verb = 1 
    Gosub init_befehle 
    Call 'iconbank$' [ 0 ] 
    iconbank = 0 
    Gosub init_spiel 
    Pop 
    Goto parser 
 Else 
    System 
 EndIf 
 
 Label score_sortieren: 
 score$ ( 0 ) = 0 
 For i = 1 To 11 
    For j = i To 11 
       If score$ ( j ) > score$ ( 0 ) 
          score$ ( 0 ) = score$ ( j ) 
          k = j 
       EndIf 
    Next 
    Swap score$ ( i ) , score$ ( k ) 
    Swap name$ ( i ) , name$ ( k ) 
    score$ ( 0 ) = 0 
 Next 
 Return 
 
 Label emulator: 
 Call 'maus_aus$' 
 Call 'befehle_runter$' 
 Screen Close 1 
 Screen 2 
 Bob Off 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Call 'test_joy2$' 
 Screen Close 2 
 Screen Close 3 
 Screen Close 4 
 Screen Close 0 
 Load pfad$ + "Grafiken/Guru.Pic" , 8 
 Hide On 
 For i = 0 To 24 
    scr$ ( i ) = Space$ ( 40 ) 
 Next 
 scr$ ( 1 ) = "   **** commodore 65 basic v2 ****      " 
 scr$ ( 3 ) = " 65k ram system 38911 basic bytes free  " 
 scr$ ( 5 ) = "ready.                                  " 
 z = 6 
 s = 0 
 bm = 1 
 cc16 = 0x8f 
 cc17 = 0xc 
 Screen Open 0 , 352 , 300 , 32 , Lowres 
 Flash Off 
 Curs Off 
 Cls 14 
 Screen Display 0 , 118 , 22 , , 
 Screen Offset 0 , 6 , 
 Palette 0x0 , 0xfff , 0xc00 , 0xff , 0xf0f , 0xc0 , 0xc , 0xff0 , 0xf80 , 0x800 , 0xf88 , 0x444 , 0x888 , 0xf8 , 0x8f , 0xccc , 0xc , 0x8f 
 Wait 3 
 Call 'font$' [ "64erI" , 8 ] 
 Cls 6 , 16 , 48 To 336 , 248 
 Wait 3 
 Ink 14 , 6 
 Call 'bildaufbau$' 
 Call 'cursorhin$' 
 
 Label emu: 
 a$ = "" 
 While a$ = "" 
    a$ = Inkey$ 
    If Key Shift = 65 
       If bm = 1 
          bm = 2 
          Call 'font$' [ "64erII" , 8 ] 
       Else 
          bm = 1 
          Call 'font$' [ "64erI" , 8 ] 
       EndIf 
       Ink 14 , 6 
       Call 'bildaufbau$' 
       Call 'cursorhin$' 
    EndIf 
 Wend 
 If Key Shift = 8 
    If Asc ( a$ ) > 48 And Asc ( a$ ) < 57 
       cc16 = Colour ( Asc ( a$ ) - 49 ) 
       Call 'cursorhin$' 
       Goto emu 
    EndIf 
 Else If Key Shift = 64 
    If Asc ( a$ ) > 48 And Asc ( a$ ) < 57 
       cc16 = Colour ( Asc ( a$ ) - 41 ) 
       Call 'cursorhin$' 
       Goto emu 
    EndIf 
 EndIf 
 If Scancode = 70 
    Goto emu 
 Else If a$ = Chr$ ( 8 ) 
    Call 'cursorweg$' 
    If s = 0 And Not z = 0 
       s = 39 
       Dec z 
    Else If Not z = 0 And s = 0 
       Dec s 
       scr$ ( z ) = Left$ ( scr$ ( z ) , s ) + Mid$ ( scr$ ( z ) , s + 2 ) + " " 
       Call 'lopri$' [ 0 , z , scr$ ( z ) ] 
    EndIf 
    Call 'cursorhin$' 
 Else If a$ = Chr$ ( 13 ) 
    Call 'cursorweg$' 
    s = 0 
    Inc z 
    If z = 25 
       Gosub scrrunter 
    EndIf 
    Call 'cursorhin$' 
    If ( Left$ ( scr$ ( z - 1 ) , 9 ) = "sys 64738" And ( Right$ ( scr$ ( z - 1 ) , 31 ) = Space$ ( 31 ) ) ) Or ( Left$ ( scr$ ( z - 1 ) , 8 ) = "sys64738" And ( Right$ ( scr$ ( z - 1 ) , 32 ) = Space$ ( 32 ) ) ) 
       Shift Off 
       Colour 17 , cc16 
       Colour 16 , cc17 
       Cls 14 , 16 , 48 To 20 , 248 
       Cls 14 , 332 , 48 To 336 , 248 
       Wait 30 
       Cls 6 , 16 , 48 To 336 , 248 
       Wait 3 
       For i = 0 To 24 
          scr$ ( i ) = Space$ ( 40 ) 
       Next 
       scr$ ( 1 ) = "   **** commodore 65 basic v2 ****      " 
       scr$ ( 3 ) = " 65k ram system 38911 basic bytes free  " 
       scr$ ( 5 ) = "ready.                                  " 
       z = 6 
       s = 0 
       bm = 1 
       cc16 = 0x8f 
       cc17 = 0xc 
       Ink 14 , 6 
       Call 'bildaufbau$' 
       Call 'cursorhin$' 
       If Not Btst ( 1 , flag$ ( 61 ) ) 
          Bset.<> 1 , flag$ ( 61 ) 
          Call 'punkte$' [ 10 ] 
       EndIf 
    Else If ( Left$ ( scr$ ( z - 1 ) , 3 ) = "run" And ( Right$ ( scr$ ( z - 1 ) , 37 ) = Space$ ( 37 ) ) ) Or ( Left$ ( scr$ ( z - 1 ) , 2 ) = "rU" And ( Right$ ( scr$ ( z - 1 ) , 38 ) = Space$ ( 38 ) ) ) 
       Call 'cursorweg$' 
       For i = 1 To 3 
          Inc z 
          If z = 25 
             Gosub scrrunter 
          EndIf 
       Next 
       Left$ ( scr$ ( z - 3 ) , 26 ) = "ja, wo laufen sie denn ???" 
       Left$ ( scr$ ( z - 1 ) , 6 ) = "ready." 
       Call 'lopri$' [ 0 , z - 3 , scr$ ( z - 3 ) ] 
       Call 'lopri$' [ 0 , z - 1 , scr$ ( z - 1 ) ] 
       Call 'cursorhin$' 
       If Not Btst ( 2 , flag$ ( 61 ) ) 
          Bset.<> 2 , flag$ ( 61 ) 
          Call 'punkte$' [ 10 ] 
       EndIf 
    Else If ( Left$ ( scr$ ( z - 1 ) , 4 ) = "load" And ( Right$ ( scr$ ( z - 1 ) , 36 ) = Space$ ( 36 ) ) ) Or ( Left$ ( scr$ ( z - 1 ) , 2 ) = "lO" And ( Right$ ( scr$ ( z - 1 ) , 38 ) = Space$ ( 38 ) ) ) 
       Call 'cursorweg$' 
       For i = 1 To 3 
          Inc z 
          If z = 25 
             Gosub scrrunter 
          EndIf 
       Next 
       Left$ ( scr$ ( z - 3 ) , 39 ) = "laden koennen sie in der befehlsleiste!" 
       Left$ ( scr$ ( z - 1 ) , 6 ) = "ready." 
       Call 'lopri$' [ 0 , z - 3 , scr$ ( z - 3 ) ] 
       Call 'lopri$' [ 0 , z - 1 , scr$ ( z - 1 ) ] 
       Call 'cursorhin$' 
       If Not Btst ( 3 , flag$ ( 61 ) ) 
          Bset.<> 3 , flag$ ( 61 ) 
          Call 'punkte$' [ 10 ] 
       EndIf 
    Else If ( Left$ ( scr$ ( z - 1 ) , 4 ) = "save" And ( Right$ ( scr$ ( z - 1 ) , 36 ) = Space$ ( 36 ) ) ) Or ( Left$ ( scr$ ( z - 1 ) , 2 ) = "sA" And ( Right$ ( scr$ ( z - 1 ) , 38 ) = Space$ ( 38 ) ) ) 
       Call 'cursorweg$' 
       For i = 1 To 3 
          Inc z 
          If z = 25 
             Gosub scrrunter 
          EndIf 
       Next 
       Left$ ( scr$ ( z - 3 ) , 22 ) = "god save the queen,8,1" 
       Left$ ( scr$ ( z - 1 ) , 6 ) = "ready." 
       Call 'lopri$' [ 0 , z - 3 , scr$ ( z - 3 ) ] 
       Call 'lopri$' [ 0 , z - 1 , scr$ ( z - 1 ) ] 
       Call 'cursorhin$' 
       If Not Btst ( 4 , flag$ ( 61 ) ) 
          Bset.<> 4 , flag$ ( 61 ) 
          Call 'punkte$' [ 10 ] 
       EndIf 
    Else If Left$ ( scr$ ( z - 1 ) , 5 ) = "print" 
       If Mid$ ( scr$ ( z - 1 ) , 6 , 1 ) = Chr$ ( 34 ) Or ( Mid$ ( scr$ ( z - 1 ) , 7 , 1 ) = Chr$ ( 34 ) ) 
          Call 'cursorweg$' 
          For i = 1 To 3 
             Inc z 
             If z = 25 
                Gosub scrrunter 
             EndIf 
          Next 
          xs = Instr$ ( scr$ ( z - 4 ) , Chr$ ( 34 ) ) + 1 
          xe = Instr$ ( scr$ ( z - 4 ) , Chr$ ( 34 ) , xs ) 
          If xe = 0 
             xe = 40 
          EndIf 
          Left$ ( scr$ ( z - 3 ) , xe - xs ) = Mid$ ( scr$ ( z - 4 ) , xs , xe - xs ) 
          Left$ ( scr$ ( z - 1 ) , 6 ) = "ready." 
          Call 'lopri$' [ 0 , z - 3 , scr$ ( z - 3 ) ] 
          Call 'lopri$' [ 0 , z - 1 , scr$ ( z - 1 ) ] 
          Call 'cursorhin$' 
       Else If Right$ ( scr$ ( z - 1 ) , 35 ) = Space$ ( 35 ) 
          Call 'cursorweg$' 
          For i = 1 To 3 
             Inc z 
             If z = 25 
                Gosub scrrunter 
             EndIf 
          Next 
          Left$ ( scr$ ( z - 1 ) , 6 ) = "ready." 
          Call 'lopri$' [ 0 , z - 1 , scr$ ( z - 1 ) ] 
          Call 'cursorhin$' 
       Else 
          Call 'cursorweg$' 
          For i = 1 To 3 
             Inc z 
             If z = 25 
                Gosub scrrunter 
             EndIf 
          Next 
          Left$ ( scr$ ( z - 3 ) , 2 ) = " 0" 
          Left$ ( scr$ ( z - 1 ) , 6 ) = "ready." 
          Call 'lopri$' [ 0 , z - 3 , scr$ ( z - 3 ) ] 
          Call 'lopri$' [ 0 , z - 1 , scr$ ( z - 1 ) ] 
          Call 'cursorhin$' 
       EndIf 
       If Not Btst ( 5 , flag$ ( 61 ) ) 
          Bset.<> 5 , flag$ ( 61 ) 
          Call 'punkte$' [ 10 ] 
       EndIf 
    Else If scr$ ( z - 1 ) = Space$ ( 40 ) 
       Call 'cursorhin$' 
    Else 
       Unpack 8 To 1

       Screen Display 1 , 128 , 43 , , 
       Flash 2 , "(F00,50)(000,50)" 
       Screen Display 0 , 127 , 60 , , 
       Screen 0 
       Shift Off 
       Colour 17 , cc16 
       Colour 16 , cc17 
       While Mouse Click <> 1 
       Wend 
       Screen Close 1 
       Screen Close 0 
       Erase 8 
       Show On 
       Call 'iconbank$' [ 0 ] 
       Screen Open 1 , 320 , 90 , 64 , Lowres 
       Screen Display 1 , 128 , 309 , , 
       Flash Off 
       Curs Off 
       Cls 0 
       Screen Open 2 , 320 , 128 , 64 , Lowres 
       Screen Display 2 , 128 , 80 , , 
       Flash Off 
       Curs Off 
       Cls 0 
       Screen Open 3 , 320 , 34 , 32 , Lowres 
       Screen Display 3 , 128 , 47 , , 
       Flash Off 
       Curs Off 
       Cls 0 
       Reserve Zone 10 
       For i = 0 To 9 
          Set Zone i + 1 , 31 * i , 0 To 31 * i + 30 , 38 
       Next 
       Screen Open 4 , 320 , 128 , 64 , Lowres 
       Screen Display 4 , 128 , 80 , , 
       Flash Off 
       Curs Off 
       Cls 0 
       Screen Open 0 , 320 , 128 , 64 , Lowres 
       Screen Display 0 , 128 , 80 , , 
       Flash Off 
       Curs Off 
       Cls 0 
       Colour 1 , 0xfff 
       Colour 30 , 0xfff 
       Call 'maus_aus$' 
       Call 'cursor$' 
       Call 'font$' [ "JOY" , 6 ] 
       If Not Exist ( pfad$ ) 
          Screen 0 
          Gr Writing 0 
          Ink 1 , 0 
          Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
          While Not Exist ( pfad$ ) 
          Wend 
          Cls 0 
       EndIf 
       Gosub init_befehle 
       Screen 3 
       Call 'iconbank$' [ 2 ] 
       Get Icon Palette 
       Priority Reverse On 
       Screen 4 
       Cls 32 
       Screen 0 
       Reserve Zone 20 
       r = 2 
       Gosub initraum 
       Goto parser 
    EndIf 
 Else If a$ = Chr$ ( 28 ) 
    Call 'cursorweg$' 
    Inc s 
    If s = 40 
       s = 0 
       Inc z 
       If z = 25 
          Gosub scrrunter 
       EndIf 
    EndIf 
    Call 'cursorhin$' 
 Else If a$ = Chr$ ( 29 ) 
    Call 'cursorweg$' 
    If Not ( s = 0 And z = 0 ) 
       Dec s 
       If s = - 1 
          s = 39 
          Dec z 
       EndIf 
    EndIf 
    Call 'cursorhin$' 
 Else If a$ = Chr$ ( 30 ) 
    Call 'cursorweg$' 
    If Not z = 0 
       Dec z 
    EndIf 
    Call 'cursorhin$' 
 Else If a$ = Chr$ ( 31 ) 
    Call 'cursorweg$' 
    Inc z 
    If z = 25 
       Gosub scrrunter 
    EndIf 
    Call 'cursorhin$' 
 Else 
    Mid$ ( scr$ ( z ) , s + 1 , 1 ) = a$ 
    Call 'cursorweg$' 
    Inc s 
    If s = 40 
       s = 0 
       Inc z 
       If z = 25 
          Gosub scrrunter 
       EndIf 
    EndIf 
    Call 'cursorhin$' 
 EndIf 
 Goto emu 
 
 Label scrrunter: 
 z = 24 
 Screen Copy 0 , 16 , 56 , 335 , 247 To 0 , 16 , 48 
 For j = 0 To 23 
    scr$ ( j ) = scr$ ( j + 1 ) 
 Next 
 scr$ ( 24 ) = Space$ ( 40 ) 
 Call 'lopri$' [ 0 , 24 , scr$ ( 24 ) ] 
 Return 
 
 Label fahrszene: 
 Comp Test Off

 Hide On 
 Call 'test_joy2$' 
 Load pfad$ + "Fahrszene/LoadingSong" 
 Load pfad$ + "Fahrszene/LoadingPic" , 8 
 Unpack 8 To 1

 Erase 8 
 Wait Vbl 
 Tempo 17

 Music 1

 Load pfad$ + "Fahrszene/Objects" 
 Make Icon Mask 
 Screen Open 2 , 128 , 63 , 64 , Lowres 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Hide 2 
 Ink 12 
 Bar 0 , 0 To 320 , 15 
 Ink 10 
 Bar 0 , 16 To 320 , 31 
 Ink 16 
 Bar 0 , 32 To 320 , 47 
 Load pfad$ + "Fahrszene/LameBoy" , 8 
 Unpack 8 To 0

 Screen To Front 1 
 Get Icon Palette 
 Erase 8 
 Set Rainbow 0 , 13 , 62 , "" , "" , "" 
 farbe = - 2 
 For i = 0 To 57 Step 4 
    For j = 0 To 4 
       Rain ( 0 , i + j ) = farbe 
    Next 
    Add farbe , 16 
 Next 
 farbe = 14 
 For i = 2 To 57 Step 4 
    Rain ( 0 , i ) = farbe 
    Add farbe , 16 
 Next 
 Restore graus 
 For i = 1 To 160 
    Read graus$ ( i ) 
 Next 
 Restore rechts_links 
 For i = 1 To 54 
    Read w 
    w# = 0 
    w2# = w / Float 133 
    For j = 1 To 133 
       rl$ ( i , j ) = w# 
       w# = w# + w2# 
    Next 
 Next 
 Restore kurve 
 For i = 1 To 33 
    Read w 
    w# = 0 
    w2# = w / Float 69 
    For j = 1 To 69 
       kurve$ ( i , j ) = w# 
       w# = w# + w2# 
    Next 
 Next 
 Restore y 
 For i = 1 To 10 
    Read y$ ( i ) , scr$ ( i ) 
    scr2$ ( i ) = scr$ ( i ) 
    str$ ( i ) = scr$ ( i ) 
 Next 
 Restore lrand 
 For i = 1 To 54 
    Read lrand$ ( i ) 
 Next 
 Restore breite 
 For i = 1 To 54 
    Read breite$ ( i ) 
 Next 
 Restore haus 
 For i = 1 To 10 
    Read hausx$ ( i ) , hausy$ ( i ) 
 Next 
 Restore sperre 
 For i = 1 To 10 
    Read sperrex$ ( i ) , sperrey$ ( i ) 
 Next 
 Restore mikrowelle 
 For i = 1 To 10 
    Read mikrox$ ( i ) , mikroy$ ( i ) 
 Next 
 Restore keks 
 For i = 1 To 10 
    Read keksx$ ( i ) , keksy$ ( i ) 
 Next 
 Restore baum 
 For i = 1 To 10 
    Read baumx$ ( i ) , baumy$ ( i ) 
 Next 
 Restore oma 
 For i = 1 To 10 
    Read omax$ ( i ) , omay$ ( i ) 
 Next 
 Restore objekt 
 For i = 1 To 54 
    Read objekt$ ( i ) 
 Next 
 speed = 0 
 rl = 100 
 oberster = 1 
 unterster = 10 
 kurve = 0 
 kw = 1 
 skyline = - 59 
 wagen = 112 
 wasser1 = 0 
 wasser2 = 0 
 objekt = 0 
 mitte = 1 
 oma = 0 
 strecke# = Float 0.0 
 hunderty = - 10 
 For i = 1 To 10 
    o = Rnd ( 9 ) 
    If o < 6 
       Bset.<> Rnd ( 1 ) , obj$ ( i ) 
       Bset.<> Rnd ( 1 ) , obj$ ( i ) 
    EndIf 
    o = Rnd ( 9 ) 
    If o < 6 
       Bset.<> Rnd ( 4 ) + 2 , obj$ ( i ) 
       mitte$ ( i ) = Rnd ( 2 ) + 1 
    EndIf 
    If Btst ( 6 , obj$ ( i ) ) 
       If oma = 0 
          oma = 1 
       Else 
          Bclr 6 , obj$ ( i ) 
          Bset.<> 5 , obj$ ( i ) 
       EndIf 
    EndIf 
 Next 
 obj$ ( 10 ) = 129 
 obj$ ( 9 ) = 0 
 obj$ ( 8 ) = 0 
 obj$ ( 7 ) = 0 
 Music Stop

 Erase 3 
 Screen Close 1 
 Screen 0 
 Rainbow 0 , 0 , 80 , 80 
 Clip 80 , 6 To 224 , 118 
 Double Buffer 
 Autoback 0 
 Screen Copy Physic To Logic 
 Gr Writing 0 
 
 Do 
    a$ = Inkey$ 
    If Jup ( 1 ) And speed < 10 
       Inc speed 
    EndIf 
    If Jdown ( 1 ) And speed > 0 
       Dec speed 
    EndIf 
    If Jleft ( 1 ) And rl < 133 And speed > 0 
       wagen = 113 
       Add rl , speed 
       If rl = - 3 
          rl = 2 
       EndIf 
       If rl > 133 
          rl = 133 
       EndIf 
    EndIf 
    If Jright ( 1 ) And rl > - 133 And speed > 0 
       wagen = 114 
       Add rl , - speed 
       If rl = 1 
          rl = - 3 
       EndIf 
       If rl < - 133 
          rl = - 133 
       EndIf 
    EndIf 
    i = oberster 
    Ink 13 
    Bar 93 , 6 To 210 , 21 
    Paste Icon 93 + skyline , 22 , 109 
    For lp = 1 To 10 
       If rl > 0 
          mrl = 1 
       Else 
          mrl = - 1 
       EndIf 
       s = 54 * str$ ( i ) 
       y1 = s + graus$ ( y$ ( i ) ) 
       y2 = graus$ ( y$ ( i ) ) 
       If Not i = 10 
          y = graus$ ( y$ ( i + 1 ) ) 
       Else 
          y = graus$ ( y$ ( 1 ) ) 
       EndIf 
       If y < y2 
          y = 54 
       EndIf 
       Screen Copy 2 , 0 , 16 * scr$ ( i ) , 118 , 16 * scr$ ( i ) + ( y - y2 ) To 0 , 93 , 64 + y2 
       For j = 0 To y - y2 - 1 
          If y2 + j + 1 < 34 
             pluskurve = kurve$ ( y2 + j + 1 , kw ) * Sgn ( kurve ) 
          Else 
             pluskurve = 0 
          EndIf 
          If Not str$ ( i ) = 2 
             Paste Icon 32 + mrl * rl$ ( y2 + j , Abs ( rl ) ) + pluskurve , 64 + y2 + j , y1 + j + 1 
          EndIf 
       Next 
       If scr$ ( i ) = 3 
          If y2 + 1 < 34 
             pluskurve = kurve$ ( y2 + 1 , kw ) * Sgn ( kurve ) 
          Else 
             pluskurve = 0 
          EndIf 
          l = 93 + lrand$ ( y2 ) - 64 + mrl * rl$ ( y2 , Abs ( rl ) ) + pluskurve 
          l2 = l + breite$ ( y2 ) 
          l3 = 63 + y2 - y2 * 2 
          Ink 0 
          If l > 93 
             Bar 93 , l3 To l , 64 + y2 
          EndIf 
          If l2 + 5 < 210 
             Bar l2 + 5 , l3 To 210 , 64 + y2 
          EndIf 
          Bar 93 , l3 To 210 , l3 + y2 + 1 - y2 / 3 
          If Not y < 54 
             Bar 93 , 6 To 210 , 24 
          EndIf 
          i2 = i + 1 
          If i2 = 11 
             i2 = 1 
          EndIf 
          If y < 54 And Not scr$ ( i2 ) = 3 
             If y + 1 < 34 
                pluskurve = kurve$ ( y + 1 , kw ) * Sgn ( kurve ) 
             Else 
                pluskurve = 0 
             EndIf 
             l = 93 + lrand$ ( y ) - 64 + mrl * rl$ ( y , Abs ( rl ) ) + pluskurve 
             l2 = l + breite$ ( y ) 
             l3 = 63 + y - y * 2 
             Ink 3 
             If l > 93 
                Bar 93 , l3 To l , 64 + y 
             EndIf 
             If l2 + 5 < 210 
                Bar l2 + 5 , l3 To 210 , 64 + y 
             EndIf 
             Bar 93 , l3 To 210 , l3 + y2 + 1 - y2 / 3 
          EndIf 
       Else If obj$ ( i ) > 0 
          Gosub werte 
          If Btst ( 0 , obj$ ( i ) ) 
             Paste Icon l2 - hausx$ ( l ) , l3 - hausy$ ( l ) , l4 
          EndIf 
          If Btst ( 1 , obj$ ( i ) ) 
             Paste Icon l2 + breite$ ( y2 ) + 5 , l3 - hausy$ ( l ) , l4 
          EndIf 
          If obj$ ( i ) > 2 
             Gosub mitteln 
             If Btst ( 2 , obj$ ( i ) ) 
                Paste Icon l2 + m - sperrex$ ( l ) , l3 - sperrey$ ( l ) , 137 - l 
             Else If Btst ( 3 , obj$ ( i ) ) 
                Paste Icon l2 + m - mikrox$ ( l ) , l3 - mikroy$ ( l ) , 147 - l 
             Else If Btst ( 4 , obj$ ( i ) ) 
                Paste Icon l2 + m - keksx$ ( l ) , l3 - keksy$ ( l ) , 157 - l 
             Else If Btst ( 5 , obj$ ( i ) ) 
                Paste Icon l2 + m - baumx$ ( l ) , l3 - baumy$ ( l ) , 167 - l 
             Else If Btst ( 6 , obj$ ( i ) ) 
                Paste Icon l2 + m - omax$ ( l ) , l3 - omay$ ( l ) , 177 - l 
             Else If Btst ( 7 , obj$ ( i ) ) 
                Paste Icon l2 , l3 - hausy$ ( l ) + hausy$ ( l ) / 3 , 115 
             EndIf 
          EndIf 
       EndIf 
       Add i , 1 , 1 To 10 
    Next 
    Paste Icon 77 , 0 , 110 
    Paste Icon 211 , 0 , 111 
    Paste Icon 133 , 82 , wagen 
    If hunderty > - 10 
       Add hunderty , - 3 
       Paste Icon 135 , hunderty , 116 
    EndIf 
    Gr Writing 0 
    Ink 1 , 0 
    Text 95 , 15 , "G:" 
    Text 95 , 23 , "S:" 
    Gr Writing 1 
    If speed > 0 
       Bar 110 , 9 To 110 + 10 * speed , 15 
    EndIf 
    If strecke# >= 1 
       Bar 110 , 17 To 110 + strecke# , 23 
    EndIf 
    Screen Swap 
    Wait Vbl 
    For i = 1 To 10 
       y$ ( i ) = y$ ( i ) + speed 
       If y$ ( i ) > 159 
          strecke# = strecke# + Float 0.20000000298023224 * speed 
          If strecke# > Float 100 
             Comp Test On

             Pop 
             Goto fs_gewonnen 
          EndIf 
          o = Rnd ( 9 ) 
          If o < 6 
             Bset.<> Rnd ( 1 ) , objekt 
             Bset.<> Rnd ( 1 ) , objekt 
          EndIf 
          o = Rnd ( 9 ) 
          If o < 6 
             Bset.<> Rnd ( 4 ) + 2 , objekt 
             mitte = Rnd ( 2 ) + 1 
          EndIf 
          If speed > 0 
             o = Rnd ( 9 ) 
             If o = 0 
                If kurve = 0 
                   kurve = 1 
                Else If kurve = - 1 
                   kurve = - 2 
                EndIf 
             EndIf 
             If o = 9 
                If kurve = 0 
                   kurve = - 1 
                Else If kurve = 1 
                   kurve = 2 
                EndIf 
             EndIf 
          EndIf 
          o = Rnd ( 20 ) 
          If o = 0 
             brücke = 1 
          EndIf 
          o = Rnd ( 20 ) 
          If o = 0 
             If tunnel = 0 
                tunnel = 1 
             EndIf 
          EndIf 
          o = Rnd ( 9 ) 
          If o < 2 
             If tunnel = 1 
                tunnel = 2 
             EndIf 
          EndIf 
          o = Rnd ( 9 ) 
          If o = 0 
             wasser1 = 1 
          EndIf 
          o = Rnd ( 9 ) 
          If o = 0 
             If wasser2 = 0 
                wasser2 = 1 
             EndIf 
          EndIf 
          o = Rnd ( 9 ) 
          If o < 2 
             If wasser2 = 1 
                wasser2 = 2 
             EndIf 
          EndIf 
          y$ ( i ) = y$ ( i ) - 160 
          Add oberster , - 1 , 1 To 10 
          Add unterster , - 1 , 1 To 10 
          obj$ ( i ) = 0 
          If scr$ ( i ) > 1 
             scr$ ( i ) = scr2$ ( i ) 
             str$ ( i ) = scr2$ ( i ) 
          EndIf 
          If objekt > 0 And brücke = 0 And tunnel = 0 
             obj$ ( i ) = objekt 
             objekt = 0 
             mitte$ ( i ) = mitte 
             If Btst ( 6 , obj$ ( i ) ) 
                If oma = 0 
                   oma = 1 
                Else 
                   Bclr 6 , obj$ ( i ) 
                   Bset.<> 5 , obj$ ( i ) 
                EndIf 
             EndIf 
          EndIf 
          If brücke = 1 
             brücke = 0 
             scr$ ( i ) = 3 
          Else If tunnel = 1 
             scr$ ( i ) = 3 
          Else If tunnel = 2 
             tunnel = 0 
             scr$ ( i ) = scr2$ ( i ) 
          Else If wasser1 = 1 
             wasser1 = 0 
             str$ ( i ) = 2 
             scr$ ( i ) = 2 
          Else If wasser2 = 1 
             scr$ ( i ) = 2 
          Else If wasser2 = 2 
             wasser2 = 0 
             scr$ ( i ) = scr2$ ( i ) 
          EndIf 
          If rl > 111 And ( Btst ( 0 , obj$ ( unterster ) ) Or scr$ ( unterster ) = 3 ) 
             Pop 
             go = 6 
             Goto game_over 
          EndIf 
          If rl < - 111 And ( Btst ( 1 , obj$ ( unterster ) ) Or scr$ ( unterster ) = 3 ) 
             Pop 
             go = 6 
             Goto game_over 
          EndIf 
          If rl < 97 And rl > 44 And obj$ ( unterster ) > 3 And mitte$ ( unterster ) = 1 
             Gosub chkcol 
          EndIf 
          If rl < 30 And rl > - 30 And obj$ ( unterster ) > 3 And mitte$ ( unterster ) = 2 
             Gosub chkcol 
          EndIf 
          If rl < - 44 And rl > - 97 And obj$ ( unterster ) > 3 And mitte$ ( unterster ) = 3 
             Gosub chkcol 
          EndIf 
       EndIf 
    Next 
    If kurve = 1 Or kurve = - 1 
       If kw < 69 
          Add kw , speed 
          If kw > 69 
             kw = 69 
          EndIf 
       Else 
          kw = 69 
          If kurve = 1 And rl < 133 
             Add rl , speed / 2 
             If rl = - 3 
                rl = 2 
             EndIf 
             If rl > 133 
                rl = 133 
             EndIf 
          EndIf 
          If kurve = - 1 And rl > - 133 
             Add rl , - ( speed / 2 ) 
             If rl = 1 
                rl = - 3 
             EndIf 
             If rl < - 133 
                rl = - 133 
             EndIf 
          EndIf 
          Add skyline , - ( Sgn ( kurve ) * speed ) , - 118 To - 1 
       EndIf 
    EndIf 
    If kurve = 2 Or kurve = - 2 
       If kw > 0 
          Add kw , - speed 
          If kw < 0 
             kw = 0 
          EndIf 
          Add skyline , - ( Sgn ( kurve ) * speed ) , - 118 To - 1 
       Else 
          kw = 0 
          kurve = 0 
       EndIf 
    EndIf 
    wagen = 112 
 Loop 
 
 Label chkcol: 
 If Btst ( 6 , obj$ ( unterster ) ) 
    hunderty = 65 
    Bclr 6 , obj$ ( unterster ) 
    Call 'punkte$' [ 100 ] 
 Else 
    Pop 
    go = 6 
    Goto game_over 
 EndIf 
 Return 
 
 Label mitteln: 
 If mitte$ ( i ) = 1 
    m = y2 
 Else If mitte$ ( i ) = 2 
    m = ( y2 * 2 ) + ( y2 + 1 ) / 3 
 Else 
    m = ( y2 * 3 ) + ( y2 + 1 ) / 2 
 EndIf 
 Return 
 
 Label werte: 
 If y2 + 1 < 34 
    pluskurve = kurve$ ( y2 + 1 , kw ) * Sgn ( kurve ) 
 Else 
    pluskurve = 0 
 EndIf 
 l = objekt$ ( y2 + 1 ) 
 l2 = 93 + lrand$ ( y2 ) - 64 + mrl * rl$ ( y2 , Abs ( rl ) ) + pluskurve 
 l3 = 64 + y2 
 l4 = 127 - l 
 Return 
 
 Label fs_gewonnen: 
 flag$ ( 60 ) = 1 
 Screen 0 
 Fade 1 
 Wait 20 
 Rainbow Del 
 Screen Close 0 
 Screen Close 2 
 Erase 2 
 Gosub init_neu 
 r = 18 
 Gosub initraum 
 Goto parser 
 
 Label fahrstuhl: 
 halt = 0 
 Call 'maus_aus$' 
 Call 'befehle_runter$' 
 Screen 2 
 Bob Off 2 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Gosub personendisplay 
 Call 'test_joy2$' 
 Screen 2 
 Load pfad$ + "Grafiken/FAR.Bobs.Abk" 
 Load pfad$ + "Grafiken/FAR.Pic" , 8 
 Unpack 8 To 2

 Erase 8 
 Screen 0 
 Flash Off 
 Get Sprite Palette 
 Reset Zone 
 Set Zone 1 , 86 , 93 To 107 , 113 
 Set Zone 2 , 86 , 70 To 107 , 90 
 Set Zone 3 , 86 , 47 To 107 , 67 
 Set Zone 4 , 86 , 24 To 107 , 44 
 Set Zone 5 , 86 , 1 To 107 , 21 
 Set Zone 6 , 123 , 24 To 144 , 44 
 Set Zone 7 , 123 , 1 To 144 , 21 
 Set Zone 8 , 124 , 49 To 142 , 74 
 Set Zone 9 , 123 , 93 To 144 , 113 
 Limit Mouse 
 Call 'cursor$' 
 Call 'roller_blind$' 
 Call 'maus_an$' 
 
 Label fahrstuhl2: 
 mk = Mouse Key 
 If mk = 0 
    Goto fahrstuhl2 
 EndIf 
 If mk = 2 And Not halt = 1 
    Call 'befehle_hoch$' 
    Call 'maus_an$' 
    r = 18 
    Gosub initraum 
    Pop 
    Goto parser 
 EndIf 
 Screen 0 
 mz = Mouse Zone 
 If mz = 0 
    Goto fahrstuhl2 
 EndIf 
 Call 'maus_aus$' 
 If Not mz = 8 
    Screen 2 
    Bob 1 , fahrx$ ( mz ) , fahry$ ( mz ) , mz + 1 
    Call 'screco$' 
 EndIf 
 If mz = 8 
    If halt = 1 
       halt = 0 
       Screen 2 
       Bob Off 8 
       Call 'screco$' 
    Else 
       halt = 1 
       Screen 2 
       Bob 8 , fahrx$ ( 8 ) , fahry$ ( 8 ) , 9 
       Call 'screco$' 
    EndIf 
 EndIf 
 While Mouse Key = 1 
 Wend 
 Call 'maus_an$' 
 If Not mz = 8 
    Screen 2 
    Bob Off 1 
    Call 'screco$' 
 EndIf 
 If mz = 1 
    Call 'befehle_hoch$' 
    Call 'maus_an$' 
    etage = 2 
    r = 18 
    Gosub initraum 
    verb = 1 
    Pop 
    Goto parser 
 EndIf 
 If mz = 9 
    If halt = 1 
       txt = 9 
    Else 
       txt = 10 
    EndIf 
    Call 'unterhaltung_laden$' [ txt ] 
    Call 'unterhaltung$' 
 EndIf 
 If mz < 8 And Not halt = 1 
    Call 'befehle_hoch$' 
    Call 'maus_an$' 
    etage = mz 
    r = 20 
    Gosub initraum 
    verb = verb2 
    Pop 
    Goto parser 
 EndIf 
 Goto fahrstuhl2 
 
 Label tresor: 
 nummer$ = "" 
 Call 'maus_aus$' 
 Call 'befehle_runter$' 
 Screen 2 
 Bob Off 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Call 'test_joy2$' 
 Screen 2 
 Load pfad$ + "Grafiken/TRE.Bobs.Abk" 
 Load pfad$ + "Grafiken/TRE.Pic" , 8 
 Unpack 8 To 2

 Get Sprite Palette 
 Erase 8 
 Screen 0 
 Flash Off 
 Get Palette 2 
 Reset Zone 
 Screen 2 
 Call 'font$' [ "JOY2" , 9 ] 
 Screen 0 
 Set Zone 1 , 118 , 28 To 144 , 55 
 Set Zone 2 , 155 , 28 To 181 , 55 
 Set Zone 3 , 192 , 28 To 218 , 55 
 Set Zone 4 , 118 , 65 To 144 , 93 
 Set Zone 5 , 155 , 65 To 181 , 92 
 Set Zone 6 , 192 , 65 To 218 , 92 
 Set Zone 7 , 118 , 102 To 144 , 127 
 Set Zone 8 , 155 , 102 To 181 , 127 
 Set Zone 9 , 192 , 102 To 218 , 127 
 Limit Mouse 
 Call 'cursor$' 
 If versuch = 2 
    Screen 0 
    Flash 18 , "(040,10)(000,10)" 
 EndIf 
 If versuch > 2 
    Screen 0 
    Flash 18 , "(f00,10)(000,10)" 
 EndIf 
 Call 'roller_blind$' 
 Call 'maus_an$' 
 Get Cblock 4 , 132 , 6 , 71 , 14 
 Screen 2 
 Gr Writing 0 
 Ink 19 , 0 
 Screen 0 
 
 Label tresor2: 
 mk = Mouse Key 
 If mk = 0 
    Goto tresor2 
 EndIf 
 If mk = 2 
    Call 'maus_an$' 
    Del Cblock 4 
    Screen 0 
    Call 'font$' [ "JOY" , 6 ] 
    If versuch > 2 
       go = 5 
       Gosub game_over 
    EndIf 
    Call 'befehle_hoch$' 
    r = 17 
    Gosub initraum 
    Pop 
    Goto parser 
 EndIf 
 Screen 0 
 mz = Mouse Zone 
 If mz = 0 
    Goto tresor2 
 EndIf 
 If Len ( nummer$ ) < 4 
    nummer$ = nummer$ + Str$ ( mz ) - " " 
    Screen 2 
    Put Cblock 4 , 132 , 6 
    Text 138 , 9 , nummer$ 
    Call 'screco$' 
 EndIf 
 Call 'maus_aus$' 
 Screen 0 
 x1 = X Screen ( X Mouse ) 
 y1 = Y Screen ( Y Mouse ) 
 Screen 2 
 Bob 1 , ( x1 - 117 ) / 37 * 37 + 118 , ( y1 - 27 ) / 37 * 37 + 28 , mz + 1 
 Call 'screco$' 
 While Mouse Key = 1 
 Wend 
 Bob Off 1 
 Call 'screco$' 
 Call 'maus_an$' 
 If Len ( nummer$ ) = 4 
    Inc versuch 
    nummer$ = "" 
    Screen 2 
    Put Cblock 4 , 132 , 6 
    Call 'screco$' 
 EndIf 
 If versuch = 2 
    Screen 0 
    Flash 18 , "(040,10)(000,10)" 
 EndIf 
 If versuch = 3 
    Screen 0 
    Flash 18 , "(f00,10)(000,10)" 
 EndIf 
 Goto tresor2 
 
 Label telefon: 
 nummer$ = "....." 
 laenge = 0 
 Call 'maus_aus$' 
 Call 'befehle_runter$' 
 Screen 2 
 Bob Off 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Call 'test_joy2$' 
 Screen 2 
 Load pfad$ + "Grafiken/TEL.Bobs.Abk" 
 Load pfad$ + "Grafiken/TEL.Pic" , 8 
 Unpack 8 To 2

 Erase 8 
 Load pfad$ + "Daten/TEL.Zones" , 8 
 Screen 2 
 Call 'font$' [ "JOY" , 6 ] 
 Screen 0 
 Flash Off 
 Get Palette 2 
 Reset Zone 
 Call 'init_zones$' 
 Screen 2 
 Ink 1 , 0 
 Box 10 , 10 To 41 , 20 
 Text 15 , 17 , nummer$ 
 Limit Mouse 225 , 80 To 340 , 207 
 Screen 0 
 Call 'cursor$' 
 Call 'roller_blind$' 
 Call 'maus_an$' 
 
 Label telefon2: 
 Screen 0 
 mc = Mouse Key 
 mz = Mouse Zone 
 If mc = 0 
    Goto telefon2 
 EndIf 
 If mc = 2 
    Goto auflegen 
 EndIf 
 If mz = 0 
    Goto telefon2 
 EndIf 
 If laenge < 5 
    If mz < 10 
       Inc laenge 
       nummer$ = Right$ ( nummer$ , Len ( nummer$ ) - 1 ) + Str$ ( mz ) - " " 
    EndIf 
    If mz = 11 
       Inc laenge 
       nummer$ = Right$ ( nummer$ , Len ( nummer$ ) - 1 ) + "0" 
    EndIf 
    Screen 2 
    Ink 0 
    Bar 15 , 13 To 37 , 18 
    Ink 1 , 0 
    Text 15 , 17 , nummer$ 
    Call 'screco$' 
 EndIf 
 Call 'maus_aus$' 
 Screen 0 
 x1 = X Screen ( X Mouse ) 
 y1 = Y Screen ( Y Mouse ) 
 Screen 2 
 Bob 1 , ( x1 - 113 ) / 28 * 28 + 114 , ( y1 - 8 ) / 28 * 28 + 9 , mz + 1 
 Call 'screco$' 
 While Mouse Key = 1 
 Wend 
 Bob Off 1 
 Call 'screco$' 
 Call 'maus_an$' 
 If mz = 12 
    Gosub lösch_nummer 
 EndIf 
 If laenge = 5 
    Goto wählen 
 EndIf 
 Goto telefon2 
 
 Label auflegen: 
 Call 'maus_an$' 
 Call 'befehle_hoch$' 
 r = raum 
 Gosub initraum 
 Pop 
 Goto parser 
 
 Label wählen: 
 Call 'txt$' [ Chr$ ( 10 ) + "...BITTE WARTEN...ES WIRD DURCHGEWÄHLT..." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
 Wait 200 
 Call 'screco$' 
 If nummer$ = "15637" And handlung$ ( 5 ) = 0 And reden$ ( 11 ) = 0 
    Call 'unterhaltung_laden$' [ 5 ] 
    Call 'txt$' [ ereignis$ ( 32 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'unterhaltung$' 
    If Btst ( 2 , gefragt ) 
       reden$ ( 10 ) = 1 
       reden$ ( 11 ) = 1 
       handlung$ ( 5 ) = 1 
       flag$ ( 5 ) = 0 
    EndIf 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "15637" And reden$ ( 11 ) = 1 
    Call 'txt$' [ Chr$ ( 10 ) + "ES IST BESETZT." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "73210" And flag$ ( 68 ) = 0 
    Call 'unterhaltung_laden$' [ 17 ] 
    Call 'unterhaltung$' 
    If Btst ( 4 , gefragt ) 
       flag$ ( 68 ) = 1 
       Call 'punkte$' [ 78 ] 
    EndIf 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "00929" And reden$ ( 7 ) = 0 And Not raum = 5 
    Call 'unterhaltung_laden$' [ 4 ] 
    Call 'txt$' [ ereignis$ ( 30 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Call 'unterhaltung$' 
    reden$ ( 7 ) = 1 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "00940" And reden$ ( 7 ) = 1 And Not raum = 2 
    Call 'txt$' [ Chr$ ( 10 ) + "ES IST BESETZT." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "00940" And raum = 2 
    Call 'txt$' [ Chr$ ( 10 ) + "ES IST BESETZT." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "00901" And raum = 8 
    Call 'txt$' [ Chr$ ( 10 ) + "ES IST BESETZT." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 If nummer$ = "00901" And Not raum = 8 
    Call 'txt$' [ Chr$ ( 10 ) + "ES GEHT KEINER RAN." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
    Call 'clickmouse$' 
    Call 'screco$' 
    Gosub lösch_nummer 
    Goto telefon2 
 EndIf 
 Call 'txt$' [ Chr$ ( 10 ) + "DU HAST DICH VERWÄHLT UND ENTSCHULDIGST DICH HÖFLICH." + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
 Call 'clickmouse$' 
 Call 'screco$' 
 Gosub lösch_nummer 
 Goto telefon2 
 
 Label lösch_nummer: 
 nummer$ = "....." 
 laenge = 0 
 Screen 2 
 Ink 0 
 Bar 15 , 13 To 37 , 18 
 Ink 1 , 0 
 Text 15 , 17 , nummer$ 
 Call 'screco$' 
 Return 
 
 Label labyrinth: 
 Screen 2 
 Cls 0 
 Call 'roller_blind$' 
 Call 'maus_aus$' 
 Screen 1 
 Get Cblock 3 , 0 , 0 , 320 , 90 
 Call 'befehle_runter$' 
 richtung = 9 
 Call 'iconbank$' [ 0 ] 
 Call 'test_joy2$' 
 Load pfad$ + "Grafiken/Icons2.Abk" 
 Make Icon Mask 
 Call 'iconbank$' [ 2 ] 
 Load pfad$ + "Grafiken/LAB.Icons.Abk" 
 Make Icon Mask 
 Screen 0 
 Get Icon Palette 
 Load pfad$ + "Grafiken/Befehle3.Pic" , 8 
 Unpack 8 To 1

 Erase 8 
 Load pfad$ + "Labyrinth/Labyrinth" + Str$ ( lab ) - " " , 8 
 Call 'befehle_hoch$' 
 Reserve Zone 4 
 Set Zone 1 , 213 , 8 To 223 , 30 
 Set Zone 2 , 227 , 34 To 250 , 44 
 Set Zone 3 , 213 , 48 To 223 , 71 
 Set Zone 4 , 187 , 34 To 209 , 44 
 Gosub _init 
 sprung = 1 
 Gosub aufbau 
 Call 'roller_blind$' 
 Call 'maus_an$' 
 Limit Mouse 315 , 217 To 377 , 279 
 sprung = 0 
 Screen 0 
 Do 
    
    Label labyrinth2: 
    a$ = "" 
    Screen 1 
    Call 'iconbank$' [ 0 ] 
    While Mouse Key = 0 
       a$ = Inkey$ 
       If a$ <> "" 
          Exit 
       EndIf 
    Wend 
    mz = Mouse Zone 
    If a$ = Chr$ ( 27 ) 
       Call 'txt$' [ Chr$ ( 10 ) + "SIE GEBEN ALSO AUF ! NA GUT, WIE SIE WOLLEN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       Call 'clickmouse$' 
       Call 'iconbank$' [ 2 ] 
       Call 'test_joy2$' 
       Load pfad$ + "Grafiken/Gesichter.Abk" 
       No Icon Mask 
       Call 'iconbank$' [ 0 ] 
       Load pfad$ + "Grafiken/Icons3.Abk" 
       Make Icon Mask 
       Call 'befehle_runter$' 
       Pop 
       Goto highscores 
    EndIf 
    If a$ = Chr$ ( 30 ) 
       mz = 1 
    EndIf 
    If a$ = Chr$ ( 28 ) 
       mz = 2 
    EndIf 
    If a$ = Chr$ ( 31 ) 
       mz = 3 
    EndIf 
    If a$ = Chr$ ( 29 ) 
       mz = 4 
    EndIf 
    If Mouse Key = 2 Or ( a$ = " " ) 
       If x = sx And y = sy 
          Gosub ib 
          r = 17 
          Gosub initraum 
          Pop 
          Goto parser 
       EndIf 
       If x = fx And y = fy And knoepfe = 0 
          flag$ ( 55 ) = 1 
          Call 'punkte$' [ 652 ] 
          Gosub ib 
          r = 21 
          Gosub initraum 
          Pop 
          Goto parser 
       EndIf 
       Goto labyrinth2 
    EndIf 
    If mz = 1 
       Paste Icon 208 , 8 , 2 
    EndIf 
    If mz = 2 
       Paste Icon 227 , 29 , 4 
    EndIf 
    If mz = 3 
       Paste Icon 208 , 48 , 6 
    EndIf 
    If mz = 4 
       Paste Icon 187 , 29 , 8 
    EndIf 
    Wait Vbl 
    While Mouse Key = 1 
       If a$ <> "" 
          Exit 
       EndIf 
    Wend 
    If mz = 1 
       Paste Icon 208 , 8 , 1 
       richtung = 9 
       feld = Start ( 8 ) + ( y - 1 ) * 32 + x 
       feld2 = Start ( 8 ) + ( y - 2 ) * 32 + x 
       inhalt = Peek ( feld ) 
       inhalt2 = Peek ( feld2 ) 
       If inhalt = 3 Or inhalt = 23 
          If Not ( y - 2 < 0 Or inhalt2 = 3 Or inhalt2 = 5 Or inhalt2 = 17 Or inhalt2 = 19 Or inhalt2 = 21 Or inhalt2 = 23 ) 
             Dec y 
             Gosub schiebe_stein 
             richtung = 13 
             Gosub aufbau 
             Goto labyrinth2 
          EndIf 
       EndIf 
       If Not ( y = 0 Or inhalt = 5 Or inhalt = 3 Or inhalt = 23 ) 
          Dec y 
          Gosub aufbau 
          Goto labyrinth2 
       EndIf 
    EndIf 
    If mz = 2 
       Paste Icon 227 , 29 , 3 
       richtung = 10 
       feld = Start ( 8 ) + ( y * 32 + x + 1 ) 
       feld2 = Start ( 8 ) + ( y * 32 + x + 2 ) 
       inhalt = Peek ( feld ) 
       inhalt2 = Peek ( feld2 ) 
       If inhalt = 3 Or inhalt = 23 
          If Not ( x + 2 > 31 Or inhalt2 = 3 Or inhalt2 = 5 Or inhalt2 = 17 Or inhalt2 = 19 Or inhalt2 = 21 Or inhalt2 = 23 ) 
             Inc x 
             Gosub schiebe_stein 
             richtung = 14 
             Gosub aufbau 
             Goto labyrinth2 
          EndIf 
       EndIf 
       If Not ( x = 31 Or inhalt = 5 Or inhalt = 3 Or inhalt = 23 ) 
          Inc x 
          Gosub aufbau 
          Goto labyrinth2 
       EndIf 
    EndIf 
    If mz = 3 
       Paste Icon 208 , 48 , 5 
       richtung = 11 
       feld = Start ( 8 ) + ( y + 1 ) * 32 + x 
       feld2 = Start ( 8 ) + ( y + 2 ) * 32 + x 
       inhalt = Peek ( feld ) 
       inhalt2 = Peek ( feld2 ) 
       If inhalt = 3 Or inhalt = 23 
          If Not ( y + 2 > 11 Or inhalt2 = 3 Or inhalt2 = 5 Or inhalt2 = 17 Or inhalt2 = 19 Or inhalt2 = 21 Or inhalt2 = 23 ) 
             Inc y 
             Gosub schiebe_stein 
             richtung = 15 
             Gosub aufbau 
             Goto labyrinth2 
          EndIf 
       EndIf 
       If Not ( y = 11 Or inhalt = 5 Or inhalt = 3 Or inhalt = 23 ) 
          Inc y 
          Gosub aufbau 
          Goto labyrinth2 
       EndIf 
    EndIf 
    If mz = 4 
       Paste Icon 187 , 29 , 7 
       richtung = 12 
       feld = Start ( 8 ) + ( y * 32 + x - 1 ) 
       feld2 = Start ( 8 ) + ( y * 32 + x - 2 ) 
       inhalt = Peek ( feld ) 
       inhalt2 = Peek ( feld2 ) 
       If inhalt = 3 Or inhalt = 23 
          If Not ( x - 2 < 0 Or inhalt2 = 3 Or inhalt2 = 5 Or inhalt2 = 17 Or inhalt2 = 19 Or inhalt2 = 21 Or inhalt2 = 23 ) 
             Dec x 
             Gosub schiebe_stein 
             richtung = 16 
             Gosub aufbau 
             Goto labyrinth2 
          EndIf 
       EndIf 
       If Not ( x = 0 Or inhalt = 5 Or inhalt = 3 Or inhalt = 23 ) 
          Dec x 
          Gosub aufbau 
          Goto labyrinth2 
       EndIf 
    EndIf 
    Gosub aufbau 
 Loop 
 
 Label schiebe_stein: 
 If inhalt = 23 
    Poke feld , 7 
    Inc knoepfe 
 Else 
    Poke feld , 1 
 EndIf 
 If inhalt2 = 7 
    Poke feld2 , 23 
    Dec knoepfe 
 Else 
    Poke feld2 , 3 
 EndIf 
 If knoepfe = 0 
    Poke Start ( 8 ) + ( fy * 32 + fx ) , 21 
 Else 
    Poke Start ( 8 ) + ( fy * 32 + fx ) , 19 
 EndIf 
 Return 
 
 Label _init: 
 knoepfe = 0 
 For x = 0 To 31 
    For y = 0 To 11 
       inhalt = Peek ( Start ( 8 ) + ( y * 32 + x ) ) 
       If inhalt = 7 
          Inc knoepfe 
       EndIf 
       If inhalt = 17 
          sx = x 
          sy = y 
       EndIf 
       If inhalt = 21 
          fx = x 
          fy = y 
          Poke Start ( 8 ) + ( y * 32 + x ) , 19 
       EndIf 
    Next 
 Next 
 x = sx 
 y = sy 
 Return 
 
 Label ib: 
 Call 'maus_aus$' 
 Erase 8 
 Call 'iconbank$' [ 2 ] 
 Call 'test_joy2$' 
 Load pfad$ + "Grafiken/Gesichter.Abk" 
 No Icon Mask 
 Call 'iconbank$' [ 0 ] 
 Load pfad$ + "Grafiken/Icons3.Abk" 
 Make Icon Mask 
 Call 'befehle_runter$' 
 Screen 1 
 Put Cblock 3 , 0 , 0 
 Get Icon Palette 
 Call 'font$' [ "JOY" , 6 ] 
 Reset Zone 
 Reserve Zone 28 
 Set Zone 1 , 0 , 9 To 57 , 90 
 Set Zone 2 , 58 , 9 To 115 , 44 
 Set Zone 3 , 58 , 46 To 115 , 68 
 Set Zone 4 , 58 , 68 To 115 , 90 
 feld = 5 
 For j = 1 To 3 
    For i = 1 To 8 
       x = 100 + i * 24 
       y = - 6 + j * 24 
       Set Zone feld , x , y To x + 16 , y + 16 
       Inc feld 
    Next 
 Next 
 Call 'befehle_hoch$' 
 Call 'maus_an$' 
 Return 
 
 Label aufbau: 
 Screen 2 
 Call 'iconbank$' [ 2 ] 
 Restore aufbau_daten_normal 
 Paste Icon 155 , 59 , Peek ( Start ( 8 ) + ( y * 32 + x ) ) 
 Paste Icon 155 , 59 , richtung 
 For i = 1 To 8 
    Read ax , ay 
    x1 = x + ax 
    y1 = y + ay 
    inhalt = Peek ( Start ( 8 ) + ( y1 * 32 + x1 ) ) 
    If x1 < 0 Or x1 > 31 Or y1 < 0 Or y1 > 11 
       inhalt = 5 
    EndIf 
    If inhalt = 23 
       inhalt = 3 
    EndIf 
    If Not flag$ ( 42 ) = 2 
       Inc inhalt 
    EndIf 
    Paste Icon 155 + ( ax * 10 ) , 59 + ( ay * 10 ) , inhalt 
 Next 
 If transport$ ( 127 ) = 2 And flag$ ( 42 ) = 2 
    Restore aufbau_daten_hell 
    For i = 1 To 16 
       Read ax , ay 
       x1 = x + ax 
       y1 = y + ay 
       inhalt = Peek ( Start ( 8 ) + ( y1 * 32 + x1 ) ) + 1 
       If inhalt = 24 
          inhalt = 4 
       EndIf 
       If x1 < 0 Or x1 > 31 Or y1 < 0 Or y1 > 11 
          inhalt = 6 
       EndIf 
       Paste Icon 155 + ( ax * 10 ) , 59 + ( ay * 10 ) , inhalt 
    Next 
 EndIf 
 If Not sprung = 1 
    Call 'screco$' 
 EndIf 
 Return 
 
 Label klackstris: 
 Call 'maus_aus$' 
 Call 'befehle_runter$' 
 Screen Close 1 
 Screen 2 
 Bob Off 
 Wait Vbl 
 Cls 0 
 Call 'roller_blind$' 
 Call 'test_joy2$' 
 Screen Close 3 
 Screen Close 4 
 Screen Close 0 
 Load pfad$ + "Grafiken/Klackstris.Pic" , 8 
 Call 'iconbank$' [ 0 ] 
 Bank Swap 2 , 13 
 Load pfad$ + "Grafiken/Klackstris.Abk" , 2 
 Make Icon Mask 
 Hide On 
 nstein = Rnd ( 7 ) + 1 
 stein = Rnd ( 7 ) + 1 
 level = 0 
 kates = - 1 
 p = 0 
 Inc stat$ ( stein - 1 ) 
 wr = 1200 
 warter = wr 
 wu = 40 
 warteu = wu 
 wrl = 0 
 x = 3 
 y = 0 
 weg = 0 
 For i = 1 To 4 
    For j = 0 To 15 
       feld$ ( i , j ) = 0 
    Next 
 Next 
 For i = 1 To 4 
    feld$ ( i , 16 ) = 1 
 Next 
 
 Unpack 8 To 2

 Screen Hide 2 
 Screen Open 0 , 320 , 128 , 64 , Lowres 
 Screen Display 0 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Get Palette 2 
 Call 'roller_blind$' 
 Double Buffer 
 Autoback 0 
 Get Block 2 , 116 , 16 , 46 , 86 
 Erase 8 
 Screen Open 1 , 48 , 80 , 64 , Lowres 
 Flash Off 
 Curs Off 
 Cls 0 
 Get Palette 0 
 Screen Hide 1 
 Paste Icon 20 , 0 , stein 
 Screen 0 
 Call 'font$' [ "JOY" , 6 ] 
 Call 'level$' 
 Call 'klackstrisse$' 
 Call 'p$' 
 Call 'stats$' 
 Call 'make_screen$' 
 Screen Copy Physic To Logic 
 
 Do 
    Dec warter 
    Dec warteu 
    If Jleft ( 1 ) And x > 1 And y > 0 And feld$ ( x - 1 , y ) = 0 And wrl = 0 
       wrl = 1 
       Screen 1 
       Ink 0 
       Bar ( x - 1 ) * 10 , y * 5 To x * 10 - 1 , y * 5 + 4 
       feld$ ( x , y ) = 0 
       Dec x 
       feld$ ( x , y ) = stein 
       Paste Icon ( x - 1 ) * 10 , y * 5 , stein 
       Call 'make_screen$' 
       Screen Copy Physic To Logic 
    EndIf 
    If Jright ( 1 ) And x < 4 And y > 0 And wrl = 0 
       If feld$ ( x + 1 , y ) = 0 
          wrl = 1 
          Screen 1 
          Ink 0 
          Bar ( x - 1 ) * 10 , y * 5 To x * 10 - 1 , y * 5 + 4 
          feld$ ( x , y ) = 0 
          Inc x 
          feld$ ( x , y ) = stein 
          Paste Icon ( x - 1 ) * 10 , y * 5 , stein 
          Call 'make_screen$' 
          Screen Copy Physic To Logic 
       EndIf 
    EndIf 
    If Jleft ( 1 ) = 0 And Jright ( 1 ) = 0 And wrl = 1 
       wrl = 0 
    EndIf 
    If warteu <= 0 
       warteu = wu 
       If Jdown ( 1 ) 
          warter = 0 
       EndIf 
    EndIf 
    If warter <= 0 
       warter = wr 
       If feld$ ( x , y + 1 ) = 0 
          Screen 1 
          Ink 0 
          Bar ( x - 1 ) * 10 , y * 5 To x * 10 - 1 , y * 5 + 5 
          feld$ ( x , y ) = 0 
          Inc y 
          feld$ ( x , y ) = stein 
          Paste Icon ( x - 1 ) * 10 , y * 5 , stein 
          If y = 1 
             Paste Icon 20 , 0 , nstein 
          EndIf 
          Call 'make_screen$' 
          Screen Copy Physic To Logic 
       Else 
          If y = 1 And x = 3 
             Exit 
          EndIf 
          Gosub pruef_vert 
          p1 = pruef 
          Gosub pruef_horiz 
          p2 = pruef 
          If p1 = 3 And p2 = 3 
             For l = y To Min ( y + 2 , 15 ) 
                Gosub zeile_weg 
                Inc y 
             Next 
             Call 'klackstrisse$' 
          EndIf 
          Gosub pruef_vert 
          If pruef = 3 
             Screen 1 
             Ink 0 
             Bar ( x - 1 ) * 10 , y * 5 To x * 10 - 1 , ( y + 3 ) * 5 - 1 
             Inc p 
             Call 'p$' 
             Call 'klackstrisse$' 
             Call 'make_screen$' 
             Screen Copy Physic To Logic 
             For i = 0 To 2 
                feld$ ( x , y + i ) = 0 
             Next 
          EndIf 
          Gosub pruef_horiz 
          If pruef > 2 
             If pruef = 3 
                Gosub zeile_weg 
             Else If Not y = 16 
                For l = y To 15 
                   Gosub zeile_weg 
                   Inc y 
                Next 
             EndIf 
             Call 'klackstrisse$' 
             Call 'make_screen$' 
             Screen Copy Physic To Logic 
          EndIf 
          
          stein = nstein 
          nstein = Rnd ( 7 ) + 1 
          x = 3 
          y = 0 
          Inc stat$ ( stein - 1 ) 
          Call 'stats$' 
       EndIf 
    EndIf 
 Loop 
 Screen 2 
 Cls 0 
 Call 'roller_blind$' 
 Screen Close 2 
 Screen Close 1 
 Screen Close 0 
 Show On 
 Erase 2 
 Bank Swap 2 , 13 
 Screen Open 1 , 320 , 90 , 64 , Lowres 
 Screen Display 1 , 128 , 309 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 2 , 320 , 128 , 64 , Lowres 
 Screen Display 2 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 3 , 320 , 34 , 32 , Lowres 
 Screen Display 3 , 128 , 47 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Reserve Zone 10 
 For i = 0 To 9 
    Set Zone i + 1 , 31 * i , 0 To 31 * i + 30 , 38 
 Next 
 Screen Open 4 , 320 , 128 , 64 , Lowres 
 Screen Display 4 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Screen Open 0 , 320 , 128 , 64 , Lowres 
 Screen Display 0 , 128 , 80 , , 
 Flash Off 
 Curs Off 
 Cls 0 
 Colour 1 , 0xfff 
 Colour 30 , 0xfff 
 Call 'maus_aus$' 
 Call 'cursor$' 
 Call 'font$' [ "JOY" , 6 ] 
 If Not Exist ( pfad$ ) 
    Screen 0 
    Gr Writing 0 
    Ink 1 , 0 
    Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
    While Not Exist ( pfad$ ) 
    Wend 
    Cls 0 
 EndIf 
 Gosub init_befehle 
 Screen 3 
 Call 'iconbank$' [ 2 ] 
 Get Icon Palette 
 Priority Reverse On 
 Screen 4 
 Cls 32 
 Screen 0 
 Reserve Zone 20 
 If flag$ ( 69 ) = 0 
    flag$ ( 69 ) = 1 
    Call 'punkte$' [ p ] 
 EndIf 
 r = 1 
 Gosub initraum 
 Goto parser 
 
 Label pruef_vert: 
 pruef = 1 
 For i = 1 To 2 
    If y + i > 15 
       Exit 
    EndIf 
    If feld$ ( x , y + i ) = stein 
       Inc pruef 
    EndIf 
 Next 
 Return 
 
 Label pruef_horiz: 
 pruef = 0 
 For i = 1 To 4 
    If feld$ ( i , y ) = stein 
       Inc pruef 
    Else 
       If pruef = 3 
          Exit 
       Else 
          pruef = 0 
       EndIf 
    EndIf 
 Next 
 Dec i 
 Return 
 
 Label zeile_weg: 
 Screen 1 
 Ink 0 
 Bar ( i - pruef ) * 10 , y * 5 To i * 10 - 1 , y * 5 + 4 
 Screen Copy 1 , ( i - pruef ) * 10 , 4 , i * 10 , y * 5 To 1 , ( i - pruef ) * 10 , 9 
 Bar ( i - pruef ) * 10 , 5 To i * 10 - 1 , 9 
 Inc p 
 Call 'p$' 
 Call 'make_screen$' 
 Screen Copy Physic To Logic 
 For j = y To 2 Step - 1 
    For k = i - ( pruef - 1 ) To i 
       feld$ ( k , j ) = feld$ ( k , j - 1 ) 
    Next 
 Next 
 For j = i - ( pruef - 1 ) To i 
    feld$ ( j , 1 ) = 0 
 Next 
 Return 
 
 Label init_befehle: 
 Screen Display 1 , 128 , 309 , , 
 Load pfad$ + "Grafiken/Befehle2.Pic" , 8 
 Unpack 8 To 1

 Erase 8 
 Get Cblock 2 , 0 , 0 , 320 , 90 
 Load pfad$ + "Grafiken/Befehle.Pic" , 8 
 Unpack 8 To 1

 Erase 8 
 Gosub inventory 
 Ink 0 , 5 
 If half = 1 
    Screen Display 1 , 128 , , 160 , 90 
 EndIf 
 Screen 1 
 Call 'font$' [ "JOY" , 6 ] 
 Reserve Zone 28 
 Set Zone 1 , 0 , 9 To 57 , 90 
 Set Zone 2 , 58 , 9 To 115 , 44 
 Set Zone 3 , 58 , 46 To 115 , 68 
 Set Zone 4 , 58 , 68 To 115 , 90 
 feld = 5 
 For j = 1 To 3 
    For i = 1 To 8 
       x = 100 + i * 24 
       y = - 6 + j * 24 
       Set Zone feld , x , y To x + 16 , y + 16 
       Inc feld 
    Next 
 Next 
 If spr = 0 
    Call 'befehle_hoch$' 
 Else 
    spr = 0 
 EndIf 
 Call 'verb_rein$' 
 Return 
 
 Label ladetexte: 
 Screen 1 
 Set Input 42 , - 1 
 anz# = Float 1 
 Ink 6 
 Get Cblock 1 , 0 , 0 , 320 , 11 
 If Not Exist ( pfad$ ) 
    Screen 0 
    Gr Writing 0 
    Ink 1 , 0 
    Text 70 , 60 , "BITTE LEGEN SIE DIE ZWEITE DISK EIN" 
    While Not Exist ( pfad$ ) 
    Wend 
    Cls 0 
 EndIf 
 Screen 1 
 Open In 1 , pfad$ + "Texte/Ereignisse.Txt" 
 For i = 1 To 102 
    Bar 1 , 1 To 1 + anz# , 6 
    Line Input # 1 , ereignis$ ( i ) 
    anz# = anz# + Float 3.1000001430511475 
    ereignis$ ( i ) = ereignis$ ( i ) + "*" + Chr$ ( 10 ) 
 Next 
 Close 1 
 Put Cblock 1 , 0 , 0 
 Return 
 
 Label inventory: 
 Screen 1 
 Call 'iconbank$' [ 1 ] 
 zaehler = 0 
 For y = 1 To 3 
    For x = 1 To 8 
       Inc zaehler 
       If inventar$ ( zaehler ) > 0 
          Paste Icon 100 + x * 24 , - 6 + y * 24 , inventar$ ( zaehler ) 
       Else 
          Cls 0 , 100 + x * 24 , - 6 + y * 24 To ( 100 + x * 24 ) + 16 , ( - 6 + y * 24 ) + 16 
       EndIf 
    Next 
 Next 
 Return 
 
 Label verben: 
 Data "BETRACHTE" , "ÖFFNE" , "SCHLIEßE" , "ZIEHE" , "DRÜCKE" , "UMSCHAUEN" , "BENUTZE" , "SCHALTE EIN" , "SCHALTE AUS" , "GEHE ZU" , "ZURÜCK" , "NIMM" , "GIB" , "SPIELSTAND SPEICHERN" , "SPIELSTAND LADEN" , "REDE MIT" 
 
 Label objekte: 
 Data "POSTER" , 73 , "KLINKE" , 1 , "POSTER" , 73 , "POSTER" , 73 , "BLUMENTOPF" , 1 , "MONITOR" , 78 , "AMIGA 2000" , 78 , "ZEITSCHRIFT" , 1 , "JOY" , 1 , "LICHTSCHALTER" , 81 
 Data "DISKETTE" , 1 , "CDTV" , 78 , "SPIEGEL" , 73 , "TÜR" , 80 , "AUSWEIS" , 2 , "FENSTER" , 82 , "SPINNENNETZ" , 73 , "FENSTER" , 82 
 
 Data "PLAKAT" , 73 , "STAPEL PAPIER" , 75 , "PE-TSE" , 78 , "MATAHARI ST" , 78 , "ZETTEL" , 72 , "C=65" , 78 , "STECKDOSE" , 80 , "POSTER" , 73 , "SCHNIPSEL" , 75 , "BILD" , 76 
 Data "LAYOUTTISCH" , 78 , "SCHRANK" , 78 , "ZETTEL" , 1 , "TÜR" , 80 , "SCHLÜSSEL" , 1 , "DRUCKER" , 75 , "TELEFON" , 73 
 
 Data "SPIEGELEI" , 1 , "HYDROCHINON" , 1 , "SCHUBLADE" , 71 , "SCHUBLADE" , 71 , "SCHUBLADE" , 71 , "KÜHLSCHRANK" , 78 , "SCHRANK" , 78 , "MÜLLEIMER" , 72 , "KAFFEEMASCHINE" , 71 , "WASSERHAHN" , 81 , "GEFRIERFACH" , 79 
 Data "TASS KAFF" , 1 , "RATTENGIFT" , 1 , "BANANE" , 1 , "SCHRANKTÜR" , 80 
 
 Data "TÜR" , 80 , "TÜR" , 80 , "TÜR" , 80 , "TÜR" , 80 , "RÜCK" , 0 
 
 Data "TELEFAX" , 73 , "MATAHARI ST" , 78 , "MONITOR" , 78 , "AMIGA 500+" , 78 , "DRUCKER" , 78 , "TELEFON" , 73 , "MONITOR(AN)" , 78 , "TRAFO" , 78 , "MONITOR" , 78 , "TASTATUR" , 71 
 Data "PE-TSE" , 78 , "DRUCKER" , 78 , "STECKDOSEN" , 80 , "LICHTSCHALTER" , 81 , "MONITOR" , 78 , "POSTER" , 73 
 
 Data "RÜCK" , 0 , "WÄSCHELEINE" , 71 , "LAMPE" , 80 , "FOTOVERGRÖßERER" , 78 , "FLASCHE" , 1 , "ROTFOLIE" , 1 , "ZANGE" , 1 , "BASSIN" , 73 , "BASSIN" , 73 , "BASSIN" , 73 
 Data "ECTO-SCHLEIM" , 72 , "TISCH" , 78 , "TISCH" , 78 , "TISCH" , 78 , "POSTER" , 73 , "STECKDOSEN" , 80 , "NACKTFOTO" , 0 , "GELDSCHEIN" , 1 , "POSTERFETZEN" , 1 , "BASSIN" , 73 
 
 Data "STUFEN NACH OBEN" , 80 , "STUFEN NACH UNTEN" , 80 , "WENDELTREPPE" , 80 , "STADT" , 80 
 
 Data "PFLANZE" , 71 , "MONITOR" , 78 , "AMIGA" , 78 , "TASTATUR" , 71 , "WILD-ZEITUNG" , 74 , "TELEFON" , 73 , "NAMENSSCHILD" , 76 , "PAPIERSTAPEL" , 75 , "SCHUBLADE" , 71 , "SCHUBLADE" , 71 
 Data "BÜROSTUHL" , 78 , "FENSTER" , 82 , "TÜR" , 82 , "FENSTER" , 82 , "FILMROLLE" , 1 , "NOTIZBUCH" , 1 
 
 Data "TOILETTE" , 77 , "TOILETTE" , 77 , "ANTENNE" , 80 
 
 Data "MAUER" , 80 , "STUFEN NACH UNTEN" , 80 , "RÜCK" , 0 
 
 Data "TÜR" , 80 , "STUFEN NACH UNTEN" , 80 , "GEHEIMFACH" , 82 
 
 Data "COMPUTERSPIELE" , 1 , "COMPUTERSPIELE" , 1 , "COMPUTERSPIELE" , 1 , "COMPUTERSPIELE" , 73 , "STEINE" , 80 , "KISTEN" , 77 , "TASCHENLAMPE" , 1 , "ORDNER" , 72 , "JOY-HEFT" , 1 , "LEERE FÄCHER" , 80 
 Data "JOY-DAS ADVENTURE" , 1 , "DAS SPIEL-SPIEL" , 1 , "IT IS BALLER TIME !!!" , 1 , "NÄCHSTE JOY" , 1 
 
 Data "RÜCK" , 0 , "TÜR" , 80 , "STUFEN NACH UNTEN" , 80 
 
 Data "RÜCK" , 0 , "TÜR" , 80 , "BLAUE BERGE" , 80 , "LAMEBOY UND BATTERIEFLÜSSIGKEIT" , 0 , "LAMEBOY" , 1 
 
 Data "MANN" , 72 , "TELEFON" , 73 , "TELEFONBUCH" , 1 , "BUCHWARENHANDEL" , 81 , "TÜR" , 80 , "GLASTÜR" , 80 , "STUFEN NACH OBEN" , 80 
 
 Data "TORTENBODEN" , 1 , "HUNDEFUTTER" , 1 , "BLOTERONE" , 1 , "KARTOFFEL-CHIPS" , 1 , "SPÜLMITTEL" , 1 , "SCHOKOLADE" , 1 , "KISTE" , 77 , "VERKÄUFERIN" , 71 , "ZETTEL" , 75 , "REGAL" , 79 
 Data "REGAL" , 79 , "REGAL" , 79 , "KASSETTE" , 1 , "BROT" , 1 , "KAFFEE" , 1 , "BATTERIEN" , 1 , "PLAKAT" , 73 
 
 Data "GERÜMPEL" , 79 , "LOCH IN DER WAND" , 82 , "BILD" , 73 , "TRESOR" , 78 , "BILD" , 73 , "LAPPEN" , 1 , "BADEWANNE" , 77 , "SONNENBRILLE" , 1 
 
 Data "INFORMATION" , 77 , "FAHRSTUHL" , 81 , "FAHRSTUHL" , 81 , "FAHRSTUHL" , 81 , "PFLANZE" , 74 , "TÜR" , 80 , "FUßPODEN" , 81 
 
 Data "KASSE" , 1 , "THEKE" , 80 , "SCHILD" , 73 , "BUCH" , 1 , "TÜR" , 80 , "RÜCK" , 0 
 
 Data "KRANKENLIEGE" , 77 , "DER TOD" , 72 , "OPERATIONSBESTECK" , 76 , "TÜR" , 80 , "TÜR" , 80 , "TÜR" , 80 , "TÜR" , 80 , "TÜR" , 80 , "TÜR" , 80 , "SCHILD" , 73 
 
 Data "TV-GERÄT" , 76 , "SESSEL" , 78 , "RÜCK" , 0 , "TV-GERÄT(AN)" , 76 , "LAMPE" , 71 , "COMPACT DISK" , 1 
 
 Data "LEBENSANZEIGE" , 74 , "PUNKTEANZEIGE" , 80 , "PAUSELOGO" , 79 , "HERBERT" , 81 , "BOMBE" , 80 , "ECTO-SCHLEIM" , 72 , "BONUSGEGENSTAND" , 1 , "BONUSGEGENSTAND" , 1 , "BONUSGEGENSTAND" , 1 
 
 Data "BILDSCHIRM" , 81 , "BATTERIEANZEIGE" , 80 , "STEUERKREUZ" , 82 , "KNOPF A" , 81 , "KNOPF B" , 81 , "HELLIGKEITSREGLER" , 81 , "LAUTSTÄRKEREGLER" , 81 , "POWER-SCHALTER(AN)" , 81 , "LAMEBOY" , 81 , "HAMMER" , 1 
 Data "NAGEL" , 1 
 
 Data "SCHILD" , 79 , "SCHAUFENSTER" , 82 , "AUTOMATIKTÜR" , 80 , "M PARK" , 81 , "MÜLLEIMER" , 75 , "TÜR" , 80 , "CLOSE-GADGET" , 82 , "WINDOWTITEL" , 81 , "ERROR-AXE" , 74 , "BRETZELBACKSIMULATOR" , 75 
 Data "KLOSETT-OUT" , 76 , "ULTIMA 853, PART VII" , 76 , "" , 0 , "SCHAUFENSTER" , 82 
 
 Data "TEICH" , 81 , "HUNDEHAUFEN" , 72 , "BANK" , 77 , "MÜLLEIMER" , 78 , "BAUM" , 81 , "GEBÜSCH" , 82 , "FAHNENMAST" , 81 
 
 Data "RÜCK" , 0 , "BANNER" , 82 , "IMPERIALER TRANSPORTER" , 78 , "PLATTFORM" , 80 , "REGAL" , 79 , "ADVENTURE" , 0 , "HOCHLEISTUNGSPROZESSOR" , 0 , "FLUGSIMULATOR" , 0 , "PD-BOX" , 1 , "KLACKSTRIS" , 1 
 Data "WECHSELGELD" , 1 
 
 Label räume: 
 Data "REDAKTION VORNE" , 2 , "REDAKTION HINTEN" , 1 , "KÜCHE" , 2 , "FLUR" , 1 , "BÜRO" , 4 , "DUNKELKAMMER" , 4 , "WENDELTREPPE" , 4 , "DACHBÜRO" , 7 , "DACH" , 8 , "2. STOCKWERK" , 6 , "PLATEAU" , 7 , "ARCHIV" , 13 , "1. STOCKWERK" , 10 , "HOF" , 0 , "ERDGESCHOß" , 14 , "SUPERMARKT" , 24 , "KELLER" , 15 
 Data "VORHALLE" , 15 , "BUCHHANDEL" , 15 , "GANG" , 0 , "GEHEIMRAUM" , 17 , "HERBIS QUEST" , 1 , "LAMEBOY" , 0 , "FUßWEG" , 15 , "M PARK" , 0 , "COMPUTERSHOP" , 24 
 
 Label personen: 
 Data "???" , 0 , "???" , 4 , "???" , 4 , "VERKÄUFERIN" , 16 , "???" , 4 , "???" , 4 , "???" , 4 , "???" , 4 , "???" , 4 , "???" , 4 , "" , 0 , "MANN" , 15 , "SPACERAT" , 0 , "DER TOD" , 0 , "LEICHE" , 0 , "LUTZ" , 0 , "KRANKENSCHWESTER" , 18 , "KARSTEN KÜSTER" , 0 , "MICHAEL KAFKE" , 25 , "DANIEL SCHWEN" , 25 
 
 Label raumaddierer: 
 Data 18 , 35 , 50 , 55 , 71 , 91 , 95 , 111 , 114 , 117 , 120 , 134 , 137 , 142 , 149 , 166 , 174 , 181 , 187 , 197 , 203 , 212 , 223 , 237 , 244 , 255 
 
 Label aufbau_daten_normal: 
 Data - 1 , - 1 , 0 , - 1 , 1 , - 1 , 1 , 0 , 1 , 1 , 0 , 1 , - 1 , 1 , - 1 , 0 
 
 Label aufbau_daten_hell: 
 Data - 2 , - 2 , - 1 , - 2 , 0 , - 2 , 1 , - 2 , 2 , - 2 , 2 , - 1 , 2 , 0 , 2 , 1 , 2 , 2 , 1 , 2 , 0 , 2 , - 1 , 2 , - 2 , 2 , - 2 , 1 , - 2 , 0 , - 2 , - 1 
 
 Label fahrstuhl_daten: 
 Data 85 , 92 , 85 , 69 , 85 , 46 , 85 , 23 , 85 , 0 , 122 , 23 , 122 , 0 , 122 , 49 , 122 , 92 
 
 Label graus: 
 Data 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 
 Data 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 
 Data 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 3 
 Data 3 , 3 , 3 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 5 
 Data 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 7 , 7 , 7 , 7 , 7 , 8 
 Data 8 , 8 , 8 , 9 , 9 , 9 , 9 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 11 , 12 
 Data 12 , 12 , 13 , 13 , 13 , 14 , 14 , 15 , 15 , 15 , 16 , 16 , 16 , 17 , 17 , 18 
 Data 18 , 19 , 19 , 20 , 20 , 21 , 21 , 22 , 22 , 23 , 23 , 24 , 24 , 25 , 25 , 26 
 Data 26 , 27 , 28 , 29 , 29 , 30 , 31 , 32 , 32 , 33 , 34 , 35 , 35 , 36 , 37 , 38 
 Data 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 
 
 Label y: 
 Data 1 , 0 , 17 , 1 , 33 , 0 , 49 , 1 , 65 , 0 , 81 , 1 , 97 , 0 , 113 , 1 , 129 , 0 , 145 , 1 
 
 Label rechts_links: 
 Data 1 , 3 , 6 , 8 , 11 , 13 , 16 , 18 , 21 , 23 , 26 , 28 , 31 , 33 
 Data 36 , 38 , 41 , 43 , 46 , 48 , 51 , 54 , 56 , 58 , 61 , 64 , 66 
 Data 68 , 70 , 74 , 76 , 78 , 80 , 84 , 86 , 88 , 91 , 94 , 96 
 Data 98 , 101 , 104 , 106 , 108 , 111 , 114 , 116 , 118 , 121 
 Data 124 , 126 , 128 , 131 , 133 
 
 Label kurve: 
 Data 69 , 61 , 54 , 50 , 45 , 41 , 39 , 36 , 33 , 31 , 29 , 27 
 Data 24 , 23 , 21 , 20 , 18 , 16 , 15 , 14 , 12 , 11 , 10 , 9 
 Data 8 , 7 , 6 , 5 , 5 , 3 , 3 , 2 , 1 
 
 Label lrand: 
 Data 118 , 116 , 114 , 112 , 109 , 107 , 105 , 103 , 100 
 Data 98 , 96 , 94 , 91 , 89 , 87 , 85 , 82 , 80 , 78 , 76 , 73 
 Data 71 , 69 , 67 , 64 , 62 , 60 , 58 , 56 , 53 , 51 , 49 , 47 
 Data 44 , 42 , 40 , 38 , 35 , 33 , 31 , 29 , 26 , 24 , 22 , 20 
 Data 17 , 15 , 13 , 11 , 8 , 6 , 4 , 2 , 0 
 
 Label breite: 
 Data 4 , 8 , 12 , 16 , 22 , 26 , 30 , 34 , 40 , 44 , 48 , 52 , 58 
 Data 62 , 66 , 70 , 76 , 80 , 84 , 88 , 94 , 98 , 102 , 106 , 112 
 Data 116 , 120 , 124 , 128 , 134 , 138 , 142 , 146 , 152 , 156 
 Data 160 , 164 , 170 , 174 , 178 , 182 , 188 , 192 , 196 , 200 
 Data 206 , 210 , 214 , 218 , 224 , 228 , 232 , 236 , 240 
 
 Label objekt: 
 Data 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 7 , 7 , 7 , 7 , 7 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 
 Data 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 
 
 Label haus: 
 Data 3 , 4 , 5 , 6 , 7 , 9 , 9 , 13 , 14 , 20 , 19 , 27 , 28 , 40 , 39 , 55 , 58 , 82 , 78 , 111 
 
 Label sperre: 
 Data 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 4 , 3 , 6 , 6 , 10 , 7 , 12 , 11 , 18 , 14 , 24 
 
 Label mikrowelle: 
 Data 1 , 1 , 1 , 1 , 1 , 1 , 1 , 2 , 2 , 3 , 2 , 4 , 4 , 6 , 5 , 7 , 8 , 11 , 10 , 14 
 
 Label keks: 
 Data 1 , 1 , 1 , 1 , 1 , 2 , 1 , 3 , 2 , 5 , 3 , 6 , 4 , 9 , 6 , 12 , 8 , 18 , 12 , 25 
 
 Label baum: 
 Data 1 , 1 , 1 , 2 , 1 , 5 , 2 , 7 , 4 , 12 , 5 , 16 , 8 , 23 , 11 , 31 , 16 , 43 , 23 , 62 
 
 Label oma: 
 Data 1 , 1 , 1 , 2 , 1 , 3 , 1 , 4 , 2 , 6 , 3 , 8 , 5 , 12 , 6 , 16 , 9 , 24 , 12 , 32 
 
 Label scrtext: 
 Data 3 
 Data 4 , "THE PRODUCER WISH TO GRATEFULLY ACKNOWLEDGE THE" 
 Data "CONSULTING SERVICES AND ASSISTANCE OF" , "CARSTEN KAFKE" 
 Data "IN THE MAKING OF THIS GAME" , 0 
 
 Data 4 , 50 
 
 Data 2 
 Data "CAST OF CHARACTERS:" 
 
 Data 1 
 Data "CHIEF EDITOR" , "JUPP JENNSEN" 
 Data "SOB SISTER" , "LUTZ KEMPERT" 
 Data "CDTV-PLAYER" , "HERBERT RIGGS" 
 Data "MUSIC HEARER" , "CHRISTIANE JUNGER" 
 Data "LAMEBOY-PLAYER" , "GERD KÜHNEL" 
 Data "CHEAT-CORNER" , "HANS-WERNER SCHMIDT" 
 Data "ENGLAND-TRAVELLER" , "BARBARA BRINK" 
 Data "STRIKE-CALLER" , "RAINER IWAN" 
 Data "LAYOUTER" , "ANJA FUCHSER" 
 Data "GLAZIER" , "ALBERT DERFLER" 
 Data "CRAZY DIKTATOR" , "ADOLF H." 
 Data "COMIC ANIMAL" , "SPACE BAT" 
 Data "THE DEATH" , "HE HIMSELF" 
 Data "CORPSE" , "A DEAD PERSON" 
 Data "SELLER" , "AN UGLY WOMAN" 
 Data "NURSE" , "THE UGLY WOMAN, TOO" 
 Data "NOKAMI AD-MANAGER" , "KARSTEN KÜSTER" 
 Data "STUNT" , "JUPP JENNSEN" 
 Data "SPECIAL APPEARANCE BY" , "MICHAEL KAFKE" 
 Data "" , "DANIEL SCHWEN" 
 Data "§" , "" 
 
 Data 4 , 98 
 
 Data 3 
 Data 2 , "UNIT PRODUCTION MANAGER" , "MICHAEL KAFKE" , 0 
 
 Data 4 , 20 
 
 Data 3 
 Data 2 , "ASSISTANT DIRECTOR" , "DANIEL SCHWEN" , 0 
 
 Data 4 , 98 
 
 Data 3 
 Data 2 , "VISUAL EFFECTS SUPERVISOR" , "MICHAEL KAFKE" , 0 
 
 Data 4 , 98 
 
 Data 1 
 Data "PROPERTY MASTER" , "MICHAEL KAFKE" 
 Data "STUNT COORDINATOR" , "DANIEL SCHWEN" 
 Data "SUPERVISING SOUND EDITOR" , "DE LUCHS SOUND" 
 Data "SOUND MIXER" , "PROF. MED. OCTA" 
 Data "RE-RECORDING MIXER" , "PROF. MED. OCTA" 
 Data "CASTING ASSOCIATE" , "MICHAEL KAFKE" 
 Data "EXTRAS CASTING" , "DANIEL SCHWEN" 
 Data "WIGS" , "DANIEL SCHWEN" 
 Data "ART DIRECTOR" , "DANIEL SCHWEN" 
 Data "ASSOCIATE PRODUCER" , "HIER KÖNNTE IHR NAME STEHEN" 
 Data "SET DECORATOR" , "DANIEL SCHWEN" 
 Data "ASSISTANT ART DIRECTOR" , "MICHAEL KAFKE" 
 Data "SPECIAL EFFECTS COORDINATORS" , "DANIEL SCHWEN" 
 Data "" , "MICHAEL KAFKE" 
 Data "SPECIAL EFFECTS FOREPERSON" , "DANIEL SCHWEN" 
 Data "SCRIPT SUPERVISOR" , "DANIEL SCHWEN" 
 Data "GAME EDITOR" , "MICHAEL KAFKE" 
 Data "CAMERA OPERATOR" , "DANIEL SCHWEN" 
 Data "GAME LOADER" , "AMIGA DOS" 
 Data "PUBLICIST" , "HIER KÖNNTE IHR NAME STEHEN" 
 Data "BOOM OPERATOR" , "DIFFERENT COMPUTER MAGAZINES" 
 Data "CABLE PERSON" , "KOMMT RAT...-ELECTRONIC" 
 Data "VIDEO ASSISTANT" , "MICHAEL KAFKE" 
 Data "SOUND EFFECTS EDITOR" , "DE LUCHS SOUND" 
 Data "DIALOGUE EDITOR" , "SSEIG-NUSS ED PROFESSIONAL" 
 Data "ASSISTANT SOUND EDITOR" , "DANIEL SCHWEN" 
 Data "APPRENTICE SOUND EDITOR" , "PROF. MED. OCTA" 
 Data "ADDITIONAL SOUND EFFECTS CREATED BY" , "MICHAEL KAFKE" 
 Data "RECORDIST" , "MICHAEL KAFKE" 
 Data "MUSIC EDITORS" , "PROF. MED. OCTA" 
 Data "" , "SOUNDTRECKER" 
 Data "MUSIC SCORE PRODUCED AT" , "WUNSTORF" 
 Data "" , "GROßENHEIDORN" 
 Data "ORCHESTRA CONDUCTED BY" , "OLIVER HÄGER" 
 Data "" , "DANIEL SCHWEN" 
 Data "ORCHESTRA CONTRACTOR" , "ST-01" 
 Data "MUSIC PREPARATION" , "OLIVER HÄGER" 
 Data "" , "DANIEL SCHWEN" 
 Data "MUSIC SCORING MIXER" , "OLIVER HÄGER" 
 Data "" , "DANIEL SCHWEN" 
 Data "MUSIC SCORE RECORDED AT" , "WUNSTORF" 
 Data "" , "GROßENHEIDORN" 
 Data "COSTUMES SUPERVISOR" , "MICHAEL KAFKE" 
 Data "CUSTUMER" , "DANIEL SCHWEN" 
 Data "CUTTER" , "MICHAEL KAFKE" 
 Data "MAKE-UP ARTIST" , "DANIEL SCHWEN" 
 Data "HAIR STYLIST" , "DANIEL SCHWEN" 
 Data "ASSISTANT PROPERTY MASTER" , "RENATE KAFKE" 
 Data "PROPERTY PERSON" , "MICHAEL KAFKE" 
 Data "PRODUCTION COORDINATOR" , "MICHAEL KAFKE" 
 Data "ASSISTANT PRODUCTION COORDINATOR" , "DANIEL SCHWEN" 
 Data "ASSISTANT TO MR. KAFKE" , "DANIEL SCHWEN" 
 Data "ASSISTANT TO MR. SCHWEN" , "MICHAEL KAFKE" 
 Data "STORYBOARD ARTIST" , "MICHAEL KAFKE" 
 Data "CHIEF LIGHTING TECHNICIAN" , "DANIEL SCHWEN" 
 Data "TECHNICIAN" , "MICHAEL KAFKE" 
 Data "PAINT FOREPERSON" , "DANIEL SCHWEN" 
 Data "SECURITY" , "BOOT EX V3.2" 
 Data "FIRST AID" , "KLICKSTART RELEASE 2" 
 Data "TITLES AND OPTICAL EFFECTS BY" , "DANIEL SCHWEN" 
 Data "MAIN TITLE DESIGN" , "DANIEL SCHWEN" 
 Data "§" , "" 
 
 Data 4 , 98 
 
 Data 2 , "BANANEN-KRESSESUPPE" 
 
 Data 3 , 12 
 Data "3/4L GEMÜSEBRÜHE, 3 GROßE BANANEN, SAFT 1 ZITRONE, 1 KÄSTCHEN" 
 Data "KRESSE, 2 EIGELBE, 6 EßL. CREME FRAICHE, 1 PRISE MUSKATNUß, SALZ" 
 Data "" 
 Data "- GEMÜSEBRÜHE ERHITZEN" 
 Data "- BANANEN IN SCHEIBEN SCHNEIDEN, MIT ZITRONENSAFT BETRÄUFELN" 
 Data "- KRESSE WASCHEN UND ABTROPFEN LASSEN, 4 KLEINE BÜNDCHEN" 
 Data "BEISEITE LEGEN" 
 Data "- RESTLICHE KRESSE MIT BANANEN UND 1/3 DER BRÜHE PÜRIEREN" 
 Data "- PÜREE IN DIE RESTLICHE BRÜHE RÜHREN UND ZUGEDECKT ERWÄRMEN" 
 Data "- EIGELB, CREME FRAICHE UND MUSKATNUß MIXEN UND IN DIE SUPPE" 
 Data "RÜHREN UND MIT SALZ ABSCHMECKEN" 
 Data "- JEDE PORTION MIT EINEM BUND KRESSE SERVIEREN" , 0 
 
 Data 4 , 98 
 
 Data 3 
 Data 4 , Chr$ ( 34 ) + "WTB17" + Chr$ ( 34 ) , "MUSIC BY OLIVER HÄGER" 
 Data "LYRICS BY HÄGER" , "PERFORMED BY THE SOUNDTRACKER ORCHESTRA" , 0 
 
 Data 4 , 20 
 
 Data 3 
 Data 3 , Chr$ ( 34 ) + "KUHKAFF" + Chr$ ( 34 ) , "MUSIC BY DANIEL SCHWEN" 
 Data "PERFORMED BY OCTAMED, THE PROFESSIONAL" , 0 
 
 Data 4 , 15 
 
 Data 3 
 Data 1 , "MUSIC IS NOT AVAILABLE ON ANY CASSETTES OR RECORDS." , 0 
 
 Data 4 , 98 
 
 Data 3 
 Data 2 , "COPYRIGHT (C) MCMXCIII BY" , "HIER KÖNNTE IHR NAME STEHEN" , 0 
 
 Data 4 , 20 
 
 Data 3 
 Data 2 , "PROGRAMMED AT" , "WUNSTORF" , 0 
 
 Data 4 , 20 
 
 Data 3 
 Data 2 , "COLOUR BY" , "DELUXE PAINT" , 0 
 
 Data 4 , 40 
 
 Data 3 
 Data 1 , "FILMED WITH" , 0 
 
 Data 5 
 
 Data 4 , 80 
 
 Data 6 
 
 Data 4 , 80 
 
 Data 7 
 
 Data 4 , 98 
 
 Data 3 
 Data 6 , "THE PERSONS AND EVENTS IN THIS UNMOTIONED PICTURE AREN'T FIC-" 
 Data "TITIOUS. ANY SIMILARITY TO ACTUAL PERSONS OR EVENTS IS THROUGHOUT" 
 Data "INTENTIONAL. THIS UNMOTIONED PICTURE IS PROTECTED UNDER LAWS OF" 
 Data "THE FEDERAL REPUBLIC OF GERMANY AND OTHER COUNTRIES. UNAUTHORIZED" 
 Data "DUBLICATIONS, DISTRIBUTION OR EXHIBITION MAY RESULT IN CIVIL " 
 Data "LIABILITY AND CRIMAL PROSECUTION" , 0 
 
 Data 0 
 
 Procedure iconbank$ [ bankmodus ] 
    Shared iconbank 
    If bankmodus = 0 And iconbank = 1 
       Bank Swap 2 , 10 
       iconbank = 0 
    EndIf 
    If bankmodus = 0 And iconbank = 2 
       Bank Swap 2 , 9 
       iconbank = 0 
    EndIf 
    If bankmodus = 1 And iconbank = 0 
       Bank Swap 2 , 10 
       iconbank = 1 
    EndIf 
    If bankmodus = 1 And iconbank = 2 
       Bank Swap 2 , 9 
       Bank Swap 2 , 10 
       iconbank = 1 
    EndIf 
    If bankmodus = 2 And iconbank = 0 
       Bank Swap 2 , 9 
       iconbank = 2 
    EndIf 
    If bankmodus = 2 And iconbank = 1 
       Bank Swap 2 , 10 
       Bank Swap 2 , 9 
       iconbank = 2 
    EndIf 
    Wait Vbl 
 End Proc 
 Procedure screco$ 
    Wait Vbl 
    For i = 0 To 127 Step 8 
       Screen Copy 2 , 0 , i , 320 , i + 8 To 0 , 0 , i 
    Next 
    Wait Vbl 
 End Proc 
 Procedure txt$ [ t$ ] 
    Shared name$ 
    zeilen = 0 
    stelle = 2 
    Screen 0 
    Do 
       stelle2 = Instr$ ( t$ , Chr$ ( 10 ) , stelle ) 
       txt$ = Mid$ ( t$ , stelle , stelle2 - stelle ) 
       If txt$ = "*" 
          Exit 
       EndIf 
       stelle = stelle2 + 1 
       Inc zeilen 
    Loop 
    h = zeilen * 7 + 4 
    w = 0 
    stelle = 2 
    For i = 1 To zeilen 
       stelle2 = Instr$ ( t$ , Chr$ ( 10 ) , stelle ) 
       txt$ = Mid$ ( t$ , stelle , stelle2 - stelle ) 
       t = Text Length ( txt$ ) 
       w = Max ( w , t ) 
       stelle = stelle2 + 1 
    Next 
    Add w , 5 
    x = Rnd ( 315 - w ) + 3 
    y = Rnd ( 127 - h ) + 1 
    pos = 1 
    txt$ = "" 
    Screen Copy 4 , x - 3 , y - 1 , x + w - 3 , y + h - 1 To 0 , x , y , 11100000 
    If ( name$ = "GOG" ) Or ( name$ = "GOK" ) 
       Ink 30 , 0 
    Else 
       Ink 1 
    EndIf 
    Box x + 1 , y + 1 To x + w - 2 , y + h - 2 
    Gr Writing 0 
    stelle = 2 
    Add y , 6 
    For i = 1 To zeilen 
       stelle2 = Instr$ ( t$ , Chr$ ( 10 ) , stelle ) 
       txt$ = Mid$ ( t$ , stelle , stelle2 - stelle ) 
       If txt$ = "*" 
          Exit 
       EndIf 
       Text x + 3 , y + 1 , txt$ 
       stelle = stelle2 + 1 
       Add y , 7 
    Next 
    Gr Writing 1 
 End Proc 
 Procedure cursor$ 
    Screen 0 
    Flash 17 , "(777,2)(888,2)(999,2)(aaa,2)(bbb,2)(ccc,2)(ddd,2)(eee,2)(fff,2)(eee,2)(ddd,2)(ccc,2)(bbb,2)(aaa,2)(999,2)(888,2)" 
 End Proc 
 Procedure clickmouse$ 
    While Mouse Click <> 1 
    Wend 
 End Proc 
 Procedure roller_blind$ 
    For i = 0 To 126 Step 2 
       Screen Copy 2 , 0 , i + 1 , 320 , i + 2 To 0 , 0 , i + 1 
       Screen Copy 2 , 0 , 126 - i , 320 , 126 - i + 1 To 0 , 0 , 126 - i 
       Wait Vbl 
    Next 
 End Proc 
 Procedure test_joy$ 
    If Not Exist ( "JOY:" ) 
       Call 'txt$' [ Chr$ ( 10 ) + "BITTE LEGEN SIE DIE ERSTE DISK EIN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       While Not Exist ( "JOY:" ) 
       Wend 
       Call 'screco$' 
    EndIf 
 End Proc 
 Procedure test_joy2$ 
    Shared pfad$ 
    If Not Exist ( pfad$ ) 
       Call 'txt$' [ Chr$ ( 10 ) + "BITTE LEGEN SIE DIE ZWEITE DISK EIN !" + Chr$ ( 10 ) + "*" + Chr$ ( 10 ) ] 
       While Not Exist ( pfad$ ) 
       Wend 
       Call 'screco$' 
    EndIf 
 End Proc 
 Procedure befehle_runter$ 
    y# = Float 209 
    a# = Float 0.0 
    While y# < 309 
       Screen Display 1 , 128 , y# , , 
       Wait Vbl 
       a# = a# + Float 0.30000001192092896 
       y# = y# + a# 
    Wend 
    Screen Display 1 , 128 , 309 , , 
 End Proc 
 Procedure befehle_hoch$ 
    y# = 309 
    a# = Float 7.800000190734863 
    While y# > 209 
       y# = y# - a# 
       a# = a# - Float 0.30000001192092896 
       Screen Display 1 , 128 , y# , , 
       Wait Vbl 
    Wend 
    Screen Display 1 , 128 , 209 , , 
 End Proc 
 Procedure eingabe$ [ x , y , laenge , eingabe$ , sprung , m ] 
    Shared name$ 
    Screen 0 
    Gr Writing 1 
    Gosub farbe 
    Text x , y , eingabe$ + " " 
    Ink 0 , 17 
    t = Text Length ( eingabe$ ) 
    Text x + t , y , " " 
    
    Label eingabe: 
    a$ = "" 
    While a$ = "" 
       a$ = Inkey$ 
    Wend 
    If a$ = Chr$ ( 8 ) And Len ( eingabe$ ) > 0 
       eingabe$ = Left$ ( eingabe$ , Len ( eingabe$ ) - 1 ) 
       Gosub farbe 
       Text x , y , eingabe$ + "   " 
       Ink 0 , 17 
       t = Text Length ( eingabe$ ) 
       Text x + t , y , " " 
    EndIf 
    If a$ = Chr$ ( 13 ) 
       Goto eingabe2 
    EndIf 
    If ( sprung = 1 ) And ( a$ = " " ) 
       Goto eingabe 
    EndIf 
    If m = 1 And ( a$ < Chr$ ( 32 ) Or a$ > Chr$ ( 126 ) ) 
       Goto eingabe 
    EndIf 
    If m = 2 And ( a$ < Chr$ ( 48 ) Or a$ > Chr$ ( 57 ) ) 
       Goto eingabe 
    EndIf 
    If Len ( eingabe$ ) < laenge 
       eingabe$ = eingabe$ + Upper$ ( a$ ) 
       Gosub farbe 
       Text x , y , eingabe$ + "   " 
       Ink 0 , 17 
       t = Text Length ( eingabe$ ) 
       Text x + t , y , " " 
    EndIf 
    Goto eingabe 

    Label farbe: 
    If ( name$ = "GOG" ) Or ( name$ = "GOK" ) 
       Ink 30 , 0 
    Else 
       Ink 1 , 0 
    EndIf 
    Return 

    Label eingabe2: 
    Gosub farbe 
    t = Text Length ( eingabe$ ) 
    Text x + t , y , "   " 
 End Proc [ eingabe$ ] 
 Procedure ja_nein$ 
    Call 'iconbank$' [ 0 ] 
    Screen 1 
    Put Cblock 2 , 0 , 0 
    Get Icon Palette 
    Call 'befehle_hoch$' 
    Reset Zone 
    Set Zone 1 , 99 , 32 To 156 , 53 
    Set Zone 2 , 157 , 32 To 214 , 53 
    Limit Mouse 
    
    Label jn2: 
    While Mouse Key <> 1 
    Wend 
    mz = Mouse Zone 
    If mz = 0 
       Goto jn2 
    EndIf 
    If mz = 1 
       Paste Icon 99 , 32 , 33 
    Else 
       Paste Icon 157 , 32 , 34 
    EndIf 
    Call 'maus_aus$' 
    While Mouse Key = 1 
    Wend 
    Call 'maus_an$' 
    If mz = 1 
       Paste Icon 99 , 32 , 31 
    Else 
       Paste Icon 157 , 32 , 32 
    EndIf 
    Call 'maus_an$' 
 End Proc [ mz ] 
 Procedure punkte$ [ pks ] 
    Shared punkte 
    Add punkte , pks 
 End Proc 
 Procedure unterhaltung_laden$ [ unterhaltung ] 
    Shared frage$ ( ) , antwort$ ( ) , ja$ ( ) , nein$ ( ) , erscheinen$ ( ) , alterscheinen$ ( ) , fragen , pfad$ 
    Call 'maus_aus$' 
    For i = 1 To 10 
       frage$ ( i ) = "" 
       antwort$ ( i ) = "" 
       ja$ ( i ) = "" 
       nein$ ( i ) = "" 
       erscheinen$ ( i ) = 12 
    Next 
    Call 'test_joy2$' 
    Open In 1 , pfad$ + "Texte/Unterhaltung_" + ( Str$ ( unterhaltung ) - " " ) + ".Txt" 
    Set Input 10 , - 1 
    Input # 1 , fragen 
    For i = 1 To fragen 
       Line Input # 1 , frage$ ( i ) 
       Input # 1 , erscheinen$ ( i ) 
       alterscheinen$ ( i ) = erscheinen$ ( i ) 
    Next 
    frage$ ( 11 ) = "UNTERHALTUNG BEENDEN" 
    erscheinen$ ( 11 ) = 0 
    Set Input 42 , - 1 
    i = 1 
    befehl$ = "" 
    Do 
       If befehl$ = "" 
          Input # 1 , befehl$ 
       EndIf 
       If befehl$ = ( "TEXT" + Chr$ ( 10 ) ) 
          Line Input # 1 , antwort$ ( i ) 
          antwort$ ( i ) = antwort$ ( i ) + "*" + Chr$ ( 10 ) 
          Set Input 10 , - 1 
          Input # 1 , k$ 
          Set Input 42 , - 1 
          befehl$ = "" 
       EndIf 
       If befehl$ = "" 
          Input # 1 , befehl$ 
       EndIf 
       If befehl$ = ( "J/N" + Chr$ ( 10 ) ) 
          Line Input # 1 , ja$ ( i ) 
          ja$ ( i ) = ja$ ( i ) + "*" + Chr$ ( 10 ) 
          Line Input # 1 , nein$ ( i ) 
          nein$ ( i ) = nein$ ( i ) + "*" + Chr$ ( 10 ) 
          Set Input 10 , - 1 
          Input # 1 , k$ 
          Set Input 42 , - 1 
          befehl$ = "" 
       EndIf 
       Inc i 
       If i > fragen 
          Exit 
       EndIf 
    Loop 
    Close 1 
    Call 'maus_an$' 
 End Proc 
 Procedure unterhaltung$ 
    Dim fragen$ ( 11 ) 
    Shared frage$ ( ) , antwort$ ( ) , ja$ ( ) , nein$ ( ) , erscheinen$ ( ) , alterscheinen$ ( ) , gefragt , anzahl , ym 
    gefragt = 0 
    
    Label unterhaltung: 
    Gosub init_fragen 
    Screen Copy 4 , 1 , 1 , 316 , anzahl * 8 + 4 To 0 , 1 , 1 , 11100000 
    Screen 0 
    Ink 1 
    Box 2 , 2 To 315 , ( anzahl * 8 ) + 3 
    Gr Writing 0 
    Gosub zeige_fragen 
    frage = 0 
    
    Label unterhaltung2: 
    While Mouse Click <> 1 
       ym = ( Y Screen ( Y Mouse ) + 4 ) / 8 
       If ym <> frage And ym > 0 And ym < anzahl + 1 
          Gosub zeige_fragen 
          Ink 17 , 1 
          t = Text Length ( frage$ ( fragen$ ( ym ) ) ) 
          Text 160 - t / 2 , ym * 8 + 1 , frage$ ( fragen$ ( ym ) ) 
          frage = ym 
       EndIf 
       If ym < 1 Or ym > anzahl 
          Gosub zeige_fragen 
          frage = 0 
       EndIf 
    Wend 
    If frage = 0 
       Goto unterhaltung2 
    EndIf 
    If frage = anzahl 
       Call 'screco$' 
       Pop Proc 
    EndIf 
    Bset.<> fragen$ ( frage ) - 1 , gefragt 
    tx$ = antwort$ ( fragen$ ( frage ) ) 
    Call 'txt$' [ tx$ ] 
    Call 'clickmouse$' 
    erschfr = alterscheinen$ ( fragen$ ( frage ) ) 
    If Sgn ( erschfr ) = - 1 
       For i = 1 To 11 
          If alterscheinen$ ( i ) = erschfr 
             alterscheinen$ ( i ) = 12 
             erscheinen$ ( i ) = 12 
          EndIf 
       Next 
    EndIf 
    erscheinen$ ( fragen$ ( frage ) ) = 12 
    alterscheinen$ ( fragen$ ( frage ) ) = 12 
    For i = 1 To 11 
       If Abs ( erscheinen$ ( i ) ) = fragen$ ( frage ) 
          erscheinen$ ( i ) = 0 
       EndIf 
    Next 
    If ja$ ( fragen$ ( frage ) ) <> "" 
       Call 'befehle_runter$' 
       Screen 1 
       Get Cblock 3 , 0 , 0 , 320 , 90 
       Call 'ja_nein$' 
       If Param = 1 
          Call 'txt$' [ ja$ ( fragen$ ( frage ) ) ] 
       Else 
          Call 'txt$' [ nein$ ( fragen$ ( frage ) ) ] 
       EndIf 
       Call 'clickmouse$' 
       Gosub befehlsinit 
    EndIf 
    Call 'screco$' 
    Goto unterhaltung 
    
    Label init_fragen: 
    anzahl = 0 
    For i = 1 To 11 
       If erscheinen$ ( i ) = 0 
          Inc anzahl 
          fragen$ ( anzahl ) = i 
       EndIf 
    Next 
    If anzahl = 1 
       Pop Proc 
    EndIf 
    Return 
    
    Label zeige_fragen: 
    Screen 0 
    Ink 1 , 0 
    y = 1 
    For i = 1 To 11 
       If erscheinen$ ( i ) = 0 
          t = Text Length ( frage$ ( i ) ) 
          Text 160 - t / 2 , ( y * 8 ) + 1 , frage$ ( i ) 
          Inc y 
       EndIf 
    Next 
    Return 
    
    Label befehlsinit: 
    Screen 1 
    Call 'befehle_runter$' 
    Call 'iconbank$' [ 0 ] 
    Put Cblock 3 , 0 , 0 
    Reserve Zone 28 
    Set Zone 1 , 0 , 9 To 57 , 90 
    Set Zone 2 , 58 , 9 To 115 , 44 
    Set Zone 3 , 58 , 46 To 115 , 68 
    Set Zone 4 , 58 , 68 To 115 , 90 
    feld = 5 
    For j = 1 To 3 
       For i = 1 To 8 
          x = 100 + i * 24 
          y = - 6 + j * 24 
          Set Zone feld , x , y To x + 16 , y + 16 
          Inc feld 
       Next 
    Next 
    Call 'befehle_hoch$' 
    Return 
 End Proc 
 Procedure rot$ 
    Screen 0 
    For i = 0 To 31 
       Colour i , Colour ( i ) And 111100000000 
    Next 
 End Proc 
 Procedure init_zones$ 
    Screen 0 
    Reset Zone 
    anz = Deek ( Start ( 8 ) + Length ( 8 ) - 2 ) 
    For i = 1 To anz 
       adr = Start ( 8 ) + ( i - 1 ) * 8 
       x1 = Deek ( adr ) 
       y1 = Deek ( adr + 2 ) 
       x2 = Deek ( adr + 4 ) 
       y2 = Deek ( adr + 6 ) 
       If x2 <> 0 
          Set Zone i , x1 , y1 To x2 , y2 
       EndIf 
    Next 
 End Proc 
 Procedure font$ [ f$ , groesse ] 
    If Not Upper$ ( Right$ ( f$ , 5 ) ) = ".FONT" 
       f$ = f$ + ".Font" 
    EndIf 
    i = 1 
    While Font ( i ) <> "" 
       If Upper$ ( Left$ ( Font ( i ) , 30 ) - " " ) = Upper$ ( f$ ) 
          If Val ( Mid$ ( Font ( i ) , 31 , 2 ) ) = groesse 
             Set Font i 
             Exit 
          EndIf 
       EndIf 
       Inc i 
    Wend 
 End Proc 
 Procedure maus_aus$ 
    Limit Mouse X Mouse , Y Mouse To X Mouse , Y Mouse 
 End Proc 
 Procedure maus_an$ 
    Limit Mouse 128 , 47 To 447 , 297 
 End Proc 
 Procedure verb_raus$ 
    Shared verb 
    Screen 1 
    Call 'iconbank$' [ 0 ] 
    If verb < 10 
       Paste Icon 0 , verb * 9 , verb 
    Else 
       Paste Icon 58 , ( verb - 9 ) * 9 , verb 
    EndIf 
 End Proc 
 Procedure verb_rein$ 
    Shared verb 
    Screen 1 
    Call 'iconbank$' [ 0 ] 
    If verb < 10 
       Paste Icon 0 , verb * 9 , verb + 15 
    Else 
       Paste Icon 58 , ( verb - 9 ) * 9 , verb + 15 
    EndIf 
 End Proc 
 Procedure lopri$ [ x , y , txt$ ] 
    Text 16 + x * 8 , 54 + y * 8 , txt$ 
 End Proc 
 Procedure cursorweg$ 
    Shared s , z , scr$ ( ) 
    Ink 14 , 6 
    Call 'lopri$' [ s , z , Mid$ ( scr$ ( z ) , s + 1 , 1 ) ] 
    Wait Vbl 
 End Proc 
 Procedure cursorhin$ 
    Shared s , z , scr$ ( ) , cc16 , cc17 
    Ink 16 , 17 
    Call 'lopri$' [ s , z , Mid$ ( scr$ ( z ) , s + 1 , 1 ) ] 
    Colour 16 , cc16 
    Colour 17 , cc17 
    Shift Up 25 , 16 , 17 , 1 
    Wait Vbl 
 End Proc 
 Procedure bildaufbau$ 
    Shared scr$ ( ) 
    For i = 0 To 24 
       Call 'lopri$' [ 0 , i , scr$ ( i ) ] 
    Next 
 End Proc 
 Procedure make_screen$ 
    Screen 1 
    Get Block 1 , 0 , 0 , 40 , 80 , 1 
    Screen 0 
    Put Block 2 
    Put Block 1 , 119 , 19 
    Screen Swap 
    Wait Vbl 
 End Proc 
 Procedure p$ 
    Shared p 
    Screen 0 
    Ink 1 , 0 
    Text 232 , 30 , Str$ ( p ) - " " 
 End Proc 
 Procedure klackstrisse$ 
    Shared kates , level , wr , wu 
    Inc kates 
    Screen 0 
    Ink 1 , 0 
    Text 232 , 37 , Str$ ( kates ) - " " 
    If kates Mod 5 = 0 And kates > 0 
       Inc level 
       Call 'level$' 
       If wr > 0 
          Add wr , - 40 
          Add wu , - 4 
       EndIf 
    EndIf 
 End Proc 
 Procedure level$ 
    Shared level 
    Screen 0 
    Ink 1 , 0 
    Text 232 , 44 , Str$ ( level ) - " " 
 End Proc 
 Procedure stats$ 
    Shared stat$ ( ) 
    Ink 0 
    Bar 88 , 5 To 112 , 64 
    For i = 0 To 7 
       Ink 1 , 0 
       Text 90 , 9 + i * 8 , Str$ ( stat$ ( i ) ) - " " 
    Next 
 End Proc 
 Procedure scr$ [ a ] 
    For i = 1 To a 
       Screen Copy 0 , 0 , 1 , 320 , 306 To 0 , 0 , 0 
Code Bytes read 218488 of 218482
